This is pdfTeX, Version 3.141592653-2.6-1.40.24 (TeX Live 2022) (preloaded format=pdflatex 2023.4.22)  24 MAR 2024 08:55
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**main.tex
(./main.tex
LaTeX2e <2022-11-01> patch level 1
L3 programming layer <2023-02-22>
(/usr/local/texlive/2022/texmf-dist/tex/latex/revtex/revtex4-2.cls
Document Class: revtex4-2 2020/10/03 4.2e (https://journals.aps.org/revtex/ for
 documentation)
 Copyright (c) 2019 American Physical Society.
 mailto:revtex@aps.org
 Licensed under the LPPL:
http://www.ctan.org/tex-archive/macros/latex/base/lppl.txt
 Arthur Ogawa <arthur_ogawa at sbcglobal dot net>
 Based on work by David Carlisle <david at dcarlisle.demon.co.uk>
 Version (4.2d,4.2e): Modified by Mark Doyle and Phelype Oleinik
 .
ltxutil[2020/10/03 4.2e utilities package (portions licensed from W. E. Baxter 
web at superscript.com)]
LaTeX Info: Redefining \@centercr on input line 356.
Class revtex4-2 Info: Repairing hyperref-unfriendly LaTeX definition of \mpfoot
note on input line 481.
Class revtex4-2 Info: Repairing broken LateX \@sect on input line 803.
\intertabularlinepenalty=\count185
\@tbpen=\count186
\@arstrutbox@hline=\box51
Class revtex4-2 Info: Repairing broken LaTeX \@xbitor on input line 1834.
Class revtex4-2 Info: Making \typeout \long on input line 2099.
ltxfront[2020/10/03 4.2e frontmatter package (AO,DPC,MD)]
\c@affil=\count187
\c@collab=\count188
\absbox=\box52
ltxgrid[2020/10/03 4.2e page grid package (portions licensed from W. E. Baxter 
web at superscript.com)]
\c@linecount=\count189
\output@latex=\toks16
\box@size@1=\box53
\box@size@2=\box54
\@protection@box=\box55
\@topmark@saved=\toks17
\footins@saved=\box56
\footins@recovered=\box57
\column@recovered=\box58
\pagesofar=\box59
\footsofar=\box60
\pagegrid@col=\count190
Class revtex4-2 Info: Overriding \@vspace, \@vspacer, \@no@pgbk, \@newline, and
 \\  on input line 5665.
\c@part=\count191
\c@section=\count192
\c@subsection=\count193
\c@subsubsection=\count194
\c@paragraph=\count195
\c@subparagraph=\count196
\abovecaptionskip=\skip48
\belowcaptionskip=\skip49
\c@figure=\count197
\fbox@1=\box61
\c@table=\count198
\fbox@2=\box62
\c@video=\count199
\fbox@4=\box63
\@bibdataout=\write3
\widetext@top=\box64
\widetext@bot=\box65

Class revtex4-2 Warning: No Society specified, using default society aps.

(/usr/local/texlive/2022/texmf-dist/tex/latex/revtex/aps4-2.rtx
File: aps4-2 2020/10/03 4.2e (https://journals.aps.org/revtex/ for documentatio
n)
Class revtex4-2 Info: RevTeX society APS selected on input line 40.
)

Class revtex4-2 Warning: No journal specified, using default pra.

Class revtex4-2 Info: APS journal PRA selected on input line 7661.

Class revtex4-2 Warning: No type size specified, using default 10.

(/usr/local/texlive/2022/texmf-dist/tex/latex/revtex/aps10pt4-2.rtx
File: aps10pt4-2 2020/10/03 4.2e (https://journals.aps.org/revtex/ for document
ation)
Class revtex4-2 Info: RevTeX pointsize 10pt selected on input line 39.
)
(/usr/local/texlive/2022/texmf-dist/tex/latex/textcase/textcase.sty
Package: textcase 2022/07/10 v1.03 Text only upper/lower case changing (DPC)
Package textcase Info: Defining Legacy names on input line 20.
)
(/usr/local/texlive/2022/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip16
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
(/usr/local/texlive/2022/texmf-dist/tex/latex/natbib/natbib.sty
Package: natbib 2010/09/13 8.31b (PWD, AO)
\bibhang=\skip50
\bibsep=\skip51
LaTeX Info: Redefining \cite on input line 694.
\c@NAT@ctr=\count266
)
Class revtex4-2 Info: Repairing natbib's \BibitemShut on input line 7665.

(/usr/local/texlive/2022/texmf-dist/tex/latex/revtex/revsymb4-2.sty
Package: revsymb4-2 2020/10/03 4.2e (https://journals.aps.org/revtex/ for docum
entation)
LaTeX Info: Redefining \REV@mathfrak on input line 128.
))
\par ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D \hoo
k_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_compa
re:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_use:
n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode}{en
d}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\use_ii:nn #1#2->#2
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\begin ->\protect \begin  

\begin  #1->\UseHook {env/#1/before}\@ifundefined {#1}{\def \reserved@a {\@late
x@error {Environment #1 undefined}\@eha }}{\def \reserved@a {\def \@currenvir {
#1}\edef \@currenvline {\on@line }\@execute@begin@hook {#1}\csname #1\endcsname
 }}\@ignorefalse \begingroup \@endpefalse \reserved@a 
#1<-document

\UseHook ->\hook_use:n 

\hook_use:n #1->\tl_if_exist:cT {__hook #1}{\__hook_preamble_hook:n {#1}\cs:w _
_hook #1\cs_end: }
#1<-env/document/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-__hook env/document/before

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w __hook env/document/before\cs_end: \scan_
stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__hook_preamble_hook:n {env/document/before}\cs:w __hook env/document/befo
re\cs_end: 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-document

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-document

\@secondoftwo #1#2->#2
#1<-\def \reserved@a {\@latex@error {Environment document undefined}\@eha }
#2<-\def \reserved@a {\def \@currenvir {document}\edef \@currenvline {\on@line 
}\@execute@begin@hook {document}\csname document\endcsname }

\@ignorefalse ->\global \let \if@ignore \iffalse 

\@endpefalse ->\let \if@endpe \iffalse 

\reserved@a ->\def \@currenvir {document}\edef \@currenvline {\on@line }\@execu
te@begin@hook {document}\csname document\endcsname 

\on@line -> on input line \the \inputlineno 

\@execute@begin@hook #1->\expandafter \ifx \csname #1\endcsname \document \endg
roup \gdef \@execute@begin@hook ##1{\UseHook {env/##1/begin}}\@expl@@@initializ
e@all@@ \fi \UseHook {env/#1/begin}
#1<-document

\@expl@@@initialize@all@@ ->\cs_gset_eq:NN \__hook_update_hook_code:n \__hook_i
nitialize_hook_code:n \__hook_debug:n {\prop_gclear:N \g__hook_used_prop }\seq_
map_inline:Nn \g__hook_all_seq {\__hook_update_hook_code:n {##1}}\__hook_debug:
n {\iow_term:x {
All initialized (non-empty) hooks:}\prop_map_inline:Nn \g__hook_used_prop {\iow
_term:x {
 ##1 -> \exp_not:v {__hook ##1} }}}\cs_gset_eq:NN \hook_use:n \__hook_use_initi
alized:n \cs_gset_eq:NN \__hook_preamble_hook:n \use_none:n 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_update_hook_code:n 

\__hook_debug:n #1->
#1<-\prop_gclear:N \g__hook_used_prop 

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\g__hook_all_seq 
#2<-\__hook_update_hook_code:n {##1}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\g__hook_all_seq ->\s__seq \__seq_item:n {para/before}\__seq_item:n {para/after
}\__seq_item:n {para/begin}\__seq_item:n {para/end}\__seq_item:n {begindocument
}\__seq_item:n {begindocument/before}\__seq_item:n {begindocument/end}\__seq_it
em:n {include/before}\__seq_item:n {include/end}\__seq_item:n {include/after}\_
_seq_item:n {include/excluded}\__seq_item:n {selectfont}\__seq_item:n {rmfamily
}\__seq_item:n {sffamily}\__seq_item:n {ttfamily}\__seq_item:n {normalfont}\__s
eq_item:n {expand@font@defaults}\__seq_item:n {bfseries}\__seq_item:n {bfseries
/defaults}\__seq_item:n {mdseries}\__seq_item:n {mdseries/defaults}\__seq_item:
n {enddocument}\__seq_item:n {enddocument/afterlastpage}\__seq_item:n {enddocum
ent/afteraux}\__seq_item:n {enddocument/info}\__seq_item:n {enddocument/end}\__
seq_item:n {insertmark}\__seq_item:n {package/before}\__seq_item:n {class/befor
e}\__seq_item:n {package/after}\__seq_item:n {class/after}\__seq_item:n {file/b
efore}\__seq_item:n {file/after}\__seq_item:n {shipout/before}\__seq_item:n {sh
ipout/after}\__seq_item:n {shipout/foreground}\__seq_item:n {shipout/background
}\__seq_item:n {shipout/firstpage}\__seq_item:n {shipout/lastpage}\__seq_item:n
 {file/dinbrief.cls/after}\__seq_item:n {file/pgfpages.sty/after}\__seq_item:n 
{file/pgfmorepages.sty/after}\__seq_item:n {file/babel.sty/before}\__seq_item:n
 {file/bigfoot.sty/after}\__seq_item:n {file/ulem.sty/after}\__seq_item:n {file
/varwidth.sty/after}\__seq_item:n {file/german.sty/after}\__seq_item:n {file/ng
erman.sty/after}\__seq_item:n {file/memoir.cls/before}\__seq_item:n {file/memoi
r.cls/after}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-para/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-para/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'para/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-para/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@para/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @para/beforehook\cs_end: \scan_stop: \prg
_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@para/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code_do
:nnn {para/before}{legacy}{@para/beforehook}\__hook_tl_gclear:c {@para/beforeho
ok}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-para/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook para/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook para/before\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_para/before_code_prop}{\__hook_tl_gset:co {__ho
ok para/before}{\cs:w __hook_toplevel para/before\exp_after:wN \cs_end: \cs:w _
_hook_next para/before\cs_end: }}{\__hook_if_reversed:nTF {para/before}{\cs_set
_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_g
put:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_r
ight:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:
Nc \l__hook_work_prop {g__hook_para/before_code_prop}\__hook_initialize_single:
ccn {__hook para/before}{g__hook_para/before_labels_clist}{para/before}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {para/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_para/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_para/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_para/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook para/before}{\cs:w __hook_toplevel para/before\e
xp_after:wN \cs_end: \cs:w __hook_next para/before\cs_end: }
#2<-\__hook_if_reversed:nTF {para/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__h
ook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\
cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_
clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook
_para/before_code_prop}\__hook_initialize_single:ccn {__hook para/before}{g__ho
ok_para/before_labels_clist}{para/before}\__hook_debug:n {\exp_args:NNx \prop_g
put:Nnn \g__hook_used_prop {para/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook para/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook para/before 
#2<-\cs:w __hook_toplevel para/before\exp_after:wN \cs_end: \cs:w __hook_next p
ara/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-para/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-para/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'para/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-para/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@para/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @para/afterhook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@para/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {para/after}{legacy}{@para/afterhook}\__hook_tl_gclear:c {@para/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-para/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook para/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook para/after\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_para/after_code_prop}{\__hook_tl_gset:co {__hoo
k para/after}{\cs:w __hook_toplevel para/after\exp_after:wN \cs_end: \cs:w __ho
ok_next para/after\cs_end: }}{\__hook_if_reversed:nTF {para/after}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_para/after_code_prop}\__hook_initialize_single:ccn {_
_hook para/after}{g__hook_para/after_labels_clist}{para/after}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {para/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_para/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_para/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_para/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook para/after}{\cs:w __hook_toplevel para/after\exp
_after:wN \cs_end: \cs:w __hook_next para/after\cs_end: }
#2<-\__hook_if_reversed:nTF {para/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
para/after_code_prop}\__hook_initialize_single:ccn {__hook para/after}{g__hook_
para/after_labels_clist}{para/after}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {para/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook para/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook para/after 
#2<-\cs:w __hook_toplevel para/after\exp_after:wN \cs_end: \cs:w __hook_next pa
ra/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-para/begin

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-para/begin

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'para/begin'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-para/begin

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@para/beginhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @para/beginhook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@para/beginhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {para/begin}{legacy}{@para/beginhook}\__hook_tl_gclear:c {@para/beginhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-para/begin

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook para/begin

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook para/begin\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_para/begin_code_prop}{\__hook_tl_gset:co {__hoo
k para/begin}{\cs:w __hook_toplevel para/begin\exp_after:wN \cs_end: \cs:w __ho
ok_next para/begin\cs_end: }}{\__hook_if_reversed:nTF {para/begin}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_para/begin_code_prop}\__hook_initialize_single:ccn {_
_hook para/begin}{g__hook_para/begin_labels_clist}{para/begin}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {para/begin}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_para/begin_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_para/begin_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_para/begin_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook para/begin}{\cs:w __hook_toplevel para/begin\exp
_after:wN \cs_end: \cs:w __hook_next para/begin\cs_end: }
#2<-\__hook_if_reversed:nTF {para/begin}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
para/begin_code_prop}\__hook_initialize_single:ccn {__hook para/begin}{g__hook_
para/begin_labels_clist}{para/begin}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {para/begin}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook para/begin

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook para/begin 
#2<-\cs:w __hook_toplevel para/begin\exp_after:wN \cs_end: \cs:w __hook_next pa
ra/begin\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-para/end

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-para/end

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'para/end'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-para/end

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@para/endhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @para/endhook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@para/endhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {para/end}{legacy}{@para/endhook}\__hook_tl_gclear:c {@para/endhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-para/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook para/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook para/end\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_para/end_code_prop}{\__hook_tl_gset:co {__hook 
para/end}{\cs:w __hook_toplevel para/end\exp_after:wN \cs_end: \cs:w __hook_nex
t para/end\cs_end: }}{\__hook_if_reversed:nTF {para/end}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_para/end_code_prop}\__hook_initialize_single:ccn {__hook para/e
nd}{g__hook_para/end_labels_clist}{para/end}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {para/end}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_para/end_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_para/end_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_para/end_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook para/end}{\cs:w __hook_toplevel para/end\exp_aft
er:wN \cs_end: \cs:w __hook_next para/end\cs_end: }
#2<-\__hook_if_reversed:nTF {para/end}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_pa
ra/end_code_prop}\__hook_initialize_single:ccn {__hook para/end}{g__hook_para/e
nd_labels_clist}{para/end}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {para/end}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook para/end

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook para/end 
#2<-\cs:w __hook_toplevel para/end\exp_after:wN \cs_end: \cs:w __hook_next para
/end\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-begindocument

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-begindocument

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'begindocument'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-begindocument

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@begindocumenthook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @begindocumenthook\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@begindocumenthook}{\exp_args:Nnnv \__hook_hook_gput_code_
do:nnn {begindocument}{legacy}{@begindocumenthook}\__hook_tl_gclear:c {@begindo
cumenthook}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@begindocumenthook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@begindocumenthook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {begindocument}{legacy}{@begin
documenthook}\__hook_tl_gclear:c {@begindocumenthook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-begindocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_begindocument_code_prop}{\__hook_tl_gset:co {__
hook begindocument}{\cs:w __hook_toplevel begindocument\exp_after:wN \cs_end: \
cs:w __hook_next begindocument\cs_end: }}{\__hook_if_reversed:nTF {begindocumen
t}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\pr
op_set_eq:Nc \l__hook_work_prop {g__hook_begindocument_code_prop}\__hook_initia
lize_single:ccn {__hook begindocument}{g__hook_begindocument_labels_clist}{begi
ndocument}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {beg
indocument}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_begindocument_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_begindocument_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_begindocument_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook begindocument}{\cs:w __hook_toplevel begindocume
nt\exp_after:wN \cs_end: \cs:w __hook_next begindocument\cs_end: }
#2<-\__hook_if_reversed:nTF {begindocument}{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }
{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hoo
k_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__ho
ok_begindocument_code_prop}\__hook_initialize_single:ccn {__hook begindocument}
{g__hook_begindocument_labels_clist}{begindocument}\__hook_debug:n {\exp_args:N
Nx \prop_gput:Nnn \g__hook_used_prop {begindocument}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-begindocument

\g__hook_begindocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_begindocument_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_begindocument_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook begindocument
#3<-g__hook_begindocument_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook begindocument 
#2<-\g__hook_begindocument_labels_clist 
#3<-begindocument

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-begindocument

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-revtex4-2

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {revtex4-2}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {revtex4-2}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {revtex4-2}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-revtex4-2

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_revtex4-2_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_revtex4-2_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_revtex4-2_seq 
#2<-\seq_new:N \l__hook_label_revtex4-2_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_revtex4-2_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_revtex4-2_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_revtex4-2_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_revtex4-2_seq }{\token_to_meaning:N \l__hook_label_revtex4-2_seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_revtex4-2_seq 

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-natbib

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {natbib}

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {natbib}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_natbib_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {natbib}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-natbib

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_natbib_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_natbib_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_natbib_seq 
#2<-\seq_new:N \l__hook_label_natbib_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_natbib_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_natbib_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_natbib_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_natbib_seq }{\token_to_meaning:N \l__hook_label_natbib_seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_natbib_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{begindocument}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{begindocument}}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {revtex4-2}{##1}{\prop_map_break: }{\__hook_app
ly_label_pair:nnn {revtex4-2}{##1}}{\__hook_apply_label_pair:nnn {##1}{revtex4-
2}}{begindocument}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {revtex4-2}{#1}{\pro
p_map_break: }{\__hook_apply_label_pair:nnn {revtex4-2}{#1}}{\__hook_apply_labe
l_pair:nnn {#1}{revtex4-2}}{begindocument}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-revtex4-2
#2<-revtex4-2

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-{begindocument}\__prop_pair:wn natbib\s__prop {\global \let \bibstyle =\@go
bble \let \NAT@@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt
 \@biblabel \fi \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@e
mpty \else \SK@def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##
2]{##3}}\fi \ifx \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \ci
teauthor \SK@citeauthor \let \citefullauthor \SK@citefullauthor \let \citeyear 
\SK@citeyear \fi \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt 
}{}\providecommand {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@cite
x \@citex }{}}
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{begindocument}}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {natbib}{##1}{\prop_map_break: }{\__hook_apply_
label_pair:nnn {natbib}{##1}}{\__hook_apply_label_pair:nnn {##1}{natbib}}{begin
document}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{begindocument}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-revtex4-2

\use_iii:nnn #1#2#3->#3
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{natbib}

\__hook_apply_label_pair:nnn #1#2#3->\__hook_label_if_exist_apply:nnnF {#1}{#2}
{#3}{\__hook_label_if_exist_apply:nnnF {#1}{#2}{??}{}}
#1<-revtex4-2
#2<-natbib
#3<-begindocument

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-begindocument

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-\__hook_label_if_exist_apply:nnnF {revtex4-2}{natbib}{??}{}

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-??

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{begindocument}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-natbib

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{natbib}
#3<-\__hook_apply_label_pair:nnn {natbib}{natbib}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-begindocument
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}\__seq_item:n {natbib}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-revtex4-2

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {revtex4-2}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\l__hook_label_revtex4-2_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{revtex4-2}\tl_set:Nn \
l__hook_rear_tl {revtex4-2}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-revtex4-2

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-natbib

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {natbib}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\l__hook_label_natbib_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{natbib}\tl_set:Nn \l__
hook_rear_tl {natbib}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-natbib

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-natbib

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_begindocument_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-revtex4-2
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-revtex4-2

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {revtex4-2}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_split_aux:w #1\__prop_pair:wn revtex4-2\s__prop #2#3\s__prop_mark #4#5\
s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_retur
n_tl {\q_no_value }}
#1<-\s__prop 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 
#3<-\__prop_pair:wn natbib\s__prop {\global \let \bibstyle =\@gobble \let \NAT@
@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi
 \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@
def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \if
x \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@ci
teauthor \let \citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \f
i \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecomm
and {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}}
#4<-\use_i:nn 
#5<-\__prop_pair:wn revtex4-2\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\open@column@one \@ne \set@colht \@floatplac
ement \@dblfloatplacement }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\open@column@one \@ne \set@colht \@floatplacement \@dblflo
atplacement 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \open@column@one \
@ne \set@colht \@floatplacement \@dblfloatplacement }

\__hook begindocument ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_begindocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_begindocument_labels_clist 
#4<-revtex4-2

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-revtex4-2

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-revtex4-2

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: revtex4-2?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-r

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: revtex4-2}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: revtex4-2

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-revtex4-2
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: revtex4-2

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: revtex4-2
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: revtex4-2

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-revtex4-2

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-revtex4-2

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-revtex4-2

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?revtex4-2 \s__clist_mark ? revtex4-2\s__
clist_mark , \s__clist_mark revtex4-2,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?revtex4-2 
#2<-revtex4-2\s__clist_mark ,
#3<-revtex4-2

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {revtex4-2{}}{\tl_if_empty:nTF {revtex4-2}{\prg_re
turn_true: }{\tl_if_empty:oTF {\use_none:n revtex4-2}{\prg_return_true: }{\prg_
return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-revtex4-2{}

\use_none:n #1->
#1<-{revtex4-2{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {revtex4-2}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n revtex4-2}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{revtex4-2}}
#2<-\exp_not:n {revtex4-2}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_begindocument_labels_clist 
#3<-\g__hook_begindocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_begindocument_labels_clist 

\g__hook_begindocument_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_begindocument_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->revtex4-2

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_revtex4-2_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_revtex4-2_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_revtex4-2_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-natbib
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-natbib

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {natbib}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_split_aux:w #1\__prop_pair:wn natbib\s__prop #2#3\s__prop_mark #4#5\s__
prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return_t
l {\q_no_value }}
#1<-\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@one \@ne \set@colh
t \@floatplacement \@dblfloatplacement }
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn natbib\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\global \let \bibstyle =\@gobble \let \NAT@@
setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi 
\NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@d
ef \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx
 \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@cit
eauthor \let \citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi
 \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecomma
nd {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@
set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites
 \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##
1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeautho
r \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \
citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpacka
geloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardan
d }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \global \let \bibs
tyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let 
\bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \S
K@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@cite
x [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \def \HAR@checkdef {}\els
e \let \citeauthor \SK@citeauthor \let \citefullauthor \SK@citefullauthor \let 
\citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@
index@alt }{}\providecommand {\harvardand }{and}\@ifpackageloaded {babel}{\let 
\org@@citex \@citex }{}}

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement 

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_begindocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_begindocument_labels_clist 
#4<-natbib

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-natbib

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-natbib

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: natbib?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-n

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: natbib}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: natbib

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-natbib
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: natbib

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: natbib\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: natbib\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: natbib\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: natbib
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: natbib

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-natbib

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-natbib

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-natbib

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?natbib \s__clist_mark ? natbib\s__clist_
mark , \s__clist_mark natbib,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?natbib 
#2<-natbib\s__clist_mark ,
#3<-natbib

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {natbib{}}{\tl_if_empty:nTF {natbib}{\prg_return_t
rue: }{\tl_if_empty:oTF {\use_none:n natbib}{\prg_return_true: }{\prg_return_fa
lse: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-natbib{}

\use_none:n #1->
#1<-{natbib{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {natbib}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:n
 natbib}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{natbib}}
#2<-\exp_not:n {natbib}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_begindocument_labels_clist 
#3<-\g__hook_begindocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_begindocument_labels_clist 

\g__hook_begindocument_labels_clist ->revtex4-2

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_begindocument_labels_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->natbib

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_natbib_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_natbib_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_natbib_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\cs:w __hook_toplevel begindocument\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\__hook_toplevel begindocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \__hook_toplevel b
egindocument }

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement \global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@ci
tes \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx 
\SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2
]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@un
defined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefu
llauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageload
ed {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{an
d}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook begindocument 
#3<-\cs:w __hook_next begindocument\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook begindocument 
#2<-\__hook_next begindocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \__hook_next begin
document }

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement \global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@ci
tes \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx 
\SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2
]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@un
defined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefu
llauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageload
ed {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{an
d}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}\__hook_toplevel begind
ocument 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begindocument}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-begindocument/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-begindocument/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'begindocument/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-begindocument/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@begindocument/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @begindocument/beforehook\cs_end: \scan_s
top: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@begindocument/beforehook}{\exp_args:Nnnv \__hook_hook_gpu
t_code_do:nnn {begindocument/before}{legacy}{@begindocument/beforehook}\__hook_
tl_gclear:c {@begindocument/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-begindocument/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument/before\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_begindocument/before_code_prop}{\__hook_tl_gset
:co {__hook begindocument/before}{\cs:w __hook_toplevel begindocument/before\ex
p_after:wN \cs_end: \cs:w __hook_next begindocument/before\cs_end: }}{\__hook_i
f_reversed:nTF {begindocument/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_
tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_s
et_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clis
t_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_beg
indocument/before_code_prop}\__hook_initialize_single:ccn {__hook begindocument
/before}{g__hook_begindocument/before_labels_clist}{begindocument/before}\__hoo
k_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begindocument/befor
e}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_begindocument/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_begindocument/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_begindocument/before_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook begindocument/before}{\cs:w __hook_toplevel begi
ndocument/before\exp_after:wN \cs_end: \cs:w __hook_next begindocument/before\c
s_end: }
#2<-\__hook_if_reversed:nTF {begindocument/before}{\cs_set_eq:NN \__hook_tl_gpu
t:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_le
ft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN
 \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop
 {g__hook_begindocument/before_code_prop}\__hook_initialize_single:ccn {__hook 
begindocument/before}{g__hook_begindocument/before_labels_clist}{begindocument/
before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begind
ocument/before}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-begindocument/before

\g__hook_begindocument/before_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_begindocument/before_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_begindocument/before_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook begindocument/before
#3<-g__hook_begindocument/before_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook begindocument/before 
#2<-\g__hook_begindocument/before_labels_clist 
#3<-begindocument/before

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-begindocument/before

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\document@init
hook }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-revtex4-2
#2<-\document@inithook 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-revtex4-2

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {revtex4-2}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {revtex4-2}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {revtex4-2}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-revtex4-2

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_revtex4-2_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_revtex4-2_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_revtex4-2_seq 
#2<-\seq_new:N \l__hook_label_revtex4-2_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_revtex4-2_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_revtex4-2_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{begindocument/before}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\document@init
hook }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{begindocument/before}}
#1<-revtex4-2
#2<-\document@inithook 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {revtex4-2}{##1}{\prop_map_break: }{\__hook_app
ly_label_pair:nnn {revtex4-2}{##1}}{\__hook_apply_label_pair:nnn {##1}{revtex4-
2}}{begindocument/before}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\document@init
hook }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {revtex4-2}{#1}{\pro
p_map_break: }{\__hook_apply_label_pair:nnn {revtex4-2}{#1}}{\__hook_apply_labe
l_pair:nnn {#1}{revtex4-2}}{begindocument/before}
#1<-revtex4-2
#2<-\document@inithook 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-revtex4-2
#2<-revtex4-2

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-begindocument/before
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-revtex4-2

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {revtex4-2}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\l__hook_label_revtex4-2_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{revtex4-2}\tl_set:Nn \
l__hook_rear_tl {revtex4-2}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-revtex4-2

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument/before 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_begindocument/before_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/befor
e_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for
 \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_t
l }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csnam
e:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end
: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__h
ook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__ho
ok_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-revtex4-2
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/befor
e_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for
 \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_t
l }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csnam
e:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end
: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__h
ook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__ho
ok_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_d
ecr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l
__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument/before 
\l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/before_labels_c
list \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-revtex4-2

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {revtex4-2}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\document@init
hook }

\__prop_split_aux:w #1\__prop_pair:wn revtex4-2\s__prop #2#3\s__prop_mark #4#5\
s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_retur
n_tl {\q_no_value }}
#1<-\s__prop 
#2<-\document@inithook 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn revtex4-2\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\document@inithook }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\document@inithook 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument/before 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\document@inithook 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument/before 
#2<-\document@inithook 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument/before \document@i
nithook }

\__hook begindocument/before ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_begindocument/before_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_begindocument/before_labels_clist 
#4<-revtex4-2

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-revtex4-2

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-revtex4-2

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: revtex4-2?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-r

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: revtex4-2}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: revtex4-2

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-revtex4-2
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: revtex4-2

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: revtex4-2
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: revtex4-2

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-revtex4-2

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-revtex4-2

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-revtex4-2

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?revtex4-2 \s__clist_mark ? revtex4-2\s__
clist_mark , \s__clist_mark revtex4-2,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?revtex4-2 
#2<-revtex4-2\s__clist_mark ,
#3<-revtex4-2

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {revtex4-2{}}{\tl_if_empty:nTF {revtex4-2}{\prg_re
turn_true: }{\tl_if_empty:oTF {\use_none:n revtex4-2}{\prg_return_true: }{\prg_
return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-revtex4-2{}

\use_none:n #1->
#1<-{revtex4-2{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {revtex4-2}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n revtex4-2}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{revtex4-2}}
#2<-\exp_not:n {revtex4-2}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_begindocument/before_labels_clist 
#3<-\g__hook_begindocument/before_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_begindocument/before_labels_clist 

\g__hook_begindocument/before_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_begindocument/before_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->revtex4-2

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_revtex4-2_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_revtex4-2_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_revtex4-2_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/befor
e_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for
 \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_t
l }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csnam
e:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end
: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__h
ook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__ho
ok_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/befor
e_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for
 \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_t
l }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csnam
e:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end
: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__h
ook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__ho
ok_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_d
ecr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l
__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument/before 
\l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument/before_labels_c
list \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument/before 
#3<-\cs:w __hook_toplevel begindocument/before\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument/before 
#2<-\__hook_toplevel begindocument/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument/before \__hook_top
level begindocument/before }

\__hook begindocument/before ->\document@inithook 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook begindocument/before 
#3<-\cs:w __hook_next begindocument/before\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook begindocument/before 
#2<-\__hook_next begindocument/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument/before \__hook_nex
t begindocument/before }

\__hook begindocument/before ->\document@inithook \__hook_toplevel begindocumen
t/before 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begindocument/before}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-begindocument/end

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-begindocument/end

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'begindocument/end'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-begindocument/end

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@begindocument/endhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @begindocument/endhook\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@begindocument/endhook}{\exp_args:Nnnv \__hook_hook_gput_c
ode_do:nnn {begindocument/end}{legacy}{@begindocument/endhook}\__hook_tl_gclear
:c {@begindocument/endhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-begindocument/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument/end\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_begindocument/end_code_prop}{\__hook_tl_gset:co
 {__hook begindocument/end}{\cs:w __hook_toplevel begindocument/end\exp_after:w
N \cs_end: \cs:w __hook_next begindocument/end\cs_end: }}{\__hook_if_reversed:n
TF {begindocument/end}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn
 \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hoo
k_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clis
t_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_begindocument/end_
code_prop}\__hook_initialize_single:ccn {__hook begindocument/end}{g__hook_begi
ndocument/end_labels_clist}{begindocument/end}\__hook_debug:n {\exp_args:NNx \p
rop_gput:Nnn \g__hook_used_prop {begindocument/end}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_begindocument/end_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_begindocument/end_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_begindocument/end_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook begindocument/end}{\cs:w __hook_toplevel begindo
cument/end\exp_after:wN \cs_end: \cs:w __hook_next begindocument/end\cs_end: }
#2<-\__hook_if_reversed:nTF {begindocument/end}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_begindocument/end_code_prop}\__hook_initialize_single:ccn {__hook begind
ocument/end}{g__hook_begindocument/end_labels_clist}{begindocument/end}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begindocument/end}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook begindocument/end

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook begindocument/end 
#2<-\cs:w __hook_toplevel begindocument/end\exp_after:wN \cs_end: \cs:w __hook_
next begindocument/end\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-include/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-include/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'include/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-include/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@include/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @include/beforehook\cs_end: \scan_stop: \
prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@include/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code
_do:nnn {include/before}{legacy}{@include/beforehook}\__hook_tl_gclear:c {@incl
ude/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-include/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook include/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook include/before\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_include/before_code_prop}{\__hook_tl_gset:co {_
_hook include/before}{\cs:w __hook_toplevel include/before\exp_after:wN \cs_end
: \cs:w __hook_next include/before\cs_end: }}{\__hook_if_reversed:nTF {include/
before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN 
\__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV
 }\prop_set_eq:Nc \l__hook_work_prop {g__hook_include/before_code_prop}\__hook_
initialize_single:ccn {__hook include/before}{g__hook_include/before_labels_cli
st}{include/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_
prop {include/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_include/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_include/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_include/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook include/before}{\cs:w __hook_toplevel include/be
fore\exp_after:wN \cs_end: \cs:w __hook_next include/before\cs_end: }
#2<-\__hook_if_reversed:nTF {include/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \
__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV 
}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__h
ook_include/before_code_prop}\__hook_initialize_single:ccn {__hook include/befo
re}{g__hook_include/before_labels_clist}{include/before}\__hook_debug:n {\exp_a
rgs:NNx \prop_gput:Nnn \g__hook_used_prop {include/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook include/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook include/before 
#2<-\cs:w __hook_toplevel include/before\exp_after:wN \cs_end: \cs:w __hook_nex
t include/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-include/end

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-include/end

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'include/end'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-include/end

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@include/endhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @include/endhook\cs_end: \scan_stop: \prg
_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@include/endhook}{\exp_args:Nnnv \__hook_hook_gput_code_do
:nnn {include/end}{legacy}{@include/endhook}\__hook_tl_gclear:c {@include/endho
ok}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-include/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook include/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook include/end\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_include/end_code_prop}{\__hook_tl_gset:co {__ho
ok include/end}{\cs:w __hook_toplevel include/end\exp_after:wN \cs_end: \cs:w _
_hook_next include/end\cs_end: }}{\__hook_if_reversed:nTF {include/end}{\cs_set
_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_g
put:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_r
ight:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:
Nc \l__hook_work_prop {g__hook_include/end_code_prop}\__hook_initialize_single:
ccn {__hook include/end}{g__hook_include/end_labels_clist}{include/end}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {include/end}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_include/end_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_include/end_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_include/end_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook include/end}{\cs:w __hook_toplevel include/end\e
xp_after:wN \cs_end: \cs:w __hook_next include/end\cs_end: }
#2<-\__hook_if_reversed:nTF {include/end}{\cs_set_eq:NN \__hook_tl_gput:Nn \__h
ook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\
cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_
clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook
_include/end_code_prop}\__hook_initialize_single:ccn {__hook include/end}{g__ho
ok_include/end_labels_clist}{include/end}\__hook_debug:n {\exp_args:NNx \prop_g
put:Nnn \g__hook_used_prop {include/end}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook include/end

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook include/end 
#2<-\cs:w __hook_toplevel include/end\exp_after:wN \cs_end: \cs:w __hook_next i
nclude/end\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-include/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-include/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'include/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-include/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@include/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @include/afterhook\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@include/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_
do:nnn {include/after}{legacy}{@include/afterhook}\__hook_tl_gclear:c {@include
/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-include/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook include/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook include/after\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_include/after_code_prop}{\__hook_tl_gset:co {__
hook include/after}{\cs:w __hook_toplevel include/after\exp_after:wN \cs_end: \
cs:w __hook_next include/after\cs_end: }}{\__hook_if_reversed:nTF {include/afte
r}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\pr
op_set_eq:Nc \l__hook_work_prop {g__hook_include/after_code_prop}\__hook_initia
lize_single:ccn {__hook include/after}{g__hook_include/after_labels_clist}{incl
ude/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {inc
lude/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_include/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_include/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_include/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook include/after}{\cs:w __hook_toplevel include/aft
er\exp_after:wN \cs_end: \cs:w __hook_next include/after\cs_end: }
#2<-\__hook_if_reversed:nTF {include/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }
{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hoo
k_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__ho
ok_include/after_code_prop}\__hook_initialize_single:ccn {__hook include/after}
{g__hook_include/after_labels_clist}{include/after}\__hook_debug:n {\exp_args:N
Nx \prop_gput:Nnn \g__hook_used_prop {include/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook include/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook include/after 
#2<-\cs:w __hook_toplevel include/after\exp_after:wN \cs_end: \cs:w __hook_next
 include/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-include/excluded

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-include/excluded

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'include/excluded'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-include/excluded

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@include/excludedhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @include/excludedhook\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@include/excludedhook}{\exp_args:Nnnv \__hook_hook_gput_co
de_do:nnn {include/excluded}{legacy}{@include/excludedhook}\__hook_tl_gclear:c 
{@include/excludedhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-include/excluded

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook include/excluded

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook include/excluded\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_include/excluded_code_prop}{\__hook_tl_gset:co 
{__hook include/excluded}{\cs:w __hook_toplevel include/excluded\exp_after:wN \
cs_end: \cs:w __hook_next include/excluded\cs_end: }}{\__hook_if_reversed:nTF {
include/excluded}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_
set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gpu
t_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_include/excluded_code_p
rop}\__hook_initialize_single:ccn {__hook include/excluded}{g__hook_include/exc
luded_labels_clist}{include/excluded}\__hook_debug:n {\exp_args:NNx \prop_gput:
Nnn \g__hook_used_prop {include/excluded}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_include/excluded_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_include/excluded_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_include/excluded_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook include/excluded}{\cs:w __hook_toplevel include/
excluded\exp_after:wN \cs_end: \cs:w __hook_next include/excluded\cs_end: }
#2<-\__hook_if_reversed:nTF {include/excluded}{\cs_set_eq:NN \__hook_tl_gput:Nn
 \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:N
V }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g_
_hook_include/excluded_code_prop}\__hook_initialize_single:ccn {__hook include/
excluded}{g__hook_include/excluded_labels_clist}{include/excluded}\__hook_debug
:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {include/excluded}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook include/excluded

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook include/excluded 
#2<-\cs:w __hook_toplevel include/excluded\exp_after:wN \cs_end: \cs:w __hook_n
ext include/excluded\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-selectfont

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-selectfont

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'selectfont'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-selectfont

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@selectfonthook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @selectfonthook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@selectfonthook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {selectfont}{legacy}{@selectfonthook}\__hook_tl_gclear:c {@selectfonthook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-selectfont

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook selectfont

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook selectfont\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_selectfont_code_prop}{\__hook_tl_gset:co {__hoo
k selectfont}{\cs:w __hook_toplevel selectfont\exp_after:wN \cs_end: \cs:w __ho
ok_next selectfont\cs_end: }}{\__hook_if_reversed:nTF {selectfont}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_selectfont_code_prop}\__hook_initialize_single:ccn {_
_hook selectfont}{g__hook_selectfont_labels_clist}{selectfont}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {selectfont}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_selectfont_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_selectfont_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_selectfont_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook selectfont}{\cs:w __hook_toplevel selectfont\exp
_after:wN \cs_end: \cs:w __hook_next selectfont\cs_end: }
#2<-\__hook_if_reversed:nTF {selectfont}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
selectfont_code_prop}\__hook_initialize_single:ccn {__hook selectfont}{g__hook_
selectfont_labels_clist}{selectfont}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {selectfont}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook selectfont

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook selectfont 
#2<-\cs:w __hook_toplevel selectfont\exp_after:wN \cs_end: \cs:w __hook_next se
lectfont\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-rmfamily

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-rmfamily

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'rmfamily'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-rmfamily

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@rmfamilyhook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @rmfamilyhook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@rmfamilyhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {rmfamily}{legacy}{@rmfamilyhook}\__hook_tl_gclear:c {@rmfamilyhook}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@rmfamilyhook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@rmfamilyhook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {rmfamily}{legacy}{@rmfamilyho
ok}\__hook_tl_gclear:c {@rmfamilyhook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-rmfamily

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook rmfamily

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook rmfamily\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_rmfamily_code_prop}{\__hook_tl_gset:co {__hook 
rmfamily}{\cs:w __hook_toplevel rmfamily\exp_after:wN \cs_end: \cs:w __hook_nex
t rmfamily\cs_end: }}{\__hook_if_reversed:nTF {rmfamily}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_rmfamily_code_prop}\__hook_initialize_single:ccn {__hook rmfami
ly}{g__hook_rmfamily_labels_clist}{rmfamily}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {rmfamily}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_rmfamily_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_rmfamily_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_rmfamily_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook rmfamily}{\cs:w __hook_toplevel rmfamily\exp_aft
er:wN \cs_end: \cs:w __hook_next rmfamily\cs_end: }
#2<-\__hook_if_reversed:nTF {rmfamily}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_rm
family_code_prop}\__hook_initialize_single:ccn {__hook rmfamily}{g__hook_rmfami
ly_labels_clist}{rmfamily}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {rmfamily}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook rmfamily

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook rmfamily 
#2<-\cs:w __hook_toplevel rmfamily\exp_after:wN \cs_end: \cs:w __hook_next rmfa
mily\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-sffamily

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-sffamily

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'sffamily'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-sffamily

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@sffamilyhook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @sffamilyhook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@sffamilyhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {sffamily}{legacy}{@sffamilyhook}\__hook_tl_gclear:c {@sffamilyhook}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@sffamilyhook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@sffamilyhook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {sffamily}{legacy}{@sffamilyho
ok}\__hook_tl_gclear:c {@sffamilyhook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-sffamily

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook sffamily

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook sffamily\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_sffamily_code_prop}{\__hook_tl_gset:co {__hook 
sffamily}{\cs:w __hook_toplevel sffamily\exp_after:wN \cs_end: \cs:w __hook_nex
t sffamily\cs_end: }}{\__hook_if_reversed:nTF {sffamily}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_sffamily_code_prop}\__hook_initialize_single:ccn {__hook sffami
ly}{g__hook_sffamily_labels_clist}{sffamily}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {sffamily}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_sffamily_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_sffamily_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_sffamily_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook sffamily}{\cs:w __hook_toplevel sffamily\exp_aft
er:wN \cs_end: \cs:w __hook_next sffamily\cs_end: }
#2<-\__hook_if_reversed:nTF {sffamily}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_sf
family_code_prop}\__hook_initialize_single:ccn {__hook sffamily}{g__hook_sffami
ly_labels_clist}{sffamily}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {sffamily}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook sffamily

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook sffamily 
#2<-\cs:w __hook_toplevel sffamily\exp_after:wN \cs_end: \cs:w __hook_next sffa
mily\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-ttfamily

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-ttfamily

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'ttfamily'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-ttfamily

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@ttfamilyhook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @ttfamilyhook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@ttfamilyhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {ttfamily}{legacy}{@ttfamilyhook}\__hook_tl_gclear:c {@ttfamilyhook}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@ttfamilyhook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@ttfamilyhook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {ttfamily}{legacy}{@ttfamilyho
ok}\__hook_tl_gclear:c {@ttfamilyhook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-ttfamily

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook ttfamily

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook ttfamily\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_ttfamily_code_prop}{\__hook_tl_gset:co {__hook 
ttfamily}{\cs:w __hook_toplevel ttfamily\exp_after:wN \cs_end: \cs:w __hook_nex
t ttfamily\cs_end: }}{\__hook_if_reversed:nTF {ttfamily}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_ttfamily_code_prop}\__hook_initialize_single:ccn {__hook ttfami
ly}{g__hook_ttfamily_labels_clist}{ttfamily}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {ttfamily}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_ttfamily_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_ttfamily_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_ttfamily_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook ttfamily}{\cs:w __hook_toplevel ttfamily\exp_aft
er:wN \cs_end: \cs:w __hook_next ttfamily\cs_end: }
#2<-\__hook_if_reversed:nTF {ttfamily}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_tt
family_code_prop}\__hook_initialize_single:ccn {__hook ttfamily}{g__hook_ttfami
ly_labels_clist}{ttfamily}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {ttfamily}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook ttfamily

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook ttfamily 
#2<-\cs:w __hook_toplevel ttfamily\exp_after:wN \cs_end: \cs:w __hook_next ttfa
mily\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-normalfont

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-normalfont

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'normalfont'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-normalfont

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@normalfonthook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @normalfonthook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@normalfonthook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {normalfont}{legacy}{@normalfonthook}\__hook_tl_gclear:c {@normalfonthook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-normalfont

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook normalfont

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook normalfont\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_normalfont_code_prop}{\__hook_tl_gset:co {__hoo
k normalfont}{\cs:w __hook_toplevel normalfont\exp_after:wN \cs_end: \cs:w __ho
ok_next normalfont\cs_end: }}{\__hook_if_reversed:nTF {normalfont}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_normalfont_code_prop}\__hook_initialize_single:ccn {_
_hook normalfont}{g__hook_normalfont_labels_clist}{normalfont}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {normalfont}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_normalfont_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_normalfont_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_normalfont_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook normalfont}{\cs:w __hook_toplevel normalfont\exp
_after:wN \cs_end: \cs:w __hook_next normalfont\cs_end: }
#2<-\__hook_if_reversed:nTF {normalfont}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
normalfont_code_prop}\__hook_initialize_single:ccn {__hook normalfont}{g__hook_
normalfont_labels_clist}{normalfont}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {normalfont}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook normalfont

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook normalfont 
#2<-\cs:w __hook_toplevel normalfont\exp_after:wN \cs_end: \cs:w __hook_next no
rmalfont\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-expand@font@defaults

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-expand@font@defaults

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'expand@font@defaults'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-expand@font@defaults

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@expand@font@defaultshook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @expand@font@defaultshook\cs_end: \scan_s
top: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@expand@font@defaultshook}{\exp_args:Nnnv \__hook_hook_gpu
t_code_do:nnn {expand@font@defaults}{legacy}{@expand@font@defaultshook}\__hook_
tl_gclear:c {@expand@font@defaultshook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-expand@font@defaults

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook expand@font@defaults

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook expand@font@defaults\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_expand@font@defaults_code_prop}{\__hook_tl_gset
:co {__hook expand@font@defaults}{\cs:w __hook_toplevel expand@font@defaults\ex
p_after:wN \cs_end: \cs:w __hook_next expand@font@defaults\cs_end: }}{\__hook_i
f_reversed:nTF {expand@font@defaults}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_
tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_s
et_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clis
t_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_exp
and@font@defaults_code_prop}\__hook_initialize_single:ccn {__hook expand@font@d
efaults}{g__hook_expand@font@defaults_labels_clist}{expand@font@defaults}\__hoo
k_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {expand@font@default
s}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_expand@font@defaults_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_expand@font@defaults_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_expand@font@defaults_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook expand@font@defaults}{\cs:w __hook_toplevel expa
nd@font@defaults\exp_after:wN \cs_end: \cs:w __hook_next expand@font@defaults\c
s_end: }
#2<-\__hook_if_reversed:nTF {expand@font@defaults}{\cs_set_eq:NN \__hook_tl_gpu
t:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_le
ft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN
 \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop
 {g__hook_expand@font@defaults_code_prop}\__hook_initialize_single:ccn {__hook 
expand@font@defaults}{g__hook_expand@font@defaults_labels_clist}{expand@font@de
faults}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {expand
@font@defaults}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook expand@font@defaults

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook expand@font@defaults 
#2<-\cs:w __hook_toplevel expand@font@defaults\exp_after:wN \cs_end: \cs:w __ho
ok_next expand@font@defaults\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-bfseries

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-bfseries

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'bfseries'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-bfseries

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@bfserieshook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @bfserieshook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@bfserieshook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {bfseries}{legacy}{@bfserieshook}\__hook_tl_gclear:c {@bfserieshook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-bfseries

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook bfseries

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook bfseries\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_bfseries_code_prop}{\__hook_tl_gset:co {__hook 
bfseries}{\cs:w __hook_toplevel bfseries\exp_after:wN \cs_end: \cs:w __hook_nex
t bfseries\cs_end: }}{\__hook_if_reversed:nTF {bfseries}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_bfseries_code_prop}\__hook_initialize_single:ccn {__hook bfseri
es}{g__hook_bfseries_labels_clist}{bfseries}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {bfseries}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_bfseries_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_bfseries_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_bfseries_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook bfseries}{\cs:w __hook_toplevel bfseries\exp_aft
er:wN \cs_end: \cs:w __hook_next bfseries\cs_end: }
#2<-\__hook_if_reversed:nTF {bfseries}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_bf
series_code_prop}\__hook_initialize_single:ccn {__hook bfseries}{g__hook_bfseri
es_labels_clist}{bfseries}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {bfseries}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook bfseries

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook bfseries 
#2<-\cs:w __hook_toplevel bfseries\exp_after:wN \cs_end: \cs:w __hook_next bfse
ries\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-bfseries/defaults

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-bfseries/defaults

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'bfseries/defaults'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-bfseries/defaults

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@bfseries/defaultshook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @bfseries/defaultshook\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@bfseries/defaultshook}{\exp_args:Nnnv \__hook_hook_gput_c
ode_do:nnn {bfseries/defaults}{legacy}{@bfseries/defaultshook}\__hook_tl_gclear
:c {@bfseries/defaultshook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-bfseries/defaults

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook bfseries/defaults

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook bfseries/defaults\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_bfseries/defaults_code_prop}{\__hook_tl_gset:co
 {__hook bfseries/defaults}{\cs:w __hook_toplevel bfseries/defaults\exp_after:w
N \cs_end: \cs:w __hook_next bfseries/defaults\cs_end: }}{\__hook_if_reversed:n
TF {bfseries/defaults}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn
 \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hoo
k_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clis
t_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_bfseries/defaults_
code_prop}\__hook_initialize_single:ccn {__hook bfseries/defaults}{g__hook_bfse
ries/defaults_labels_clist}{bfseries/defaults}\__hook_debug:n {\exp_args:NNx \p
rop_gput:Nnn \g__hook_used_prop {bfseries/defaults}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_bfseries/defaults_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_bfseries/defaults_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_bfseries/defaults_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook bfseries/defaults}{\cs:w __hook_toplevel bfserie
s/defaults\exp_after:wN \cs_end: \cs:w __hook_next bfseries/defaults\cs_end: }
#2<-\__hook_if_reversed:nTF {bfseries/defaults}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_bfseries/defaults_code_prop}\__hook_initialize_single:ccn {__hook bfseri
es/defaults}{g__hook_bfseries/defaults_labels_clist}{bfseries/defaults}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {bfseries/defaults}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook bfseries/defaults

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook bfseries/defaults 
#2<-\cs:w __hook_toplevel bfseries/defaults\exp_after:wN \cs_end: \cs:w __hook_
next bfseries/defaults\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-mdseries

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-mdseries

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'mdseries'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-mdseries

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@mdserieshook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @mdserieshook\cs_end: \scan_stop: \prg_re
turn_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@mdserieshook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nn
n {mdseries}{legacy}{@mdserieshook}\__hook_tl_gclear:c {@mdserieshook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-mdseries

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook mdseries

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook mdseries\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_mdseries_code_prop}{\__hook_tl_gset:co {__hook 
mdseries}{\cs:w __hook_toplevel mdseries\exp_after:wN \cs_end: \cs:w __hook_nex
t mdseries\cs_end: }}{\__hook_if_reversed:nTF {mdseries}{\cs_set_eq:NN \__hook_
tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_g
put_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set
_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wor
k_prop {g__hook_mdseries_code_prop}\__hook_initialize_single:ccn {__hook mdseri
es}{g__hook_mdseries_labels_clist}{mdseries}\__hook_debug:n {\exp_args:NNx \pro
p_gput:Nnn \g__hook_used_prop {mdseries}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_mdseries_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_mdseries_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_mdseries_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook mdseries}{\cs:w __hook_toplevel mdseries\exp_aft
er:wN \cs_end: \cs:w __hook_next mdseries\cs_end: }
#2<-\__hook_if_reversed:nTF {mdseries}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_
set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_cli
st_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_md
series_code_prop}\__hook_initialize_single:ccn {__hook mdseries}{g__hook_mdseri
es_labels_clist}{mdseries}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hoo
k_used_prop {mdseries}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook mdseries

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook mdseries 
#2<-\cs:w __hook_toplevel mdseries\exp_after:wN \cs_end: \cs:w __hook_next mdse
ries\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-mdseries/defaults

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-mdseries/defaults

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'mdseries/defaults'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-mdseries/defaults

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@mdseries/defaultshook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @mdseries/defaultshook\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@mdseries/defaultshook}{\exp_args:Nnnv \__hook_hook_gput_c
ode_do:nnn {mdseries/defaults}{legacy}{@mdseries/defaultshook}\__hook_tl_gclear
:c {@mdseries/defaultshook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-mdseries/defaults

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook mdseries/defaults

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook mdseries/defaults\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_mdseries/defaults_code_prop}{\__hook_tl_gset:co
 {__hook mdseries/defaults}{\cs:w __hook_toplevel mdseries/defaults\exp_after:w
N \cs_end: \cs:w __hook_next mdseries/defaults\cs_end: }}{\__hook_if_reversed:n
TF {mdseries/defaults}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn
 \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hoo
k_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clis
t_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_mdseries/defaults_
code_prop}\__hook_initialize_single:ccn {__hook mdseries/defaults}{g__hook_mdse
ries/defaults_labels_clist}{mdseries/defaults}\__hook_debug:n {\exp_args:NNx \p
rop_gput:Nnn \g__hook_used_prop {mdseries/defaults}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_mdseries/defaults_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_mdseries/defaults_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_mdseries/defaults_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook mdseries/defaults}{\cs:w __hook_toplevel mdserie
s/defaults\exp_after:wN \cs_end: \cs:w __hook_next mdseries/defaults\cs_end: }
#2<-\__hook_if_reversed:nTF {mdseries/defaults}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_mdseries/defaults_code_prop}\__hook_initialize_single:ccn {__hook mdseri
es/defaults}{g__hook_mdseries/defaults_labels_clist}{mdseries/defaults}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {mdseries/defaults}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook mdseries/defaults

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook mdseries/defaults 
#2<-\cs:w __hook_toplevel mdseries/defaults\exp_after:wN \cs_end: \cs:w __hook_
next mdseries/defaults\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-enddocument

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-enddocument

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'enddocument'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-enddocument

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@enddocumenthook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @enddocumenthook\cs_end: \scan_stop: \prg
_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@enddocumenthook}{\exp_args:Nnnv \__hook_hook_gput_code_do
:nnn {enddocument}{legacy}{@enddocumenthook}\__hook_tl_gclear:c {@enddocumentho
ok}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@enddocumenthook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@enddocumenthook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {enddocument}{legacy}{@enddocu
menthook}\__hook_tl_gclear:c {@enddocumenthook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-enddocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_enddocument_code_prop}{\__hook_tl_gset:co {__ho
ok enddocument}{\cs:w __hook_toplevel enddocument\exp_after:wN \cs_end: \cs:w _
_hook_next enddocument\cs_end: }}{\__hook_if_reversed:nTF {enddocument}{\cs_set
_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_g
put:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_r
ight:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:
Nc \l__hook_work_prop {g__hook_enddocument_code_prop}\__hook_initialize_single:
ccn {__hook enddocument}{g__hook_enddocument_labels_clist}{enddocument}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_enddocument_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_enddocument_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_enddocument_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook enddocument}{\cs:w __hook_toplevel enddocument\e
xp_after:wN \cs_end: \cs:w __hook_next enddocument\cs_end: }
#2<-\__hook_if_reversed:nTF {enddocument}{\cs_set_eq:NN \__hook_tl_gput:Nn \__h
ook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\
cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_
clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook
_enddocument_code_prop}\__hook_initialize_single:ccn {__hook enddocument}{g__ho
ok_enddocument_labels_clist}{enddocument}\__hook_debug:n {\exp_args:NNx \prop_g
put:Nnn \g__hook_used_prop {enddocument}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-enddocument

\g__hook_enddocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_enddocument_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_enddocument_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook enddocument
#3<-g__hook_enddocument_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook enddocument 
#2<-\g__hook_enddocument_labels_clist 
#3<-enddocument

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-enddocument

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-revtex4-2
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-revtex4-2

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {revtex4-2}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {revtex4-2}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {revtex4-2}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-revtex4-2

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_revtex4-2_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_revtex4-2_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_revtex4-2_seq 
#2<-\seq_new:N \l__hook_label_revtex4-2_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_revtex4-2_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_revtex4-2_seq 
#2<-\c_empty_seq 

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-natbib
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-natbib

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {natbib}

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {natbib}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_natbib_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {natbib}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-natbib

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_natbib_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_natbib_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_natbib_seq 
#2<-\seq_new:N \l__hook_label_natbib_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_natbib_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_natbib_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{enddocument}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{enddocument}}
#1<-revtex4-2
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {revtex4-2}{##1}{\prop_map_break: }{\__hook_app
ly_label_pair:nnn {revtex4-2}{##1}}{\__hook_apply_label_pair:nnn {##1}{revtex4-
2}}{enddocument}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {revtex4-2}{#1}{\pro
p_map_break: }{\__hook_apply_label_pair:nnn {revtex4-2}{#1}}{\__hook_apply_labe
l_pair:nnn {#1}{revtex4-2}}{enddocument}
#1<-revtex4-2
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-revtex4-2
#2<-revtex4-2

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-{enddocument}\__prop_pair:wn natbib\s__prop {\ifNAT@stdbst \if@filesw \imme
diate \write \@auxout {\string \providecommand \string \NAT@force@numbers {}\st
ring \NAT@force@numbers }\fi \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@u
ndefined \NAT@multiple }
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{enddocument}}
#1<-natbib
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {natbib}{##1}{\prop_map_break: }{\__hook_apply_
label_pair:nnn {natbib}{##1}}{\__hook_apply_label_pair:nnn {##1}{natbib}}{enddo
cument}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{enddocument}
#1<-revtex4-2
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-revtex4-2

\use_iii:nnn #1#2#3->#3
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{natbib}

\__hook_apply_label_pair:nnn #1#2#3->\__hook_label_if_exist_apply:nnnF {#1}{#2}
{#3}{\__hook_label_if_exist_apply:nnnF {#1}{#2}{??}{}}
#1<-revtex4-2
#2<-natbib
#3<-enddocument

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-enddocument

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-\__hook_label_if_exist_apply:nnnF {revtex4-2}{natbib}{??}{}

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-??

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{enddocument}
#1<-natbib
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-natbib

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{natbib}
#3<-\__hook_apply_label_pair:nnn {natbib}{natbib}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-enddocument
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}\__seq_item:n {natbib}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-revtex4-2

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {revtex4-2}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\l__hook_label_revtex4-2_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{revtex4-2}\tl_set:Nn \
l__hook_rear_tl {revtex4-2}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-revtex4-2

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-natbib

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {natbib}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\l__hook_label_natbib_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{natbib}\tl_set:Nn \l__
hook_rear_tl {natbib}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-natbib

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-natbib

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_enddocument_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-revtex4-2
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}\boo
l_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_lab
els_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \
exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument \l__hook_return_tl \__hook_
clist_gput:NV \g__hook_enddocument_labels_clist \l__hook_front_tl \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-revtex4-2

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {revtex4-2}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_split_aux:w #1\__prop_pair:wn revtex4-2\s__prop #2#3\s__prop_mark #4#5\
s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_retur
n_tl {\q_no_value }}
#1<-\s__prop 
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 
#3<-\__prop_pair:wn natbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write 
\@auxout {\string \providecommand \string \NAT@force@numbers {}\string \NAT@for
ce@numbers }\fi \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT
@multiple }
#4<-\use_i:nn 
#5<-\__prop_pair:wn revtex4-2\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\class@enddocumenthook \rvtx@enddocument@pat
ch {}\write@bibliographystyle }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\class@enddocumenthook \rvtx@enddocument@patch {}\write@bi
bliographystyle 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument 
#2<-\class@enddocumenthook \rvtx@enddocument@patch {}\write@bibliographystyle 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument \class@enddocumentho
ok \rvtx@enddocument@patch {}\write@bibliographystyle }

\__hook enddocument ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_enddocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_enddocument_labels_clist 
#4<-revtex4-2

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-revtex4-2

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-revtex4-2

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: revtex4-2?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-r

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: revtex4-2}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: revtex4-2

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-revtex4-2
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: revtex4-2

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: revtex4-2
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: revtex4-2

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-revtex4-2

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-revtex4-2

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-revtex4-2

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?revtex4-2 \s__clist_mark ? revtex4-2\s__
clist_mark , \s__clist_mark revtex4-2,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?revtex4-2 
#2<-revtex4-2\s__clist_mark ,
#3<-revtex4-2

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {revtex4-2{}}{\tl_if_empty:nTF {revtex4-2}{\prg_re
turn_true: }{\tl_if_empty:oTF {\use_none:n revtex4-2}{\prg_return_true: }{\prg_
return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-revtex4-2{}

\use_none:n #1->
#1<-{revtex4-2{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {revtex4-2}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n revtex4-2}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{revtex4-2}}
#2<-\exp_not:n {revtex4-2}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_enddocument_labels_clist 
#3<-\g__hook_enddocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_enddocument_labels_clist 

\g__hook_enddocument_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_enddocument_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->revtex4-2

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_revtex4-2_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_revtex4-2_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_revtex4-2_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-natbib
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}\boo
l_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_lab
els_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \
exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument \l__hook_return_tl \__hook_
clist_gput:NV \g__hook_enddocument_labels_clist \l__hook_front_tl \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-natbib

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {natbib}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocu
menthook \rvtx@enddocument@patch {}\write@bibliographystyle }\__prop_pair:wn na
tbib\s__prop {\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \pro
videcommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \N
AT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple }

\__prop_split_aux:w #1\__prop_pair:wn natbib\s__prop #2#3\s__prop_mark #4#5\s__
prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return_t
l {\q_no_value }}
#1<-\s__prop \__prop_pair:wn revtex4-2\s__prop {\class@enddocumenthook \rvtx@en
ddocument@patch {}\write@bibliographystyle }
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn natbib\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\ifNAT@stdbst \if@filesw \immediate \write \
@auxout {\string \providecommand \string \NAT@force@numbers {}\string \NAT@forc
e@numbers }\fi \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@
multiple }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\stri
ng \providecommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi
 \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument 
#2<-\ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \providecomman
d \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue
 \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument \ifNAT@stdbst \if@fi
lesw \immediate \write \@auxout {\string \providecommand \string \NAT@force@num
bers {}\string \NAT@force@numbers }\fi \fi \NAT@swatrue \let \bibcite \NAT@test
def \NAT@undefined \NAT@multiple }

\__hook enddocument ->\class@enddocumenthook \rvtx@enddocument@patch {}\write@b
ibliographystyle 

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_enddocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_enddocument_labels_clist 
#4<-natbib

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-natbib

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-natbib

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: natbib?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-n

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: natbib}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: natbib

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-natbib
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: natbib

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: natbib\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: natbib\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: natbib\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: natbib
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: natbib

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-natbib

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-natbib

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-natbib

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?natbib \s__clist_mark ? natbib\s__clist_
mark , \s__clist_mark natbib,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?natbib 
#2<-natbib\s__clist_mark ,
#3<-natbib

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {natbib{}}{\tl_if_empty:nTF {natbib}{\prg_return_t
rue: }{\tl_if_empty:oTF {\use_none:n natbib}{\prg_return_true: }{\prg_return_fa
lse: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-natbib{}

\use_none:n #1->
#1<-{natbib{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {natbib}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:n
 natbib}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{natbib}}
#2<-\exp_not:n {natbib}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_enddocument_labels_clist 
#3<-\g__hook_enddocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_enddocument_labels_clist 

\g__hook_enddocument_labels_clist ->revtex4-2

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_enddocument_labels_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->natbib

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_natbib_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_natbib_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_natbib_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
 \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument_labels_clist \l_
_hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl
 }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\
__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
-1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}
}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}\boo
l_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_lab
els_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \
exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument \l__hook_return_tl \__hook_
clist_gput:NV \g__hook_enddocument_labels_clist \l__hook_front_tl \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument 
#3<-\cs:w __hook_toplevel enddocument\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument 
#2<-\__hook_toplevel enddocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument \__hook_toplevel end
document }

\__hook enddocument ->\class@enddocumenthook \rvtx@enddocument@patch {}\write@b
ibliographystyle \ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \
providecommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi
 \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook enddocument 
#3<-\cs:w __hook_next enddocument\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook enddocument 
#2<-\__hook_next enddocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument \__hook_next enddocu
ment }

\__hook enddocument ->\class@enddocumenthook \rvtx@enddocument@patch {}\write@b
ibliographystyle \ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \
providecommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi
 \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple \__hook_t
oplevel enddocument 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-enddocument/afterlastpage

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-enddocument/afterlastpage

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'enddocument/afterlastpage'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-enddocument/afterlastpage

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@enddocument/afterlastpagehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @enddocument/afterlastpagehook\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@enddocument/afterlastpagehook}{\exp_args:Nnnv \__hook_hoo
k_gput_code_do:nnn {enddocument/afterlastpage}{legacy}{@enddocument/afterlastpa
gehook}\__hook_tl_gclear:c {@enddocument/afterlastpagehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-enddocument/afterlastpage

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/afterlastpage

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/afterlastpage\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_enddocument/afterlastpage_code_prop}{\__hook_tl
_gset:co {__hook enddocument/afterlastpage}{\cs:w __hook_toplevel enddocument/a
fterlastpage\exp_after:wN \cs_end: \cs:w __hook_next enddocument/afterlastpage\
cs_end: }}{\__hook_if_reversed:nTF {enddocument/afterlastpage}{\cs_set_eq:NN \_
_hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \c
list_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \
cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__ho
ok_work_prop {g__hook_enddocument/afterlastpage_code_prop}\__hook_initialize_si
ngle:ccn {__hook enddocument/afterlastpage}{g__hook_enddocument/afterlastpage_l
abels_clist}{enddocument/afterlastpage}\__hook_debug:n {\exp_args:NNx \prop_gpu
t:Nnn \g__hook_used_prop {enddocument/afterlastpage}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_enddocument/afterlastpage_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_enddocument/afterlastpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_enddocument/afterlastpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook enddocument/afterlastpage}{\cs:w __hook_toplevel
 enddocument/afterlastpage\exp_after:wN \cs_end: \cs:w __hook_next enddocument/
afterlastpage\cs_end: }
#2<-\__hook_if_reversed:nTF {enddocument/afterlastpage}{\cs_set_eq:NN \__hook_t
l_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gp
ut_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_
eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work
_prop {g__hook_enddocument/afterlastpage_code_prop}\__hook_initialize_single:cc
n {__hook enddocument/afterlastpage}{g__hook_enddocument/afterlastpage_labels_c
list}{enddocument/afterlastpage}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \
g__hook_used_prop {enddocument/afterlastpage}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook enddocument/afterlastpage

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook enddocument/afterlastpage 
#2<-\cs:w __hook_toplevel enddocument/afterlastpage\exp_after:wN \cs_end: \cs:w
 __hook_next enddocument/afterlastpage\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-enddocument/afteraux

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-enddocument/afteraux

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'enddocument/afteraux'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-enddocument/afteraux

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@enddocument/afterauxhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @enddocument/afterauxhook\cs_end: \scan_s
top: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@enddocument/afterauxhook}{\exp_args:Nnnv \__hook_hook_gpu
t_code_do:nnn {enddocument/afteraux}{legacy}{@enddocument/afterauxhook}\__hook_
tl_gclear:c {@enddocument/afterauxhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-enddocument/afteraux

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/afteraux

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/afteraux\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_enddocument/afteraux_code_prop}{\__hook_tl_gset
:co {__hook enddocument/afteraux}{\cs:w __hook_toplevel enddocument/afteraux\ex
p_after:wN \cs_end: \cs:w __hook_next enddocument/afteraux\cs_end: }}{\__hook_i
f_reversed:nTF {enddocument/afteraux}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_
tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_s
et_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clis
t_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_end
document/afteraux_code_prop}\__hook_initialize_single:ccn {__hook enddocument/a
fteraux}{g__hook_enddocument/afteraux_labels_clist}{enddocument/afteraux}\__hoo
k_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument/afterau
x}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_enddocument/afteraux_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_enddocument/afteraux_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_enddocument/afteraux_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook enddocument/afteraux}{\cs:w __hook_toplevel endd
ocument/afteraux\exp_after:wN \cs_end: \cs:w __hook_next enddocument/afteraux\c
s_end: }
#2<-\__hook_if_reversed:nTF {enddocument/afteraux}{\cs_set_eq:NN \__hook_tl_gpu
t:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_le
ft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN
 \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop
 {g__hook_enddocument/afteraux_code_prop}\__hook_initialize_single:ccn {__hook 
enddocument/afteraux}{g__hook_enddocument/afteraux_labels_clist}{enddocument/af
teraux}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddoc
ument/afteraux}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook enddocument/afteraux

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook enddocument/afteraux 
#2<-\cs:w __hook_toplevel enddocument/afteraux\exp_after:wN \cs_end: \cs:w __ho
ok_next enddocument/afteraux\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-enddocument/info

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-enddocument/info

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'enddocument/info'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-enddocument/info

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@enddocument/infohook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @enddocument/infohook\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@enddocument/infohook}{\exp_args:Nnnv \__hook_hook_gput_co
de_do:nnn {enddocument/info}{legacy}{@enddocument/infohook}\__hook_tl_gclear:c 
{@enddocument/infohook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-enddocument/info

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/info

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/info\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_enddocument/info_code_prop}{\__hook_tl_gset:co 
{__hook enddocument/info}{\cs:w __hook_toplevel enddocument/info\exp_after:wN \
cs_end: \cs:w __hook_next enddocument/info\cs_end: }}{\__hook_if_reversed:nTF {
enddocument/info}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_
set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gpu
t_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_enddocument/info_code_p
rop}\__hook_initialize_single:ccn {__hook enddocument/info}{g__hook_enddocument
/info_labels_clist}{enddocument/info}\__hook_debug:n {\exp_args:NNx \prop_gput:
Nnn \g__hook_used_prop {enddocument/info}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_enddocument/info_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_enddocument/info_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_enddocument/info_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook enddocument/info}{\cs:w __hook_toplevel enddocum
ent/info\exp_after:wN \cs_end: \cs:w __hook_next enddocument/info\cs_end: }
#2<-\__hook_if_reversed:nTF {enddocument/info}{\cs_set_eq:NN \__hook_tl_gput:Nn
 \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:N
V }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g_
_hook_enddocument/info_code_prop}\__hook_initialize_single:ccn {__hook enddocum
ent/info}{g__hook_enddocument/info_labels_clist}{enddocument/info}\__hook_debug
:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument/info}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-enddocument/info

\g__hook_enddocument/info_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_enddocument/info_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_enddocument/info_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook enddocument/info
#3<-g__hook_enddocument/info_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook enddocument/info 
#2<-\g__hook_enddocument/info_labels_clist 
#3<-enddocument/info

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-enddocument/info

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-kernel/filelist
#2<-\@dofilelist 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-kernel/filelist

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {kernel/filelist}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {kernel/filelist}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/filelist

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_kernel/filelist_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {kernel/filelist}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-kernel/filelist

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_kernel/filelist_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_kernel/filelist_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_kernel/filelist_seq 
#2<-\seq_new:N \l__hook_label_kernel/filelist_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_kernel/filelist_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_kernel/filelist_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_kernel/filelist_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_kernel/filelist_seq }{\token_to_meaning:N \l__hook_label_kernel/filelist_
seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_kernel/filelist_seq 

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-kernel/warnings
#2<-\@enddocument@kernel@warnings 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-kernel/warnings

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {kernel/warnings}

\l__hook_labels_seq ->\s__seq \__seq_item:n {kernel/filelist}

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {kernel/warnings}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_kernel/warnings_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {kernel/warnings}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-kernel/warnings

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_kernel/warnings_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_kernel/warnings_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_kernel/warnings_seq 
#2<-\seq_new:N \l__hook_label_kernel/warnings_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_kernel/warnings_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_kernel/warnings_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_kernel/warnings_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_kernel/warnings_seq }{\token_to_meaning:N \l__hook_label_kernel/warnings_
seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_kernel/warnings_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{enddocument/info}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{enddocument/info}}
#1<-kernel/filelist
#2<-\@dofilelist 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {kernel/filelist}{##1}{\prop_map_break: }{\__ho
ok_apply_label_pair:nnn {kernel/filelist}{##1}}{\__hook_apply_label_pair:nnn {#
#1}{kernel/filelist}}{enddocument/info}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {kernel/filelist}{#1
}{\prop_map_break: }{\__hook_apply_label_pair:nnn {kernel/filelist}{#1}}{\__hoo
k_apply_label_pair:nnn {#1}{kernel/filelist}}{enddocument/info}
#1<-kernel/filelist
#2<-\@dofilelist 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-kernel/filelist
#2<-kernel/filelist

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {kernel/filelist}{kernel/filelist}
#3<-\__hook_apply_label_pair:nnn {kernel/filelist}{kernel/filelist}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-{enddocument/info}\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@ke
rnel@warnings }
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{enddocument/info}}
#1<-kernel/warnings
#2<-\@enddocument@kernel@warnings 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {kernel/warnings}{##1}{\prop_map_break: }{\__ho
ok_apply_label_pair:nnn {kernel/warnings}{##1}}{\__hook_apply_label_pair:nnn {#
#1}{kernel/warnings}}{enddocument/info}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {kernel/warnings}{#1
}{\prop_map_break: }{\__hook_apply_label_pair:nnn {kernel/warnings}{#1}}{\__hoo
k_apply_label_pair:nnn {#1}{kernel/warnings}}{enddocument/info}
#1<-kernel/filelist
#2<-\@dofilelist 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-kernel/warnings
#2<-kernel/filelist

\use_ii:nnn #1#2#3->#2
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {kernel/warnings}{kernel/filelist}
#3<-\__hook_apply_label_pair:nnn {kernel/filelist}{kernel/warnings}

\__hook_apply_label_pair:nnn #1#2#3->\__hook_label_if_exist_apply:nnnF {#1}{#2}
{#3}{\__hook_label_if_exist_apply:nnnF {#1}{#2}{??}{}}
#1<-kernel/warnings
#2<-kernel/filelist
#3<-enddocument/info

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-kernel/warnings
#2<-kernel/filelist
#3<-enddocument/info

\__hook_apply_rule:nnn #1#2#3->\cs:w __hook_apply_\cs:w g__hook_#3_reversed_tl\
cs_end: rule_\cs:w g__hook_#3_rule_#1|#2_tl\cs_end: :nnn\cs_end: {#1}{#2}{#3}
#1<-kernel/warnings
#2<-kernel/filelist
#3<-enddocument/info

\g__hook_enddocument/info_reversed_tl ->

\g__hook_enddocument/info_rule_kernel/warnings|kernel/filelist_tl ->>

\__hook_apply_rule_>:nnn #1#2#3->\__hook_debug:n {\__hook_msg_pair_found:nnn {#
1}{#2}{#3}}\tl_set:cx {\__hook_tl_csname:n {#1}}{\int_eval:n {\cs:w \__hook_tl_
csname:n {#1}\cs_end: +1}}\seq_put_right:cn {\__hook_seq_csname:n {#2}}{#1}
#1<-kernel/warnings
#2<-kernel/filelist
#3<-enddocument/info

\__hook_debug:n #1->
#1<-\__hook_msg_pair_found:nnn {kernel/warnings}{kernel/filelist}{enddocument/i
nfo}

\tl_set:cx ->\exp_args:Nc \tl_set:Nx 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nx 
#2<-\__hook_tl_csname:n {kernel/warnings}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__hook_label_kernel/warnings_tl 
#2<-\int_eval:n {\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: +1}

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: +1

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\l__hook_label_kernel/warnings_tl ->0

\seq_put_right:cn ->\exp_args:Nc \seq_put_right:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_put_right:Nn 
#2<-\__hook_seq_csname:n {kernel/filelist}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-kernel/filelist

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_label_kernel/filelist_seq 
#2<-kernel/warnings

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_label_kernel/filelist_seq 
#2<-\__seq_item:n {kernel/warnings}

\l__hook_label_kernel/filelist_seq ->\s__seq 

\use_none:n #1->
#1<-\__hook_label_if_exist_apply:nnnF {kernel/warnings}{kernel/filelist}{??}{}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {kernel/warnings}{#1
}{\prop_map_break: }{\__hook_apply_label_pair:nnn {kernel/warnings}{#1}}{\__hoo
k_apply_label_pair:nnn {#1}{kernel/warnings}}{enddocument/info}
#1<-kernel/warnings
#2<-\@enddocument@kernel@warnings 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-kernel/warnings
#2<-kernel/warnings

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {kernel/warnings}{kernel/warnings}
#3<-\__hook_apply_label_pair:nnn {kernel/warnings}{kernel/warnings}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-enddocument/info
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {kernel/filelist}\__seq_item:n {ker
nel/warnings}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-kernel/filelist

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {kernel/filelist}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/filelist

\l__hook_label_kernel/filelist_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{kernel/filelist}\tl_se
t:Nn \l__hook_rear_tl {kernel/filelist}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-kernel/filelist

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-kernel/filelist

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-kernel/warnings

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\l__hook_label_kernel/warnings_tl ->1

\use_none:n #1->
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{kernel/warnings}\tl_se
t:Nn \l__hook_rear_tl {kernel/warnings}

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument/info 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument/info 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_enddocument/info_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/filelist

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-kernel/filelist
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l
__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_r
eturn_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument/info \l__hook_ret
urn_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/filelist

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-kernel/filelist
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-kernel/filelist

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {kernel/filelist}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-kernel/filelist
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_split_aux:w #1\__prop_pair:wn kernel/filelist\s__prop #2#3\s__prop_mark
 #4#5\s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook
_return_tl {\q_no_value }}
#1<-\s__prop 
#2<-\@dofilelist 
#3<-\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }
#4<-\use_i:nn 
#5<-\__prop_pair:wn kernel/filelist\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\@dofilelist }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\@dofilelist 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument/info 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\@dofilelist 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument/info 
#2<-\@dofilelist 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument/info 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument/info \@dofilelist }

\__hook enddocument/info ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_enddocument/info_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/filelist

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_enddocument/info_labels_clist 
#4<-kernel/filelist

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-kernel/filelist

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-kernel/filelist

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: kernel/filelist

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: kernel/filelist?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-k

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: kernel/filelist}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: kernel/filelist

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-kernel/filelist
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: kernel/filelist

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: kernel/filelist\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: kernel/filelist\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: kernel/filelist\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: kernel/filelist
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: kernel/filelist

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-kernel/filelist

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-kernel/filelist

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-kernel/filelist

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-kernel/filelist

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?kernel/filelist \s__clist_mark ? kernel/
filelist\s__clist_mark , \s__clist_mark kernel/filelist,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?kernel/filelist 
#2<-kernel/filelist\s__clist_mark ,
#3<-kernel/filelist

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {kernel/filelist{}}{\tl_if_empty:nTF {kernel/filel
ist}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:n kernel/filelist}{\prg_re
turn_true: }{\prg_return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-kernel/filelist{}

\use_none:n #1->
#1<-{kernel/filelist{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {kernel/filelist}{\prg_return_true: }{\tl_if_empty:oTF {\u
se_none:n kernel/filelist}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{kernel/filelist}}
#2<-\exp_not:n {kernel/filelist}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_enddocument/info_labels_clist 
#3<-\g__hook_enddocument/info_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_enddocument/info_labels_clist 

\g__hook_enddocument/info_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_enddocument/info_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->kernel/filelist

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->kernel/filelist

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_kernel/filelist_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_kernel/filelist_seq ->\s__seq \__seq_item:n {kernel/warnings}

\__seq_item:n #1->\tl_set:cx {\__hook_tl_csname:n {#1}}{\int_eval:n {\cs:w \__h
ook_tl_csname:n {#1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {
#1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set
:Nn \l__hook_rear_tl {#1}}
#1<-kernel/warnings

\tl_set:cx ->\exp_args:Nc \tl_set:Nx 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nx 
#2<-\__hook_tl_csname:n {kernel/warnings}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__hook_label_kernel/warnings_tl 
#2<-\int_eval:n {\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: -1}

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: -1

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\l__hook_label_kernel/warnings_tl ->1

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {kernel/warnings}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-kernel/warnings

\l__hook_label_kernel/warnings_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{kernel/warnings}\tl_se
t:Nn \l__hook_rear_tl {kernel/warnings}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->kernel/filelist

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_kernel/filelist_tl 
#2<-kernel/warnings

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-kernel/warnings

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->kernel/filelist

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_kernel/filelist_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/warnings

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-kernel/warnings
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l
__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_r
eturn_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument/info \l__hook_ret
urn_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/warnings

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-kernel/warnings
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-kernel/warnings

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {kernel/warnings}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-kernel/warnings
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofile
list }\__prop_pair:wn kernel/warnings\s__prop {\@enddocument@kernel@warnings }

\__prop_split_aux:w #1\__prop_pair:wn kernel/warnings\s__prop #2#3\s__prop_mark
 #4#5\s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook
_return_tl {\q_no_value }}
#1<-\s__prop \__prop_pair:wn kernel/filelist\s__prop {\@dofilelist }
#2<-\@enddocument@kernel@warnings 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn kernel/warnings\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\@enddocument@kernel@warnings }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\@enddocument@kernel@warnings 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument/info 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\@enddocument@kernel@warnings 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument/info 
#2<-\@enddocument@kernel@warnings 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument/info 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument/info \@enddocument@k
ernel@warnings }

\__hook enddocument/info ->\@dofilelist 

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_enddocument/info_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->kernel/warnings

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_enddocument/info_labels_clist 
#4<-kernel/warnings

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-kernel/warnings

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-kernel/warnings

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: kernel/warnings

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: kernel/warnings?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-k

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: kernel/warnings}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: kernel/warnings

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-kernel/warnings
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: kernel/warnings

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: kernel/warnings\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: kernel/warnings\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: kernel/warnings\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: kernel/warnings
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: kernel/warnings

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-kernel/warnings

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-kernel/warnings

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-kernel/warnings

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-kernel/warnings

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?kernel/warnings \s__clist_mark ? kernel/
warnings\s__clist_mark , \s__clist_mark kernel/warnings,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?kernel/warnings 
#2<-kernel/warnings\s__clist_mark ,
#3<-kernel/warnings

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {kernel/warnings{}}{\tl_if_empty:nTF {kernel/warni
ngs}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:n kernel/warnings}{\prg_re
turn_true: }{\prg_return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-kernel/warnings{}

\use_none:n #1->
#1<-{kernel/warnings{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {kernel/warnings}{\prg_return_true: }{\tl_if_empty:oTF {\u
se_none:n kernel/warnings}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{kernel/warnings}}
#2<-\exp_not:n {kernel/warnings}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_enddocument/info_labels_clist 
#3<-\g__hook_enddocument/info_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_enddocument/info_labels_clist 

\g__hook_enddocument/info_labels_clist ->kernel/filelist

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_enddocument/info_labels_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->kernel/warnings

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->kernel/warnings

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_kernel/warnings_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_kernel/warnings_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->kernel/warnings

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_kernel/warnings_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument
/info \l__hook_return_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels
_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hoo
k_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl
_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1
}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\t
l_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear
_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front
_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l
__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_r
eturn_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook enddocument/info \l__hook_ret
urn_tl \__hook_clist_gput:NV \g__hook_enddocument/info_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook enddocument/info 
#3<-\cs:w __hook_toplevel enddocument/info\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook enddocument/info 
#2<-\__hook_toplevel enddocument/info 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument/info 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument/info \__hook_topleve
l enddocument/info }

\__hook enddocument/info ->\@dofilelist \@enddocument@kernel@warnings 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook enddocument/info 
#3<-\cs:w __hook_next enddocument/info\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook enddocument/info 
#2<-\__hook_next enddocument/info 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook enddocument/info 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook enddocument/info \__hook_next en
ddocument/info }

\__hook enddocument/info ->\@dofilelist \@enddocument@kernel@warnings \__hook_t
oplevel enddocument/info 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument/info}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-enddocument/end

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-enddocument/end

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'enddocument/end'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-enddocument/end

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@enddocument/endhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @enddocument/endhook\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@enddocument/endhook}{\exp_args:Nnnv \__hook_hook_gput_cod
e_do:nnn {enddocument/end}{legacy}{@enddocument/endhook}\__hook_tl_gclear:c {@e
nddocument/endhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-enddocument/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/end\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_enddocument/end_code_prop}{\__hook_tl_gset:co {
__hook enddocument/end}{\cs:w __hook_toplevel enddocument/end\exp_after:wN \cs_
end: \cs:w __hook_next enddocument/end\cs_end: }}{\__hook_if_reversed:nTF {endd
ocument/end}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_e
q:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:
Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_rig
ht:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_enddocument/end_code_prop}\_
_hook_initialize_single:ccn {__hook enddocument/end}{g__hook_enddocument/end_la
bels_clist}{enddocument/end}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__h
ook_used_prop {enddocument/end}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_enddocument/end_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_enddocument/end_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_enddocument/end_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook enddocument/end}{\cs:w __hook_toplevel enddocume
nt/end\exp_after:wN \cs_end: \cs:w __hook_next enddocument/end\cs_end: }
#2<-\__hook_if_reversed:nTF {enddocument/end}{\cs_set_eq:NN \__hook_tl_gput:Nn 
\__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV
 }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__
hook_enddocument/end_code_prop}\__hook_initialize_single:ccn {__hook enddocumen
t/end}{g__hook_enddocument/end_labels_clist}{enddocument/end}\__hook_debug:n {\
exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {enddocument/end}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook enddocument/end

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook enddocument/end 
#2<-\cs:w __hook_toplevel enddocument/end\exp_after:wN \cs_end: \cs:w __hook_ne
xt enddocument/end\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-insertmark

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-insertmark

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'insertmark'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-insertmark

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@insertmarkhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @insertmarkhook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@insertmarkhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {insertmark}{legacy}{@insertmarkhook}\__hook_tl_gclear:c {@insertmarkhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-insertmark

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook insertmark

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook insertmark\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_insertmark_code_prop}{\__hook_tl_gset:co {__hoo
k insertmark}{\cs:w __hook_toplevel insertmark\exp_after:wN \cs_end: \cs:w __ho
ok_next insertmark\cs_end: }}{\__hook_if_reversed:nTF {insertmark}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_insertmark_code_prop}\__hook_initialize_single:ccn {_
_hook insertmark}{g__hook_insertmark_labels_clist}{insertmark}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {insertmark}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_insertmark_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_insertmark_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_insertmark_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook insertmark}{\cs:w __hook_toplevel insertmark\exp
_after:wN \cs_end: \cs:w __hook_next insertmark\cs_end: }
#2<-\__hook_if_reversed:nTF {insertmark}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
insertmark_code_prop}\__hook_initialize_single:ccn {__hook insertmark}{g__hook_
insertmark_labels_clist}{insertmark}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {insertmark}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook insertmark

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook insertmark 
#2<-\cs:w __hook_toplevel insertmark\exp_after:wN \cs_end: \cs:w __hook_next in
sertmark\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-package/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-package/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'package/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-package/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@package/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @package/beforehook\cs_end: \scan_stop: \
prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@package/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code
_do:nnn {package/before}{legacy}{@package/beforehook}\__hook_tl_gclear:c {@pack
age/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-package/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook package/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook package/before\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_package/before_code_prop}{\__hook_tl_gset:co {_
_hook package/before}{\cs:w __hook_toplevel package/before\exp_after:wN \cs_end
: \cs:w __hook_next package/before\cs_end: }}{\__hook_if_reversed:nTF {package/
before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN 
\__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV
 }\prop_set_eq:Nc \l__hook_work_prop {g__hook_package/before_code_prop}\__hook_
initialize_single:ccn {__hook package/before}{g__hook_package/before_labels_cli
st}{package/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_
prop {package/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_package/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_package/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_package/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook package/before}{\cs:w __hook_toplevel package/be
fore\exp_after:wN \cs_end: \cs:w __hook_next package/before\cs_end: }
#2<-\__hook_if_reversed:nTF {package/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \
__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV 
}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__h
ook_package/before_code_prop}\__hook_initialize_single:ccn {__hook package/befo
re}{g__hook_package/before_labels_clist}{package/before}\__hook_debug:n {\exp_a
rgs:NNx \prop_gput:Nnn \g__hook_used_prop {package/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook package/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook package/before 
#2<-\cs:w __hook_toplevel package/before\exp_after:wN \cs_end: \cs:w __hook_nex
t package/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-class/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-class/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'class/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-class/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@class/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @class/beforehook\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@class/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code_d
o:nnn {class/before}{legacy}{@class/beforehook}\__hook_tl_gclear:c {@class/befo
rehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-class/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook class/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook class/before\cs_end: \scan_stop: \
prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_class/before_code_prop}{\__hook_tl_gset:co {__h
ook class/before}{\cs:w __hook_toplevel class/before\exp_after:wN \cs_end: \cs:
w __hook_next class/before\cs_end: }}{\__hook_if_reversed:nTF {class/before}{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_cl
ist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_g
put_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_se
t_eq:Nc \l__hook_work_prop {g__hook_class/before_code_prop}\__hook_initialize_s
ingle:ccn {__hook class/before}{g__hook_class/before_labels_clist}{class/before
}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {class/before
}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_class/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_class/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_class/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook class/before}{\cs:w __hook_toplevel class/before
\exp_after:wN \cs_end: \cs:w __hook_next class/before\cs_end: }
#2<-\__hook_if_reversed:nTF {class/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__
hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{
\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook
_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hoo
k_class/before_code_prop}\__hook_initialize_single:ccn {__hook class/before}{g_
_hook_class/before_labels_clist}{class/before}\__hook_debug:n {\exp_args:NNx \p
rop_gput:Nnn \g__hook_used_prop {class/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook class/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook class/before 
#2<-\cs:w __hook_toplevel class/before\exp_after:wN \cs_end: \cs:w __hook_next 
class/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-package/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-package/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'package/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-package/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@package/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @package/afterhook\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@package/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_
do:nnn {package/after}{legacy}{@package/afterhook}\__hook_tl_gclear:c {@package
/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-package/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook package/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook package/after\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_package/after_code_prop}{\__hook_tl_gset:co {__
hook package/after}{\cs:w __hook_toplevel package/after\exp_after:wN \cs_end: \
cs:w __hook_next package/after\cs_end: }}{\__hook_if_reversed:nTF {package/afte
r}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\pr
op_set_eq:Nc \l__hook_work_prop {g__hook_package/after_code_prop}\__hook_initia
lize_single:ccn {__hook package/after}{g__hook_package/after_labels_clist}{pack
age/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {pac
kage/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_package/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_package/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_package/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook package/after}{\cs:w __hook_toplevel package/aft
er\exp_after:wN \cs_end: \cs:w __hook_next package/after\cs_end: }
#2<-\__hook_if_reversed:nTF {package/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }
{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hoo
k_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__ho
ok_package/after_code_prop}\__hook_initialize_single:ccn {__hook package/after}
{g__hook_package/after_labels_clist}{package/after}\__hook_debug:n {\exp_args:N
Nx \prop_gput:Nnn \g__hook_used_prop {package/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook package/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook package/after 
#2<-\cs:w __hook_toplevel package/after\exp_after:wN \cs_end: \cs:w __hook_next
 package/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-class/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-class/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'class/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-class/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@class/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @class/afterhook\cs_end: \scan_stop: \prg
_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@class/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_do
:nnn {class/after}{legacy}{@class/afterhook}\__hook_tl_gclear:c {@class/afterho
ok}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-class/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook class/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook class/after\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_class/after_code_prop}{\__hook_tl_gset:co {__ho
ok class/after}{\cs:w __hook_toplevel class/after\exp_after:wN \cs_end: \cs:w _
_hook_next class/after\cs_end: }}{\__hook_if_reversed:nTF {class/after}{\cs_set
_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_g
put:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_r
ight:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:
Nc \l__hook_work_prop {g__hook_class/after_code_prop}\__hook_initialize_single:
ccn {__hook class/after}{g__hook_class/after_labels_clist}{class/after}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {class/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_class/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_class/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_class/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook class/after}{\cs:w __hook_toplevel class/after\e
xp_after:wN \cs_end: \cs:w __hook_next class/after\cs_end: }
#2<-\__hook_if_reversed:nTF {class/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__h
ook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\
cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_
clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook
_class/after_code_prop}\__hook_initialize_single:ccn {__hook class/after}{g__ho
ok_class/after_labels_clist}{class/after}\__hook_debug:n {\exp_args:NNx \prop_g
put:Nnn \g__hook_used_prop {class/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook class/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook class/after 
#2<-\cs:w __hook_toplevel class/after\exp_after:wN \cs_end: \cs:w __hook_next c
lass/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/beforehook\cs_end: \scan_stop: \prg
_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code_do
:nnn {file/before}{legacy}{@file/beforehook}\__hook_tl_gclear:c {@file/beforeho
ok}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/before\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/before_code_prop}{\__hook_tl_gset:co {__ho
ok file/before}{\cs:w __hook_toplevel file/before\exp_after:wN \cs_end: \cs:w _
_hook_next file/before\cs_end: }}{\__hook_if_reversed:nTF {file/before}{\cs_set
_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_g
put:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_r
ight:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:
Nc \l__hook_work_prop {g__hook_file/before_code_prop}\__hook_initialize_single:
ccn {__hook file/before}{g__hook_file/before_labels_clist}{file/before}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook file/before}{\cs:w __hook_toplevel file/before\e
xp_after:wN \cs_end: \cs:w __hook_next file/before\cs_end: }
#2<-\__hook_if_reversed:nTF {file/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__h
ook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\
cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_
clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook
_file/before_code_prop}\__hook_initialize_single:ccn {__hook file/before}{g__ho
ok_file/before_labels_clist}{file/before}\__hook_debug:n {\exp_args:NNx \prop_g
put:Nnn \g__hook_used_prop {file/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook file/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook file/before 
#2<-\cs:w __hook_toplevel file/before\exp_after:wN \cs_end: \cs:w __hook_next f
ile/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/afterhook\cs_end: \scan_stop: \prg_
return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_do:
nnn {file/after}{legacy}{@file/afterhook}\__hook_tl_gclear:c {@file/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/after\cs_end: \scan_stop: \pr
g_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/after_code_prop}{\__hook_tl_gset:co {__hoo
k file/after}{\cs:w __hook_toplevel file/after\exp_after:wN \cs_end: \cs:w __ho
ok_next file/after\cs_end: }}{\__hook_if_reversed:nTF {file/after}{\cs_set_eq:N
N \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:N
V \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:
Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l
__hook_work_prop {g__hook_file/after_code_prop}\__hook_initialize_single:ccn {_
_hook file/after}{g__hook_file/after_labels_clist}{file/after}\__hook_debug:n {
\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook file/after}{\cs:w __hook_toplevel file/after\exp
_after:wN \cs_end: \cs:w __hook_next file/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__ho
ok_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\c
s_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_c
list_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_
file/after_code_prop}\__hook_initialize_single:ccn {__hook file/after}{g__hook_
file/after_labels_clist}{file/after}\__hook_debug:n {\exp_args:NNx \prop_gput:N
nn \g__hook_used_prop {file/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook file/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook file/after 
#2<-\cs:w __hook_toplevel file/after\exp_after:wN \cs_end: \cs:w __hook_next fi
le/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/beforehook\cs_end: \scan_stop: \
prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/beforehook}{\exp_args:Nnnv \__hook_hook_gput_code
_do:nnn {shipout/before}{legacy}{@shipout/beforehook}\__hook_tl_gclear:c {@ship
out/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/before\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/before_code_prop}{\__hook_tl_gset:co {_
_hook shipout/before}{\cs:w __hook_toplevel shipout/before\exp_after:wN \cs_end
: \cs:w __hook_next shipout/before\cs_end: }}{\__hook_if_reversed:nTF {shipout/
before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN 
\__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV
 }\prop_set_eq:Nc \l__hook_work_prop {g__hook_shipout/before_code_prop}\__hook_
initialize_single:ccn {__hook shipout/before}{g__hook_shipout/before_labels_cli
st}{shipout/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_
prop {shipout/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/before_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/before}{\cs:w __hook_toplevel shipout/be
fore\exp_after:wN \cs_end: \cs:w __hook_next shipout/before\cs_end: }
#2<-\__hook_if_reversed:nTF {shipout/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \
__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV 
}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__h
ook_shipout/before_code_prop}\__hook_initialize_single:ccn {__hook shipout/befo
re}{g__hook_shipout/before_labels_clist}{shipout/before}\__hook_debug:n {\exp_a
rgs:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/before}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/before

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/before 
#2<-\cs:w __hook_toplevel shipout/before\exp_after:wN \cs_end: \cs:w __hook_nex
t shipout/before\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/afterhook\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/afterhook}{\exp_args:Nnnv \__hook_hook_gput_code_
do:nnn {shipout/after}{legacy}{@shipout/afterhook}\__hook_tl_gclear:c {@shipout
/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/after\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/after_code_prop}{\__hook_tl_gset:co {__
hook shipout/after}{\cs:w __hook_toplevel shipout/after\exp_after:wN \cs_end: \
cs:w __hook_next shipout/after\cs_end: }}{\__hook_if_reversed:nTF {shipout/afte
r}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\pr
op_set_eq:Nc \l__hook_work_prop {g__hook_shipout/after_code_prop}\__hook_initia
lize_single:ccn {__hook shipout/after}{g__hook_shipout/after_labels_clist}{ship
out/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {shi
pout/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/after}{\cs:w __hook_toplevel shipout/aft
er\exp_after:wN \cs_end: \cs:w __hook_next shipout/after\cs_end: }
#2<-\__hook_if_reversed:nTF {shipout/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }
{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hoo
k_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__ho
ok_shipout/after_code_prop}\__hook_initialize_single:ccn {__hook shipout/after}
{g__hook_shipout/after_labels_clist}{shipout/after}\__hook_debug:n {\exp_args:N
Nx \prop_gput:Nnn \g__hook_used_prop {shipout/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/after 
#2<-\cs:w __hook_toplevel shipout/after\exp_after:wN \cs_end: \cs:w __hook_next
 shipout/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/foreground

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/foreground

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/foreground'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/foreground

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/foregroundhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/foregroundhook\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/foregroundhook}{\exp_args:Nnnv \__hook_hook_gput_
code_do:nnn {shipout/foreground}{legacy}{@shipout/foregroundhook}\__hook_tl_gcl
ear:c {@shipout/foregroundhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/foreground

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/foreground

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/foreground\cs_end: \scan_s
top: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/foreground_code_prop}{\__hook_tl_gset:c
o {__hook shipout/foreground}{\cs:w __hook_toplevel shipout/foreground\exp_afte
r:wN \cs_end: \cs:w __hook_next shipout/foreground\cs_end: }}{\__hook_if_revers
ed:nTF {shipout/foreground}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_le
ft:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \
__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV 
\clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_shipout/foreg
round_code_prop}\__hook_initialize_single:ccn {__hook shipout/foreground}{g__ho
ok_shipout/foreground_labels_clist}{shipout/foreground}\__hook_debug:n {\exp_ar
gs:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/foreground}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/foreground_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/foreground_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/foreground_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/foreground}{\cs:w __hook_toplevel shipou
t/foreground\exp_after:wN \cs_end: \cs:w __hook_next shipout/foreground\cs_end:
 }
#2<-\__hook_if_reversed:nTF {shipout/foreground}{\cs_set_eq:NN \__hook_tl_gput:
Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left
:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \
__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {
g__hook_shipout/foreground_code_prop}\__hook_initialize_single:ccn {__hook ship
out/foreground}{g__hook_shipout/foreground_labels_clist}{shipout/foreground}\__
hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/foregrou
nd}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/foreground

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/foreground 
#2<-\cs:w __hook_toplevel shipout/foreground\exp_after:wN \cs_end: \cs:w __hook
_next shipout/foreground\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/background

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/background

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/background'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/background

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/backgroundhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/backgroundhook\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/backgroundhook}{\exp_args:Nnnv \__hook_hook_gput_
code_do:nnn {shipout/background}{legacy}{@shipout/backgroundhook}\__hook_tl_gcl
ear:c {@shipout/backgroundhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/background

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/background

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/background\cs_end: \scan_s
top: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/background_code_prop}{\__hook_tl_gset:c
o {__hook shipout/background}{\cs:w __hook_toplevel shipout/background\exp_afte
r:wN \cs_end: \cs:w __hook_next shipout/background\cs_end: }}{\__hook_if_revers
ed:nTF {shipout/background}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_le
ft:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \
__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV 
\clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_shipout/backg
round_code_prop}\__hook_initialize_single:ccn {__hook shipout/background}{g__ho
ok_shipout/background_labels_clist}{shipout/background}\__hook_debug:n {\exp_ar
gs:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/background}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/background_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/background_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/background_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/background}{\cs:w __hook_toplevel shipou
t/background\exp_after:wN \cs_end: \cs:w __hook_next shipout/background\cs_end:
 }
#2<-\__hook_if_reversed:nTF {shipout/background}{\cs_set_eq:NN \__hook_tl_gput:
Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left
:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \
__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {
g__hook_shipout/background_code_prop}\__hook_initialize_single:ccn {__hook ship
out/background}{g__hook_shipout/background_labels_clist}{shipout/background}\__
hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/backgrou
nd}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/background

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/background 
#2<-\cs:w __hook_toplevel shipout/background\exp_after:wN \cs_end: \cs:w __hook
_next shipout/background\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/firstpage

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/firstpage

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/firstpage'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/firstpage

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/firstpagehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/firstpagehook\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/firstpagehook}{\exp_args:Nnnv \__hook_hook_gput_c
ode_do:nnn {shipout/firstpage}{legacy}{@shipout/firstpagehook}\__hook_tl_gclear
:c {@shipout/firstpagehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/firstpage

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/firstpage

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/firstpage\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/firstpage_code_prop}{\__hook_tl_gset:co
 {__hook shipout/firstpage}{\cs:w __hook_toplevel shipout/firstpage\exp_after:w
N \cs_end: \cs:w __hook_next shipout/firstpage\cs_end: }}{\__hook_if_reversed:n
TF {shipout/firstpage}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn
 \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hoo
k_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clis
t_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_shipout/firstpage_
code_prop}\__hook_initialize_single:ccn {__hook shipout/firstpage}{g__hook_ship
out/firstpage_labels_clist}{shipout/firstpage}\__hook_debug:n {\exp_args:NNx \p
rop_gput:Nnn \g__hook_used_prop {shipout/firstpage}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/firstpage_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/firstpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/firstpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/firstpage}{\cs:w __hook_toplevel shipout
/firstpage\exp_after:wN \cs_end: \cs:w __hook_next shipout/firstpage\cs_end: }
#2<-\__hook_if_reversed:nTF {shipout/firstpage}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_shipout/firstpage_code_prop}\__hook_initialize_single:ccn {__hook shipou
t/firstpage}{g__hook_shipout/firstpage_labels_clist}{shipout/firstpage}\__hook_
debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/firstpage}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/firstpage

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/firstpage 
#2<-\cs:w __hook_toplevel shipout/firstpage\exp_after:wN \cs_end: \cs:w __hook_
next shipout/firstpage\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-shipout/lastpage

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-shipout/lastpage

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'shipout/lastpage'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-shipout/lastpage

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@shipout/lastpagehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @shipout/lastpagehook\cs_end: \scan_stop:
 \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@shipout/lastpagehook}{\exp_args:Nnnv \__hook_hook_gput_co
de_do:nnn {shipout/lastpage}{legacy}{@shipout/lastpagehook}\__hook_tl_gclear:c 
{@shipout/lastpagehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-shipout/lastpage

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook shipout/lastpage

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook shipout/lastpage\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_shipout/lastpage_code_prop}{\__hook_tl_gset:co 
{__hook shipout/lastpage}{\cs:w __hook_toplevel shipout/lastpage\exp_after:wN \
cs_end: \cs:w __hook_next shipout/lastpage\cs_end: }}{\__hook_if_reversed:nTF {
shipout/lastpage}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_
set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gpu
t_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_shipout/lastpage_code_p
rop}\__hook_initialize_single:ccn {__hook shipout/lastpage}{g__hook_shipout/las
tpage_labels_clist}{shipout/lastpage}\__hook_debug:n {\exp_args:NNx \prop_gput:
Nnn \g__hook_used_prop {shipout/lastpage}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_shipout/lastpage_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_shipout/lastpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/lastpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook shipout/lastpage}{\cs:w __hook_toplevel shipout/
lastpage\exp_after:wN \cs_end: \cs:w __hook_next shipout/lastpage\cs_end: }
#2<-\__hook_if_reversed:nTF {shipout/lastpage}{\cs_set_eq:NN \__hook_tl_gput:Nn
 \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:N
V }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g_
_hook_shipout/lastpage_code_prop}\__hook_initialize_single:ccn {__hook shipout/
lastpage}{g__hook_shipout/lastpage_labels_clist}{shipout/lastpage}\__hook_debug
:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {shipout/lastpage}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook shipout/lastpage

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook shipout/lastpage 
#2<-\cs:w __hook_toplevel shipout/lastpage\exp_after:wN \cs_end: \cs:w __hook_n
ext shipout/lastpage\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/dinbrief.cls/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/dinbrief.cls/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/dinbrief.cls/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/dinbrief.cls/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/dinbrief.cls/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/dinbrief.cls/afterhook\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/dinbrief.cls/afterhook}{\exp_args:Nnnv \__hook_hook_
gput_code_do:nnn {file/dinbrief.cls/after}{legacy}{@file/dinbrief.cls/afterhook
}\__hook_tl_gclear:c {@file/dinbrief.cls/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/dinbrief.cls/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/dinbrief.cls/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/dinbrief.cls/after\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/dinbrief.cls/after_code_prop}{\__hook_tl_g
set:co {__hook file/dinbrief.cls/after}{\cs:w __hook_toplevel file/dinbrief.cls
/after\exp_after:wN \cs_end: \cs:w __hook_next file/dinbrief.cls/after\cs_end: 
}}{\__hook_if_reversed:nTF {file/dinbrief.cls/after}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/dinbrief.cls/after_code_prop}\__hook_initialize_single:ccn {__
hook file/dinbrief.cls/after}{g__hook_file/dinbrief.cls/after_labels_clist}{fil
e/dinbrief.cls/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_use
d_prop {file/dinbrief.cls/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/dinbrief.cls/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/dinbrief.cls/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/dinbrief.cls/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/dinbrief.cls/after}{\cs:w __hook_toplevel f
ile/dinbrief.cls/after\exp_after:wN \cs_end: \cs:w __hook_next file/dinbrief.cl
s/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/dinbrief.cls/after}{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput
_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_p
rop {g__hook_file/dinbrief.cls/after_code_prop}\__hook_initialize_single:ccn {_
_hook file/dinbrief.cls/after}{g__hook_file/dinbrief.cls/after_labels_clist}{fi
le/dinbrief.cls/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_us
ed_prop {file/dinbrief.cls/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/dinbrief.cls/after

\g__hook_file/dinbrief.cls/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/dinbrief.cls/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/dinbrief.cls/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/dinbrief.cls/after
#3<-g__hook_file/dinbrief.cls/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/dinbrief.cls/after 
#2<-\g__hook_file/dinbrief.cls/after_labels_clist 
#3<-file/dinbrief.cls/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/dinbrief.cls/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/document/begin}{\be
gingroup }}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_firstaid_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_firstaid_seq }{\token_to_meaning:N \l__hook_label_firstaid_seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_firstaid_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/dinbrief.cls/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/document/begin}{\be
gingroup }}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/dinbrief.cls/after}}
#1<-firstaid
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/dinbrief.cls/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/document/begin}{\be
gingroup }}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/dinbrief.cls/after}
#1<-firstaid
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/dinbrief.cls/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/dinbrief.cls/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/dinbrief.cls/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/dinbrief.cls/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbri
ef.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cl
s/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbri
ef.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cl
s/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbrief.c
ls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cls/af
ter_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/document/begin}{\be
gingroup }}}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\FirstAidNeededT {dinbrief}{cls}{2000/03/02 
LaTeX2e class}{\AddToHook {env/document/begin}{\begingroup }}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/dinbrief.cls/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}
{\AddToHook {env/document/begin}{\begingroup }}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/dinbrief.cls/after 
#2<-\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/
document/begin}{\begingroup }}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/dinbrief.cls/after 
#2<-\__kernel_exp_not:w {\FirstAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e cl
ass}{\AddToHook {env/document/begin}{\begingroup }}}\__kernel_exp_not:w \exp_af
ter:wN {\__hook file/dinbrief.cls/after }

\__hook file/dinbrief.cls/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/dinbrief.cls/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/dinbrief.cls/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/dinbrief.cls/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/dinbrief.cls/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/dinbrief.cls/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/dinbrief.cls/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/dinbrief.cls/after_labels_clist 

\g__hook_file/dinbrief.cls/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbri
ef.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cl
s/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbri
ef.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cl
s/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/dinbrief.c
ls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/dinbrief.cls/af
ter_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/dinbrief.cls/after 
#3<-\cs:w __hook_toplevel file/dinbrief.cls/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/dinbrief.cls/after 
#2<-\__hook_toplevel file/dinbrief.cls/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/dinbrief.cls/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/dinbrief.cls/after }\__kernel_ex
p_not:w \exp_after:wN {\__hook file/dinbrief.cls/after }

\__hook file/dinbrief.cls/after ->\FirstAidNeededT {dinbrief}{cls}{2000/03/02 L
aTeX2e class}{\AddToHook {env/document/begin}{\begingroup }}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/dinbrief.cls/after 
#3<-\cs:w __hook_next file/dinbrief.cls/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/dinbrief.cls/after 
#2<-\__hook_next file/dinbrief.cls/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/dinbrief.cls/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/dinbrief.cls/after \__hook_
next file/dinbrief.cls/after }

\__hook file/dinbrief.cls/after ->\__hook_toplevel file/dinbrief.cls/after \Fir
stAidNeededT {dinbrief}{cls}{2000/03/02 LaTeX2e class}{\AddToHook {env/document
/begin}{\begingroup }}

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/dinbrief.cls/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/pgfpages.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/pgfpages.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/pgfpages.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/pgfpages.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/pgfpages.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/pgfpages.sty/afterhook\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/pgfpages.sty/afterhook}{\exp_args:Nnnv \__hook_hook_
gput_code_do:nnn {file/pgfpages.sty/after}{legacy}{@file/pgfpages.sty/afterhook
}\__hook_tl_gclear:c {@file/pgfpages.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/pgfpages.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/pgfpages.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/pgfpages.sty/after\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/pgfpages.sty/after_code_prop}{\__hook_tl_g
set:co {__hook file/pgfpages.sty/after}{\cs:w __hook_toplevel file/pgfpages.sty
/after\exp_after:wN \cs_end: \cs:w __hook_next file/pgfpages.sty/after\cs_end: 
}}{\__hook_if_reversed:nTF {file/pgfpages.sty/after}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/pgfpages.sty/after_code_prop}\__hook_initialize_single:ccn {__
hook file/pgfpages.sty/after}{g__hook_file/pgfpages.sty/after_labels_clist}{fil
e/pgfpages.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_use
d_prop {file/pgfpages.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/pgfpages.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/pgfpages.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/pgfpages.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/pgfpages.sty/after}{\cs:w __hook_toplevel f
ile/pgfpages.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/pgfpages.st
y/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/pgfpages.sty/after}{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput
_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_p
rop {g__hook_file/pgfpages.sty/after_code_prop}\__hook_initialize_single:ccn {_
_hook file/pgfpages.sty/after}{g__hook_file/pgfpages.sty/after_labels_clist}{fi
le/pgfpages.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_us
ed_prop {file/pgfpages.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/pgfpages.sty/after

\g__hook_file/pgfpages.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/pgfpages.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/pgfpages.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/pgfpages.sty/after
#3<-g__hook_file/pgfpages.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/pgfpages.sty/after 
#2<-\g__hook_file/pgfpages.sty/after_labels_clist 
#3<-file/pgfpages.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/pgfpages.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_gset_eq:NN 
\shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex
_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/pgfpages.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_gset_eq:NN 
\shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex
_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/pgfpages.sty/after}}
#1<-firstaid
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/pgfpages.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_gset_eq:NN 
\shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex
_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/pgfpages.sty/after}
#1<-firstaid
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/pgfpages.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/pgfpages.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/pgfpages.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/pgfpages.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpag
es.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpag
es.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpages.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.sty/af
ter_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_gset_eq:NN 
\shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex
_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\cs_gset_eq:NN \shipout \pgfpages@originalsh
ipout \cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex
_shipout:D \pgfpages@interceptshipout }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/pgfpages.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_
eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pg
fpages@interceptshipout 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/pgfpages.sty/after 
#2<-\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@o
riginalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@intercepts
hipout 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfpages.sty/after 
#2<-\__kernel_exp_not:w {\cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_
set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D
 \pgfpages@interceptshipout }\__kernel_exp_not:w \exp_after:wN {\__hook file/pg
fpages.sty/after }

\__hook file/pgfpages.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/pgfpages.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/pgfpages.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/pgfpages.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/pgfpages.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/pgfpages.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/pgfpages.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/pgfpages.sty/after_labels_clist 

\g__hook_file/pgfpages.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpag
es.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpag
es.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfpages.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfpages.sty/af
ter_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/pgfpages.sty/after 
#3<-\cs:w __hook_toplevel file/pgfpages.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/pgfpages.sty/after 
#2<-\__hook_toplevel file/pgfpages.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfpages.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/pgfpages.sty/after }\__kernel_ex
p_not:w \exp_after:wN {\__hook file/pgfpages.sty/after }

\__hook file/pgfpages.sty/after ->\cs_gset_eq:NN \shipout \pgfpages@originalshi
pout \cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_
shipout:D \pgfpages@interceptshipout 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/pgfpages.sty/after 
#3<-\cs:w __hook_next file/pgfpages.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/pgfpages.sty/after 
#2<-\__hook_next file/pgfpages.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfpages.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/pgfpages.sty/after \__hook_
next file/pgfpages.sty/after }

\__hook file/pgfpages.sty/after ->\__hook_toplevel file/pgfpages.sty/after \cs_
gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originals
hipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/pgfpages.sty/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/pgfmorepages.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/pgfmorepages.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/pgfmorepages.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/pgfmorepages.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/pgfmorepages.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/pgfmorepages.sty/afterhook\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/pgfmorepages.sty/afterhook}{\exp_args:Nnnv \__hook_h
ook_gput_code_do:nnn {file/pgfmorepages.sty/after}{legacy}{@file/pgfmorepages.s
ty/afterhook}\__hook_tl_gclear:c {@file/pgfmorepages.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/pgfmorepages.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/pgfmorepages.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/pgfmorepages.sty/after\cs_end
: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/pgfmorepages.sty/after_code_prop}{\__hook_
tl_gset:co {__hook file/pgfmorepages.sty/after}{\cs:w __hook_toplevel file/pgfm
orepages.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/pgfmorepages.st
y/after\cs_end: }}{\__hook_if_reversed:nTF {file/pgfmorepages.sty/after}{\cs_se
t_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_
gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_
right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq
:Nc \l__hook_work_prop {g__hook_file/pgfmorepages.sty/after_code_prop}\__hook_i
nitialize_single:ccn {__hook file/pgfmorepages.sty/after}{g__hook_file/pgfmorep
ages.sty/after_labels_clist}{file/pgfmorepages.sty/after}\__hook_debug:n {\exp_
args:NNx \prop_gput:Nnn \g__hook_used_prop {file/pgfmorepages.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/pgfmorepages.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/pgfmorepages.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/pgfmorepages.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/pgfmorepages.sty/after}{\cs:w __hook_toplev
el file/pgfmorepages.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/pgf
morepages.sty/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/pgfmorepages.sty/after}{\cs_set_eq:NN \__hook
_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_
gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_se
t_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_wo
rk_prop {g__hook_file/pgfmorepages.sty/after_code_prop}\__hook_initialize_singl
e:ccn {__hook file/pgfmorepages.sty/after}{g__hook_file/pgfmorepages.sty/after_
labels_clist}{file/pgfmorepages.sty/after}\__hook_debug:n {\exp_args:NNx \prop_
gput:Nnn \g__hook_used_prop {file/pgfmorepages.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/pgfmorepages.sty/after

\g__hook_file/pgfmorepages.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/pgfmorepages.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/pgfmorepages.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/pgfmorepages.sty/after
#3<-g__hook_file/pgfmorepages.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\g__hook_file/pgfmorepages.sty/after_labels_clist 
#3<-file/pgfmorepages.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/pgfmorepages.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_set_nopar:N
pn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D 
\cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/pgfmorepages.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_set_nopar:N
pn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D 
\cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/pgfmorepages.sty/after}}
#1<-firstaid
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/pgfmorepages.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_set_nopar:N
pn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D 
\cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/pgfmorepages.sty/after}
#1<-firstaid
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/pgfmorepages.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/pgfmorepages.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/pgfmorepages.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfmor
epages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfmore
pages.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Ha
ndled code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l
__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \_
_hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:
n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\t
l_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_cs
name:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfmor
epages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfmore
pages.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Ha
ndled code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l
__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \_
_hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:
n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\t
l_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_cs
name:n {\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_
tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__ho
ok_front_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pg
fmorepages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\cs_set_nopar:N
pn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D 
\cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\cs_set_nopar:Npn \pgfhookintoshipout {\cs_s
et_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D 
\pgfpages@interceptshipout }}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/pgfmorepages.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfp
ages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@inte
rceptshipout }

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\__kernel_exp_not:w {\cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \
pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@
interceptshipout }}\__kernel_exp_not:w \exp_after:wN {\__hook file/pgfmorepages
.sty/after }

\__hook file/pgfmorepages.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/pgfmorepages.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/pgfmorepages.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/pgfmorepages.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/pgfmorepages.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/pgfmorepages.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/pgfmorepages.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/pgfmorepages.sty/after_labels_clist 

\g__hook_file/pgfmorepages.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfmor
epages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfmore
pages.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Ha
ndled code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l
__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \_
_hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:
n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\t
l_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_cs
name:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pgfmor
epages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/pgfmore
pages.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Ha
ndled code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l
__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \_
_hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:
n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\t
l_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_cs
name:n {\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_
tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__ho
ok_front_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/pg
fmorepages.sty/after \l__hook_return_tl \__hook_clist_gput:NV \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/pgfmorepages.sty/after 
#3<-\cs:w __hook_toplevel file/pgfmorepages.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\__hook_toplevel file/pgfmorepages.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/pgfmorepages.sty/after }\__kerne
l_exp_not:w \exp_after:wN {\__hook file/pgfmorepages.sty/after }

\__hook file/pgfmorepages.sty/after ->\cs_set_nopar:Npn \pgfhookintoshipout {\c
s_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout
:D \pgfpages@interceptshipout }

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/pgfmorepages.sty/after 
#3<-\cs:w __hook_next file/pgfmorepages.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\__hook_next file/pgfmorepages.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/pgfmorepages.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/pgfmorepages.sty/after \__h
ook_next file/pgfmorepages.sty/after }

\__hook file/pgfmorepages.sty/after ->\__hook_toplevel file/pgfmorepages.sty/af
ter \cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalship
out \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/pgfmorepages.sty/afte
r}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/babel.sty/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/babel.sty/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/babel.sty/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/babel.sty/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/babel.sty/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/babel.sty/beforehook\cs_end: \scan_
stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/babel.sty/beforehook}{\exp_args:Nnnv \__hook_hook_gp
ut_code_do:nnn {file/babel.sty/before}{legacy}{@file/babel.sty/beforehook}\__ho
ok_tl_gclear:c {@file/babel.sty/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/babel.sty/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/babel.sty/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/babel.sty/before\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/babel.sty/before_code_prop}{\__hook_tl_gse
t:co {__hook file/babel.sty/before}{\cs:w __hook_toplevel file/babel.sty/before
\exp_after:wN \cs_end: \cs:w __hook_next file/babel.sty/before\cs_end: }}{\__ho
ok_if_reversed:nTF {file/babel.sty/before}{\cs_set_eq:NN \__hook_tl_gput:Nn \__
hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{
\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook
_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hoo
k_file/babel.sty/before_code_prop}\__hook_initialize_single:ccn {__hook file/ba
bel.sty/before}{g__hook_file/babel.sty/before_labels_clist}{file/babel.sty/befo
re}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/babel
.sty/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/babel.sty/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/babel.sty/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/babel.sty/before_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/babel.sty/before}{\cs:w __hook_toplevel fil
e/babel.sty/before\exp_after:wN \cs_end: \cs:w __hook_next file/babel.sty/befor
e\cs_end: }
#2<-\__hook_if_reversed:nTF {file/babel.sty/before}{\cs_set_eq:NN \__hook_tl_gp
ut:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_l
eft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:N
N \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pro
p {g__hook_file/babel.sty/before_code_prop}\__hook_initialize_single:ccn {__hoo
k file/babel.sty/before}{g__hook_file/babel.sty/before_labels_clist}{file/babel
.sty/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/babel.sty/before}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/babel.sty/before

\g__hook_file/babel.sty/before_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/babel.sty/before_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/babel.sty/before_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/babel.sty/before
#3<-g__hook_file/babel.sty/before_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/babel.sty/before 
#2<-\g__hook_file/babel.sty/before_labels_clist 
#3<-file/babel.sty/before

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/babel.sty/before

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \BabelCase
Hack {}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\def \BabelCaseHack {}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/babel.sty/before}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \BabelCase
Hack {}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/babel.sty/before}}
#1<-firstaid
#2<-\def \BabelCaseHack {}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/babel.sty/before}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \BabelCase
Hack {}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/babel.sty/before}
#1<-firstaid
#2<-\def \BabelCaseHack {}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/babel.sty/before
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/babel.sty/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/babel.sty/before 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/babel.sty/before_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.
sty/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/bef
ore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.
sty/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/bef
ore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.sty/befo
re \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/before_labe
ls_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \BabelCase
Hack {}}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\def \BabelCaseHack {}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\def \BabelCaseHack {}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\def \BabelCaseHack {}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/babel.sty/before 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\def \BabelCaseHack {}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook file/babel.sty/before 
#2<-\def \BabelCaseHack {}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/babel.sty/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/babel.sty/before \def \Babe
lCaseHack {}}

\__hook file/babel.sty/before ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_file/babel.sty/before_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/babel.sty/before_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/babel.sty/before_labels_clist 
#3<-\g__hook_file/babel.sty/before_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/babel.sty/before_labels_clist 

\g__hook_file/babel.sty/before_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/babel.sty/before_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.
sty/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/bef
ore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.
sty/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/bef
ore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/babel.sty/befo
re \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/babel.sty/before_labe
ls_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/babel.sty/before 
#3<-\cs:w __hook_toplevel file/babel.sty/before\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook file/babel.sty/before 
#2<-\__hook_toplevel file/babel.sty/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/babel.sty/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/babel.sty/before \__hook_to
plevel file/babel.sty/before }

\__hook file/babel.sty/before ->\def \BabelCaseHack {}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/babel.sty/before 
#3<-\cs:w __hook_next file/babel.sty/before\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/babel.sty/before 
#2<-\__hook_next file/babel.sty/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/babel.sty/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/babel.sty/before \__hook_ne
xt file/babel.sty/before }

\__hook file/babel.sty/before ->\def \BabelCaseHack {}\__hook_toplevel file/bab
el.sty/before 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/babel.sty/before}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/bigfoot.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/bigfoot.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/bigfoot.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/bigfoot.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/bigfoot.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/bigfoot.sty/afterhook\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/bigfoot.sty/afterhook}{\exp_args:Nnnv \__hook_hook_g
put_code_do:nnn {file/bigfoot.sty/after}{legacy}{@file/bigfoot.sty/afterhook}\_
_hook_tl_gclear:c {@file/bigfoot.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/bigfoot.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/bigfoot.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/bigfoot.sty/after\cs_end: \sc
an_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/bigfoot.sty/after_code_prop}{\__hook_tl_gs
et:co {__hook file/bigfoot.sty/after}{\cs:w __hook_toplevel file/bigfoot.sty/af
ter\exp_after:wN \cs_end: \cs:w __hook_next file/bigfoot.sty/after\cs_end: }}{\
__hook_if_reversed:nTF {file/bigfoot.sty/after}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_file/bigfoot.sty/after_code_prop}\__hook_initialize_single:ccn {__hook f
ile/bigfoot.sty/after}{g__hook_file/bigfoot.sty/after_labels_clist}{file/bigfoo
t.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/bigfoot.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/bigfoot.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/bigfoot.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/bigfoot.sty/after_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_tl_gset:co {__hook file/bigfoot.sty/after}{\cs:w __hook_toplevel fi
le/bigfoot.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/bigfoot.sty/a
fter\cs_end: }
#2<-\__hook_if_reversed:nTF {file/bigfoot.sty/after}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/bigfoot.sty/after_code_prop}\__hook_initialize_single:ccn {__h
ook file/bigfoot.sty/after}{g__hook_file/bigfoot.sty/after_labels_clist}{file/b
igfoot.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_pr
op {file/bigfoot.sty/after}{}}

\__hook_tl_gset:co ->\exp_args:Nc \__hook_tl_gset:No 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:No 
#2<-__hook file/bigfoot.sty/after

\__hook_tl_gset:No #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w \exp_after:w
N {#2}}
#1<-\__hook file/bigfoot.sty/after 
#2<-\cs:w __hook_toplevel file/bigfoot.sty/after\exp_after:wN \cs_end: \cs:w __
hook_next file/bigfoot.sty/after\cs_end: 

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/ulem.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/ulem.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/ulem.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/ulem.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/ulem.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/ulem.sty/afterhook\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/ulem.sty/afterhook}{\exp_args:Nnnv \__hook_hook_gput
_code_do:nnn {file/ulem.sty/after}{legacy}{@file/ulem.sty/afterhook}\__hook_tl_
gclear:c {@file/ulem.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/ulem.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/ulem.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/ulem.sty/after\cs_end: \scan_
stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/ulem.sty/after_code_prop}{\__hook_tl_gset:
co {__hook file/ulem.sty/after}{\cs:w __hook_toplevel file/ulem.sty/after\exp_a
fter:wN \cs_end: \cs:w __hook_next file/ulem.sty/after\cs_end: }}{\__hook_if_re
versed:nTF {file/ulem.sty/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gp
ut_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq
:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gpu
t:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_file/ule
m.sty/after_code_prop}\__hook_initialize_single:ccn {__hook file/ulem.sty/after
}{g__hook_file/ulem.sty/after_labels_clist}{file/ulem.sty/after}\__hook_debug:n
 {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/ulem.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/ulem.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/ulem.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/ulem.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/ulem.sty/after}{\cs:w __hook_toplevel file/
ulem.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/ulem.sty/after\cs_e
nd: }
#2<-\__hook_if_reversed:nTF {file/ulem.sty/after}{\cs_set_eq:NN \__hook_tl_gput
:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_lef
t:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN 
\__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop 
{g__hook_file/ulem.sty/after_code_prop}\__hook_initialize_single:ccn {__hook fi
le/ulem.sty/after}{g__hook_file/ulem.sty/after_labels_clist}{file/ulem.sty/afte
r}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/ulem.s
ty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/ulem.sty/after

\g__hook_file/ulem.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/ulem.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/ulem.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/ulem.sty/after
#3<-g__hook_file/ulem.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/ulem.sty/after 
#2<-\g__hook_file/ulem.sty/after_labels_clist 
#3<-file/ulem.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/ulem.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \@hspace #
#1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \r
elax }\x }}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/ulem.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \@hspace #
#1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \r
elax }\x }}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/ulem.sty/after}}
#1<-firstaid
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/ulem.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \@hspace #
#1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \r
elax }\x }}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/ulem.sty/after}
#1<-firstaid
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/ulem.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/ulem.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/ulem.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/ulem.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_
labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \
l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl 
}}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:
n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
}=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hoo
k_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook
_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_
labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \
l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl 
}}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:
n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
}=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hoo
k_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook
_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_dec
r:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__
hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.sty/after \l_
_hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_labels_clist
 \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\def \@hspace #
#1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \r
elax }\x }}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\def \@hspace ##1{\begingroup \setlength \sk
ip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \relax }\x }}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/ulem.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef
 \x {\endgroup \hskip \the \skip@ \relax }\x }

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/ulem.sty/after 
#2<-\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \h
skip \the \skip@ \relax }\x }

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ulem.sty/after 
#2<-\__kernel_exp_not:w {\def \@hspace ##1{\begingroup \setlength \skip@ {##1}\
edef \x {\endgroup \hskip \the \skip@ \relax }\x }}\__kernel_exp_not:w \exp_aft
er:wN {\__hook file/ulem.sty/after }

\__hook file/ulem.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/ulem.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/ulem.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/ulem.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/ulem.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/ulem.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/ulem.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/ulem.sty/after_labels_clist 

\g__hook_file/ulem.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_
labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \
l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl 
}}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:
n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
}=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hoo
k_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook
_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_
labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \
l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl 
}}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:
n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: 
}=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hoo
k_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook
_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_dec
r:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__
hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ulem.sty/after \l_
_hook_return_tl \__hook_clist_gput:NV \g__hook_file/ulem.sty/after_labels_clist
 \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/ulem.sty/after 
#3<-\cs:w __hook_toplevel file/ulem.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/ulem.sty/after 
#2<-\__hook_toplevel file/ulem.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ulem.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/ulem.sty/after }\__kernel_exp_no
t:w \exp_after:wN {\__hook file/ulem.sty/after }

\__hook file/ulem.sty/after ->\def \@hspace ##1{\begingroup \setlength \skip@ {
##1}\edef \x {\endgroup \hskip \the \skip@ \relax }\x }

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/ulem.sty/after 
#3<-\cs:w __hook_next file/ulem.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/ulem.sty/after 
#2<-\__hook_next file/ulem.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ulem.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/ulem.sty/after \__hook_next
 file/ulem.sty/after }

\__hook file/ulem.sty/after ->\__hook_toplevel file/ulem.sty/after \def \@hspac
e ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@
 \relax }\x }

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/ulem.sty/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/varwidth.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/varwidth.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/varwidth.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/varwidth.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/varwidth.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/varwidth.sty/afterhook\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/varwidth.sty/afterhook}{\exp_args:Nnnv \__hook_hook_
gput_code_do:nnn {file/varwidth.sty/after}{legacy}{@file/varwidth.sty/afterhook
}\__hook_tl_gclear:c {@file/varwidth.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/varwidth.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/varwidth.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/varwidth.sty/after\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/varwidth.sty/after_code_prop}{\__hook_tl_g
set:co {__hook file/varwidth.sty/after}{\cs:w __hook_toplevel file/varwidth.sty
/after\exp_after:wN \cs_end: \cs:w __hook_next file/varwidth.sty/after\cs_end: 
}}{\__hook_if_reversed:nTF {file/varwidth.sty/after}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/varwidth.sty/after_code_prop}\__hook_initialize_single:ccn {__
hook file/varwidth.sty/after}{g__hook_file/varwidth.sty/after_labels_clist}{fil
e/varwidth.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_use
d_prop {file/varwidth.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/varwidth.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/varwidth.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/varwidth.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/varwidth.sty/after}{\cs:w __hook_toplevel f
ile/varwidth.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/varwidth.st
y/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/varwidth.sty/after}{\cs_set_eq:NN \__hook_tl_
gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput
_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_p
rop {g__hook_file/varwidth.sty/after_code_prop}\__hook_initialize_single:ccn {_
_hook file/varwidth.sty/after}{g__hook_file/varwidth.sty/after_labels_clist}{fi
le/varwidth.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_us
ed_prop {file/varwidth.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/varwidth.sty/after

\g__hook_file/varwidth.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/varwidth.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/varwidth.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/varwidth.sty/after
#3<-g__hook_file/varwidth.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/varwidth.sty/after 
#2<-\g__hook_file/varwidth.sty/after_labels_clist 
#3<-file/varwidth.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/varwidth.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width minipages}{\def \@
vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \
lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \
z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift
@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to r
eprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \
fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@
toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@seto
ffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append
 \fi \fi \@vwid@sift }}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/varwidth.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width minipages}{\def \@
vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \
lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \
z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift
@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to r
eprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \
fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@
toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@seto
ffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append
 \fi \fi \@vwid@sift }}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/varwidth.sty/after}}
#1<-firstaid
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/varwidth.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width minipages}{\def \@
vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \
lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \
z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift
@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to r
eprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \
fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@
toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@seto
ffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append
 \fi \fi \@vwid@sift }}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/varwidth.sty/after}
#1<-firstaid
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/varwidth.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/varwidth.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/varwidth.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/varwidth.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwid
th.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwid
th.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwidth.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.sty/af
ter_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width minipages}{\def \@
vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \
lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \
z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift
@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to r
eprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \
fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@
toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@seto
ffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append
 \fi \fi \@vwid@sift }}}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\FirstAidNeededT {varwidth}{sty}{2009/03/30 
ver 0.92; \space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \
unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \las
tpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles
 \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@
sift \relax \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi 
\ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@pos
teqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \rela
x \else \ifnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =
\@vwid@postw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/varwidth.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \spa
ce Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim 
\lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpe
nalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \s
ift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \P
ackageWarning {varwidth}{Failed to reprocess entire contents}\fi \ifnum \count@
 =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eq
modetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum
 \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \
else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/varwidth.sty/after 
#2<-\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width
 minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \u
nskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@
 \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \
z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {va
rwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \
@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifn
um \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@
offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@reset
b \fi \@vwid@append \fi \fi \@vwid@sift }}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/varwidth.sty/after 
#2<-\__kernel_exp_not:w {\FirstAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; 
\space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \if
dim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \
unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \els
e \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \rela
x \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi \ifnum \co
unt@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwi
d@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \i
fnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@pos
tw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}}\__kernel_exp_n
ot:w \exp_after:wN {\__hook file/varwidth.sty/after }

\__hook file/varwidth.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/varwidth.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/varwidth.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/varwidth.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/varwidth.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/varwidth.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/varwidth.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/varwidth.sty/after_labels_clist 

\g__hook_file/varwidth.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwid
th.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwid
th.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.st
y/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled co
de for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_f
ront_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl
_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\
cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn
 \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {
\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{
\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front
_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/varwidth.s
ty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/varwidth.sty/af
ter_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/varwidth.sty/after 
#3<-\cs:w __hook_toplevel file/varwidth.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/varwidth.sty/after 
#2<-\__hook_toplevel file/varwidth.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/varwidth.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/varwidth.sty/after }\__kernel_ex
p_not:w \exp_after:wN {\__hook file/varwidth.sty/after }

\__hook file/varwidth.sty/after ->\FirstAidNeededT {varwidth}{sty}{2009/03/30 v
er 0.92; \space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \u
nskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \last
penalty \unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles 
\@ne \else \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@s
ift \relax \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi \
ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@post
eqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax
 \else \ifnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\
@vwid@postw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/varwidth.sty/after 
#3<-\cs:w __hook_next file/varwidth.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/varwidth.sty/after 
#2<-\__hook_next file/varwidth.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/varwidth.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/varwidth.sty/after \__hook_
next file/varwidth.sty/after }

\__hook file/varwidth.sty/after ->\__hook_toplevel file/varwidth.sty/after \Fir
stAidNeededT {varwidth}{sty}{2009/03/30 ver 0.92; \space Variable-width minipag
es}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \f
i \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbo
x \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \
ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{
Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eq
modefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \coun
t@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets 
\@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@
vwid@append \fi \fi \@vwid@sift }}

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/varwidth.sty/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/german.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/german.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/german.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/german.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/german.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/german.sty/afterhook\cs_end: \scan_
stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/german.sty/afterhook}{\exp_args:Nnnv \__hook_hook_gp
ut_code_do:nnn {file/german.sty/after}{legacy}{@file/german.sty/afterhook}\__ho
ok_tl_gclear:c {@file/german.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/german.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/german.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/german.sty/after\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/german.sty/after_code_prop}{\__hook_tl_gse
t:co {__hook file/german.sty/after}{\cs:w __hook_toplevel file/german.sty/after
\exp_after:wN \cs_end: \cs:w __hook_next file/german.sty/after\cs_end: }}{\__ho
ok_if_reversed:nTF {file/german.sty/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__
hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{
\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook
_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hoo
k_file/german.sty/after_code_prop}\__hook_initialize_single:ccn {__hook file/ge
rman.sty/after}{g__hook_file/german.sty/after_labels_clist}{file/german.sty/aft
er}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/germa
n.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/german.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/german.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/german.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/german.sty/after}{\cs:w __hook_toplevel fil
e/german.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/german.sty/afte
r\cs_end: }
#2<-\__hook_if_reversed:nTF {file/german.sty/after}{\cs_set_eq:NN \__hook_tl_gp
ut:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_l
eft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:N
N \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pro
p {g__hook_file/german.sty/after_code_prop}\__hook_initialize_single:ccn {__hoo
k file/german.sty/after}{g__hook_file/german.sty/after_labels_clist}{file/germa
n.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/german.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/german.sty/after

\g__hook_file/german.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/german.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/german.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/german.sty/after
#3<-g__hook_file/german.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/german.sty/after 
#2<-\g__hook_file/german.sty/after_labels_clist 
#3<-file/german.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/german.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {german}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let \
grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germa
nTeX }}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/german.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {german}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let \
grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germa
nTeX }}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/german.sty/after}}
#1<-firstaid
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/german.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {german}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let \
grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germa
nTeX }}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/german.sty/after}
#1<-firstaid
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/german.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/german.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/german.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/german.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german
.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german
.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german.sty/aft
er \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/after_labe
ls_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {german}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let \
grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germa
nTeX }}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\FirstAidNeededT {german}{sty}{1998/07/08 v2
.5e Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \
def \@active@dq {\protect \grmn@active@dq@ }\germanTeX }}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/german.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support fo
r writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@d
q {\protect \grmn@active@dq@ }\germanTeX }

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/german.sty/after 
#2<-\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german 
texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn
@active@dq@ }\germanTeX }

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/german.sty/after 
#2<-\__kernel_exp_not:w {\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e Suppor
t for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@acti
ve@dq {\protect \grmn@active@dq@ }\germanTeX }}\__kernel_exp_not:w \exp_after:w
N {\__hook file/german.sty/after }

\__hook file/german.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/german.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/german.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/german.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/german.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/german.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/german.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/german.sty/after_labels_clist 

\g__hook_file/german.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german
.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german
.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/german.sty/aft
er \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/german.sty/after_labe
ls_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/german.sty/after 
#3<-\cs:w __hook_toplevel file/german.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/german.sty/after 
#2<-\__hook_toplevel file/german.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/german.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/german.sty/after }\__kernel_exp_
not:w \exp_after:wN {\__hook file/german.sty/after }

\__hook file/german.sty/after ->\FirstAidNeededT {german}{sty}{1998/07/08 v2.5e
 Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def
 \@active@dq {\protect \grmn@active@dq@ }\germanTeX }

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/german.sty/after 
#3<-\cs:w __hook_next file/german.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/german.sty/after 
#2<-\__hook_next file/german.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/german.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/german.sty/after \__hook_ne
xt file/german.sty/after }

\__hook file/german.sty/after ->\__hook_toplevel file/german.sty/after \FirstAi
dNeededT {german}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} 
{\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ 
}\germanTeX }

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/german.sty/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/ngerman.sty/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/ngerman.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/ngerman.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/ngerman.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/ngerman.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/ngerman.sty/afterhook\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/ngerman.sty/afterhook}{\exp_args:Nnnv \__hook_hook_g
put_code_do:nnn {file/ngerman.sty/after}{legacy}{@file/ngerman.sty/afterhook}\_
_hook_tl_gclear:c {@file/ngerman.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/ngerman.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/ngerman.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/ngerman.sty/after\cs_end: \sc
an_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/ngerman.sty/after_code_prop}{\__hook_tl_gs
et:co {__hook file/ngerman.sty/after}{\cs:w __hook_toplevel file/ngerman.sty/af
ter\exp_after:wN \cs_end: \cs:w __hook_next file/ngerman.sty/after\cs_end: }}{\
__hook_if_reversed:nTF {file/ngerman.sty/after}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_file/ngerman.sty/after_code_prop}\__hook_initialize_single:ccn {__hook f
ile/ngerman.sty/after}{g__hook_file/ngerman.sty/after_labels_clist}{file/ngerma
n.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/ngerman.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/ngerman.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/ngerman.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/ngerman.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/ngerman.sty/after}{\cs:w __hook_toplevel fi
le/ngerman.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/ngerman.sty/a
fter\cs_end: }
#2<-\__hook_if_reversed:nTF {file/ngerman.sty/after}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/ngerman.sty/after_code_prop}\__hook_initialize_single:ccn {__h
ook file/ngerman.sty/after}{g__hook_file/ngerman.sty/after_labels_clist}{file/n
german.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_pr
op {file/ngerman.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/ngerman.sty/after

\g__hook_file/ngerman.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/ngerman.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/ngerman.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/ngerman.sty/after
#3<-g__hook_file/ngerman.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/ngerman.sty/after 
#2<-\g__hook_file/ngerman.sty/after_labels_clist 
#3<-file/ngerman.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/ngerman.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {ngerman}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let 
\grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\nger
manTeX }}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/ngerman.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {ngerman}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let 
\grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\nger
manTeX }}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/ngerman.sty/after}}
#1<-firstaid
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/ngerman.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {ngerman}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let 
\grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\nger
manTeX }}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/ngerman.sty/after}
#1<-firstaid
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/ngerman.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/ngerman.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/ngerman.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/ngerman.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerma
n.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/
after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerma
n.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/
after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\i
nt_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_t
l \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerman.sty/
after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/after_
labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\FirstAidNeeded
T {ngerman}{sty}{1998/07/08 v2.5e Support for writing german texts (br)} {\let 
\grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\nger
manTeX }}

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\FirstAidNeededT {ngerman}{sty}{1998/07/08 v
2.5e Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq 
\def \@active@dq {\protect \grmn@active@dq@ }\ngermanTeX }}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/ngerman.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support f
or writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@
dq {\protect \grmn@active@dq@ }\ngermanTeX }

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/ngerman.sty/after 
#2<-\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german
 texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grm
n@active@dq@ }\ngermanTeX }

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ngerman.sty/after 
#2<-\__kernel_exp_not:w {\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.5e Suppo
rt for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@act
ive@dq {\protect \grmn@active@dq@ }\ngermanTeX }}\__kernel_exp_not:w \exp_after
:wN {\__hook file/ngerman.sty/after }

\__hook file/ngerman.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/ngerman.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/ngerman.sty/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/ngerman.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/ngerman.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/ngerman.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/ngerman.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/ngerman.sty/after_labels_clist 

\g__hook_file/ngerman.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerma
n.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/
after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerma
n.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/
after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\i
nt_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_t
l \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/ngerman.sty/
after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/ngerman.sty/after_
labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/ngerman.sty/after 
#3<-\cs:w __hook_toplevel file/ngerman.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/ngerman.sty/after 
#2<-\__hook_toplevel file/ngerman.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ngerman.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/ngerman.sty/after }\__kernel_exp
_not:w \exp_after:wN {\__hook file/ngerman.sty/after }

\__hook file/ngerman.sty/after ->\FirstAidNeededT {ngerman}{sty}{1998/07/08 v2.
5e Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \d
ef \@active@dq {\protect \grmn@active@dq@ }\ngermanTeX }

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/ngerman.sty/after 
#3<-\cs:w __hook_next file/ngerman.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/ngerman.sty/after 
#2<-\__hook_next file/ngerman.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/ngerman.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/ngerman.sty/after \__hook_n
ext file/ngerman.sty/after }

\__hook file/ngerman.sty/after ->\__hook_toplevel file/ngerman.sty/after \First
AidNeededT {ngerman}{sty}{1998/07/08 v2.5e Support for writing german texts (br
)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@d
q@ }\ngermanTeX }

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/ngerman.sty/after}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/memoir.cls/before

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/memoir.cls/before

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/memoir.cls/before'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/memoir.cls/before

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/memoir.cls/beforehook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/memoir.cls/beforehook\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/memoir.cls/beforehook}{\exp_args:Nnnv \__hook_hook_g
put_code_do:nnn {file/memoir.cls/before}{legacy}{@file/memoir.cls/beforehook}\_
_hook_tl_gclear:c {@file/memoir.cls/beforehook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/memoir.cls/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/memoir.cls/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/memoir.cls/before\cs_end: \sc
an_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/memoir.cls/before_code_prop}{\__hook_tl_gs
et:co {__hook file/memoir.cls/before}{\cs:w __hook_toplevel file/memoir.cls/bef
ore\exp_after:wN \cs_end: \cs:w __hook_next file/memoir.cls/before\cs_end: }}{\
__hook_if_reversed:nTF {file/memoir.cls/before}{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:
NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \_
_hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g
__hook_file/memoir.cls/before_code_prop}\__hook_initialize_single:ccn {__hook f
ile/memoir.cls/before}{g__hook_file/memoir.cls/before_labels_clist}{file/memoir
.cls/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/memoir.cls/before}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/memoir.cls/before_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/memoir.cls/before_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/memoir.cls/before_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/memoir.cls/before}{\cs:w __hook_toplevel fi
le/memoir.cls/before\exp_after:wN \cs_end: \cs:w __hook_next file/memoir.cls/be
fore\cs_end: }
#2<-\__hook_if_reversed:nTF {file/memoir.cls/before}{\cs_set_eq:NN \__hook_tl_g
put:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_
left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:
NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pr
op {g__hook_file/memoir.cls/before_code_prop}\__hook_initialize_single:ccn {__h
ook file/memoir.cls/before}{g__hook_file/memoir.cls/before_labels_clist}{file/m
emoir.cls/before}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_pr
op {file/memoir.cls/before}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/memoir.cls/before

\g__hook_file/memoir.cls/before_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/memoir.cls/before_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/memoir.cls/before_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/memoir.cls/before
#3<-g__hook_file/memoir.cls/before_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/memoir.cls/before 
#2<-\g__hook_file/memoir.cls/before_labels_clist 
#3<-file/memoir.cls/before

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/memoir.cls/before

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\expandafter \d
ef \expandafter \@tempa \string \dimen {}\edef \kernel@stockheight {\expandafte
r \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\expandafter \@tempa
 \meaning \stockwidth }\let \stockheight \@undefined \let \stockwidth \@undefin
ed }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/memoir.cls/before}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\expandafter \d
ef \expandafter \@tempa \string \dimen {}\edef \kernel@stockheight {\expandafte
r \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\expandafter \@tempa
 \meaning \stockwidth }\let \stockheight \@undefined \let \stockwidth \@undefin
ed }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/memoir.cls/before}}
#1<-firstaid
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/memoir.cls/before}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\expandafter \d
ef \expandafter \@tempa \string \dimen {}\edef \kernel@stockheight {\expandafte
r \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\expandafter \@tempa
 \meaning \stockwidth }\let \stockheight \@undefined \let \stockwidth \@undefin
ed }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/memoir.cls/before}
#1<-firstaid
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/memoir.cls/before
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/memoir.cls/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/memoir.cls/before 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/memoir.cls/before_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/b
efore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/b
efore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\i
nt_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_t
l \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir.cls/b
efore \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/before_
labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\expandafter \d
ef \expandafter \@tempa \string \dimen {}\edef \kernel@stockheight {\expandafte
r \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\expandafter \@tempa
 \meaning \stockwidth }\let \stockheight \@undefined \let \stockwidth \@undefin
ed }

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\expandafter \def \expandafter \@tempa \stri
ng \dimen {}\edef \kernel@stockheight {\expandafter \@tempa \meaning \stockheig
ht }\edef \kernel@stockwidth {\expandafter \@tempa \meaning \stockwidth }\let \
stockheight \@undefined \let \stockwidth \@undefined }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/memoir.cls/before 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\expandafter \def \expandafter \@tempa \string \dimen {}\e
def \kernel@stockheight {\expandafter \@tempa \meaning \stockheight }\edef \ker
nel@stockwidth {\expandafter \@tempa \meaning \stockwidth }\let \stockheight \@
undefined \let \stockwidth \@undefined 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook file/memoir.cls/before 
#2<-\expandafter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stock
height {\expandafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\
expandafter \@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \s
tockwidth \@undefined 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/memoir.cls/before \expandaf
ter \def \expandafter \@tempa \string \dimen {}\edef \kernel@stockheight {\expa
ndafter \@tempa \meaning \stockheight }\edef \kernel@stockwidth {\expandafter \
@tempa \meaning \stockwidth }\let \stockheight \@undefined \let \stockwidth \@u
ndefined }

\__hook file/memoir.cls/before ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_file/memoir.cls/before_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/memoir.cls/before_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/memoir.cls/before_labels_clist 
#3<-\g__hook_file/memoir.cls/before_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/memoir.cls/before_labels_clist 

\g__hook_file/memoir.cls/before_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/memoir.cls/before_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/b
efore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/before \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/b
efore_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code
 for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_fro
nt_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs
_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \
l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l
__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\i
nt_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_t
l \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir.cls/b
efore \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/before_
labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/memoir.cls/before 
#3<-\cs:w __hook_toplevel file/memoir.cls/before\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook file/memoir.cls/before 
#2<-\__hook_toplevel file/memoir.cls/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/memoir.cls/before \__hook_t
oplevel file/memoir.cls/before }

\__hook file/memoir.cls/before ->\expandafter \def \expandafter \@tempa \string
 \dimen {}\edef \kernel@stockheight {\expandafter \@tempa \meaning \stockheight
 }\edef \kernel@stockwidth {\expandafter \@tempa \meaning \stockwidth }\let \st
ockheight \@undefined \let \stockwidth \@undefined 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/memoir.cls/before 
#3<-\cs:w __hook_next file/memoir.cls/before\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/memoir.cls/before 
#2<-\__hook_next file/memoir.cls/before 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/before 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/memoir.cls/before \__hook_n
ext file/memoir.cls/before }

\__hook file/memoir.cls/before ->\expandafter \def \expandafter \@tempa \string
 \dimen {}\edef \kernel@stockheight {\expandafter \@tempa \meaning \stockheight
 }\edef \kernel@stockwidth {\expandafter \@tempa \meaning \stockwidth }\let \st
ockheight \@undefined \let \stockwidth \@undefined \__hook_toplevel file/memoir
.cls/before 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/memoir.cls/before}{}

\__seq_item:n #1->\__hook_update_hook_code:n {#1}
#1<-file/memoir.cls/after

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/memoir.cls/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/memoir.cls/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/memoir.cls/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/memoir.cls/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/memoir.cls/afterhook\cs_end: \scan_
stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/memoir.cls/afterhook}{\exp_args:Nnnv \__hook_hook_gp
ut_code_do:nnn {file/memoir.cls/after}{legacy}{@file/memoir.cls/afterhook}\__ho
ok_tl_gclear:c {@file/memoir.cls/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/memoir.cls/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/memoir.cls/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/memoir.cls/after\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/memoir.cls/after_code_prop}{\__hook_tl_gse
t:co {__hook file/memoir.cls/after}{\cs:w __hook_toplevel file/memoir.cls/after
\exp_after:wN \cs_end: \cs:w __hook_next file/memoir.cls/after\cs_end: }}{\__ho
ok_if_reversed:nTF {file/memoir.cls/after}{\cs_set_eq:NN \__hook_tl_gput:Nn \__
hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }{
\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook
_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hoo
k_file/memoir.cls/after_code_prop}\__hook_initialize_single:ccn {__hook file/me
moir.cls/after}{g__hook_file/memoir.cls/after_labels_clist}{file/memoir.cls/aft
er}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/memoi
r.cls/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/memoir.cls/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/memoir.cls/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/memoir.cls/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/memoir.cls/after}{\cs:w __hook_toplevel fil
e/memoir.cls/after\exp_after:wN \cs_end: \cs:w __hook_next file/memoir.cls/afte
r\cs_end: }
#2<-\__hook_if_reversed:nTF {file/memoir.cls/after}{\cs_set_eq:NN \__hook_tl_gp
ut:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_l
eft:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:N
N \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_pro
p {g__hook_file/memoir.cls/after_code_prop}\__hook_initialize_single:ccn {__hoo
k file/memoir.cls/after}{g__hook_file/memoir.cls/after_labels_clist}{file/memoi
r.cls/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {f
ile/memoir.cls/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/memoir.cls/after

\g__hook_file/memoir.cls/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/memoir.cls/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/memoir.cls/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/memoir.cls/after
#3<-g__hook_file/memoir.cls/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/memoir.cls/after 
#2<-\g__hook_file/memoir.cls/after_labels_clist 
#3<-file/memoir.cls/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/memoir.cls/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\dimen \kernel@
stockheight =\stockheight \dimen \kernel@stockwidth =\stockwidth \dimendef \sto
ckheight =\kernel@stockheight \dimendef \stockwidth =\kernel@stockwidth }

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-firstaid
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-firstaid

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {firstaid}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {firstaid}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_firstaid_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {firstaid}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-firstaid

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_firstaid_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_firstaid_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_firstaid_seq 
#2<-\seq_new:N \l__hook_label_firstaid_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_firstaid_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_firstaid_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/memoir.cls/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\dimen \kernel@
stockheight =\stockheight \dimen \kernel@stockwidth =\stockwidth \dimendef \sto
ckheight =\kernel@stockheight \dimendef \stockwidth =\kernel@stockwidth }

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/memoir.cls/after}}
#1<-firstaid
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {firstaid}{##1}{\prop_map_break: }{\__hook_appl
y_label_pair:nnn {firstaid}{##1}}{\__hook_apply_label_pair:nnn {##1}{firstaid}}
{file/memoir.cls/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_2:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\dimen \kernel@
stockheight =\stockheight \dimen \kernel@stockwidth =\stockwidth \dimendef \sto
ckheight =\kernel@stockheight \dimendef \stockwidth =\kernel@stockwidth }

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {firstaid}{#1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {firstaid}{#1}}{\__hook_apply_label_
pair:nnn {#1}{firstaid}}{file/memoir.cls/after}
#1<-firstaid
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-firstaid
#2<-firstaid

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}
#3<-\__hook_apply_label_pair:nnn {firstaid}{firstaid}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/memoir.cls/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {firstaid}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-firstaid

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {firstaid}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-firstaid

\l__hook_label_firstaid_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{firstaid}\tl_set:Nn \l
__hook_rear_tl {firstaid}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-firstaid

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-firstaid

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/memoir.cls/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/memoir.cls/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/memoir.cls/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-firstaid
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir.cls/aft
er \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/after_labe
ls_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-firstaid

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {firstaid}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-firstaid
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn firstaid\s__prop {\dimen \kernel@
stockheight =\stockheight \dimen \kernel@stockwidth =\stockwidth \dimendef \sto
ckheight =\kernel@stockheight \dimendef \stockwidth =\kernel@stockwidth }

\__prop_split_aux:w #1\__prop_pair:wn firstaid\s__prop #2#3\s__prop_mark #4#5\s
__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return
_tl {\q_no_value }}
#1<-\s__prop 
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn firstaid\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\dimen \kernel@stockheight =\stockheight \di
men \kernel@stockwidth =\stockwidth \dimendef \stockheight =\kernel@stockheight
 \dimendef \stockwidth =\kernel@stockwidth }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/memoir.cls/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\dimen \kernel@stockheight =\stockheight \dimen \kernel@st
ockwidth =\stockwidth \dimendef \stockheight =\kernel@stockheight \dimendef \st
ockwidth =\kernel@stockwidth 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/memoir.cls/after 
#2<-\dimen \kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockw
idth \dimendef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel
@stockwidth 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/after 
#2<-\__kernel_exp_not:w {\dimen \kernel@stockheight =\stockheight \dimen \kerne
l@stockwidth =\stockwidth \dimendef \stockheight =\kernel@stockheight \dimendef
 \stockwidth =\kernel@stockwidth }\__kernel_exp_not:w \exp_after:wN {\__hook fi
le/memoir.cls/after }

\__hook file/memoir.cls/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/memoir.cls/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->firstaid

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/memoir.cls/after_labels_clist 
#4<-firstaid

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-firstaid

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-firstaid

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: firstaid?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-f

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: firstaid}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: firstaid

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-firstaid
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: firstaid

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: firstaid\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: firstaid\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: firstaid\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: firstaid
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: firstaid

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-firstaid

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-firstaid

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-firstaid

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-firstaid

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?firstaid \s__clist_mark ? firstaid\s__cl
ist_mark , \s__clist_mark firstaid,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?firstaid 
#2<-firstaid\s__clist_mark ,
#3<-firstaid

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {firstaid{}}{\tl_if_empty:nTF {firstaid}{\prg_retu
rn_true: }{\tl_if_empty:oTF {\use_none:n firstaid}{\prg_return_true: }{\prg_ret
urn_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-firstaid{}

\use_none:n #1->
#1<-{firstaid{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {firstaid}{\prg_return_true: }{\tl_if_empty:oTF {\use_none
:n firstaid}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{firstaid}}
#2<-\exp_not:n {firstaid}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/memoir.cls/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/memoir.cls/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->firstaid

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/memoir.cls/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/memoir.cls/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/memoir.cls/after_labels_clist 

\g__hook_file/memoir.cls/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_firstaid_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_2:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_firstaid_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->firstaid

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_firstaid_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir
.cls/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/af
ter_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code f
or \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front
_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csn
ame:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l_
_hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__
hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int
_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl 
\l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/memoir.cls/aft
er \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/memoir.cls/after_labe
ls_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/memoir.cls/after 
#3<-\cs:w __hook_toplevel file/memoir.cls/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/memoir.cls/after 
#2<-\__hook_toplevel file/memoir.cls/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/memoir.cls/after }\__kernel_exp_
not:w \exp_after:wN {\__hook file/memoir.cls/after }

\__hook file/memoir.cls/after ->\dimen \kernel@stockheight =\stockheight \dimen
 \kernel@stockwidth =\stockwidth \dimendef \stockheight =\kernel@stockheight \d
imendef \stockwidth =\kernel@stockwidth 

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/memoir.cls/after 
#3<-\cs:w __hook_next file/memoir.cls/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/memoir.cls/after 
#2<-\__hook_next file/memoir.cls/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/memoir.cls/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/memoir.cls/after \__hook_ne
xt file/memoir.cls/after }

\__hook file/memoir.cls/after ->\__hook_toplevel file/memoir.cls/after \dimen \
kernel@stockheight =\stockheight \dimen \kernel@stockwidth =\stockwidth \dimend
ef \stockheight =\kernel@stockheight \dimendef \stockwidth =\kernel@stockwidth 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/memoir.cls/after}{}

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\__hook_debug:n #1->
#1<-\iow_term:x {
All initialized (non-empty) hooks:}\prop_map_inline:Nn \g__hook_used_prop {\iow
_term:x {
 ##1 -> \exp_not:v {__hook ##1} }}

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\hook_use:n 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_preamble_hook:n 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/document/begin

\document ->\UseOneTimeHook {begindocument/before}\@kernel@after@begindocument@
before \@expl@sys@load@backend@@ \ifx \@unusedoptionlist \@empty \else \@latex@
warning@no@line {Unused global option(s):
\@spaces [\@unusedoptionlist ]}\fi \@colht \textheight \@colroom \textheight \v
size \textheight \columnwidth \textwidth \@clubpenalty \clubpenalty \if@twocolu
mn \advance \columnwidth -\columnsep \divide \columnwidth \tw@ \hsize \columnwi
dth \@firstcolumntrue \fi \hsize \columnwidth \linewidth \hsize \begingroup \@f
loatplacement \@dblfloatplacement \makeatletter \let \@writefile \@gobbletwo \g
lobal \let \@multiplelabels \relax \@input {\jobname .aux}\endgroup \if@filesw 
\immediate \openout \@mainaux \jobname .aux \immediate \write \@mainaux {\relax
 }\fi \process@table \let \glb@currsize \@empty \normalsize \everypar {}\ifx \n
ormalsfcodes \@empty \ifnum \sfcode `\.=\@m \let \normalsfcodes \frenchspacing 
\else \let \normalsfcodes \nonfrenchspacing \fi \fi \ifx \document@default@lang
uage \m@ne \chardef \document@default@language \language \fi \@noskipsecfalse \
let \@refundefined \relax \@kernel@before@begindocument \UseOneTimeHook {begind
ocument}\@kernel@after@begindocument \ifdim \topskip <1sp\global \topskip 1sp\r
elax \fi \global \@maxdepth \maxdepth \global \let \@begindocumenthook \@undefi
ned \ifx \@listfiles \@undefined \global \let \@filelist \relax \global \let \@
addtofilelist \@gobble \fi \gdef \do ##1{\global \let ##1\@notprerr }\@preamble
cmds \global \let \@nodocument \relax \global \let \do \noexpand \UseOneTimeHoo
k {begindocument/end}\ignorespaces 

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-begindocument/before

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-begindocument/before

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-begindocument/before

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument/before

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument/before\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_begindocument/be
fore_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \
prg_return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_begindocument/before_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {begindocument/be
fore}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {begindocument/before}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {begindocument/before}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {begindocument/before}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {begindocument/before}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/before}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {begindocument/before}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {begindocument/before}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {begindocument/before}}\__hook_parse_dot_l
abel:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {begindocument/before}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {begindocument/before}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {begindocument/before}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {begindocument/before}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {begindocument/before}\s__tl_nil \__tl_trim_spaces_
auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {begindocument/before}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {begindocument/before}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {begindocument/before}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/before}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {begindocument/before}}{.}{\__hook_currname_or_defa
ult: }{\__hook_parse_dot_label:w \use:n {begindocument/before}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/before}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {begindocument/before}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {begindocument/before}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/before}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {begindocument/before}}}{\_
_hook_parse_dot_label_cleanup:w \use:n {begindocument/before}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {begindocument/before}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {begindocument/before}./\s__hook_m
ark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {begindocument/before}

\use:n #1->#1
#1<-begindocument/before

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-begindocument/before

\__hook_preamble_hook:n #1->
#1<-begindocument/before

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-begindocument/before

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_begindocument/before_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_begindocument/before_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-begindocument/before

\__hook begindocument/before ->\document@inithook \__hook_toplevel begindocumen
t/before \__hook_next begindocument/before 

\document@inithook ->\AtBeginDocument {\class@documenthook }\let \contentsline@
latex \contentsline \let \contentsline \ltx@contentsline \init@hyperref \@ifpac
kageloaded {array}{\switch@array }{\switch@tabular }\prepdef \endtabular {\endt
abular@hook }\@provide \endtabular@hook {}\prepdef \endarray {\endarray@hook }\
@provide \endarray@hook {}\providecommand \array@hook {}\prepdef \@tabular {\ta
bular@hook }\@provide \tabular@hook {}\switch@hyperref@href \@ifxundefined \new
float {}{\@ifx {\float@end \float@end@float }{\@ifx {\newfloat \newfloat@float 
}{\true@sw }{\false@sw }}{\false@sw }{\class@warn {Repair the float package}\le
t \float@end \float@end@ltx \let \newfloat \newfloat@ltx }{\class@warn {Failed 
to patch the float package}}}\@ifxundefined \rotatebox {\let \rotatebox \rotate
box@dummy }{}\@ifxundefined \raggedcolumn@sw {\@booleanfalse \raggedcolumn@sw }
{}\switch@longtable \let \LT@makecaption \LT@makecaption@rtx \protectdef@boldma
th \twoside@sw {\@twosidetrue }{\@twosidefalse }\@ifpackageloaded {hyperref}{\h
ypertext@enable@ltx }{}\incompatible@package {cite}\incompatible@package {mcite
}\incompatible@package {multicol}\set@table@environments \@ifxundefined \c@floa
t@type {}{\global \setcounter {float@type}{8}}\@ifpackageloaded {dcolumn}{\expa
ndafter \@ifnotrelax \csname NC@find@d\endcsname {}{\newcolumntype {d}{D{.}{.}{
-1}}}}{}\@ifxundefined \TextOrMath {\DeclareRobustCommand \TextOrMath {\@ifmmod
e {\false@sw }{\true@sw }}}{}

\AtBeginDocument ->\protect \AtBeginDocument  

\AtBeginDocument  ->\AddToHook {begindocument}

\AddToHook ->\__cmd_start:nNNnnn {mo+m}\AddToHook  \AddToHook code {\__cmd_grab
_m_1:w \__cmd_grab_D:w []\__cmd_grab_m_long:w }{}{}

\__cmd_start:nNNnnn #1#2#3->\xparse function is not expandable \conditionally@t
raceoff \group_align_safe_begin: \bool_set_false:N \l__cmd_environment_bool \__
cmd_start_aux:NNnnnn #2#3{#1}
#1<-mo+m
#2<-\AddToHook  
#3<-\AddToHook code 

\conditionally@traceoff ->

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\bool_set_false:N #1->\cs_set_eq:NN #1\c_false_bool 
#1<-\l__cmd_environment_bool 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__cmd_environment_bool 

\__cmd_start_aux:NNnnnn #1#2#3#4#5#6->\tl_clear:N \l__cmd_args_tl \tl_set:Nn \l
__cmd_fn_tl {#1}\tl_set:Nn \l__cmd_fn_code_tl {#2}\tl_set:Nn \l__cmd_defaults_t
l {#5}\tl_set:Nn \l__cmd_process_all_tl {#6}#4\__cmd_run_code: 
#1<-\AddToHook  
#2<-\AddToHook code 
#3<-mo+m
#4<-\__cmd_grab_m_1:w \__cmd_grab_D:w []\__cmd_grab_m_long:w 
#5<-
#6<-

\tl_clear:N #1->\tex_let:D #1= \c_empty_tl 
#1<-\l__cmd_args_tl 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_fn_tl 
#2<-\AddToHook  

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_fn_code_tl 
#2<-\AddToHook code 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_defaults_tl 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_process_all_tl 
#2<-

\__cmd_grab_m_1:w #1\__cmd_run_code: ->\tl_set:Nn \l__cmd_signature_tl {#1}\exp
_after:wN \cs_set_eq:NN \l__cmd_fn_tl \__cmd_grab_m_aux:Nnnnnnnnn \l__cmd_fn_tl
 \use_none:nnnnnnn {}{}{}{}{}{}{}
#1<-\__cmd_grab_D:w []\__cmd_grab_m_long:w 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_signature_tl 
#2<-\__cmd_grab_D:w []\__cmd_grab_m_long:w 

\l__cmd_fn_tl ->\AddToHook  

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\AddToHook  

\l__cmd_fn_tl ->\AddToHook  

\AddToHook  #1#2#3#4#5#6#7#8#9->\tl_put_right:No \l__cmd_args_tl {#1{#2}{#3}{#4
}{#5}{#6}{#7}{#8}{#9}}\l__cmd_signature_tl \__cmd_run_code: 
#1<-\use_none:nnnnnnn 
#2<-
#3<-
#4<-
#5<-
#6<-
#7<-
#8<-
#9<-begindocument

\tl_put_right:No #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1}\__kernel_exp_not:w \exp_after:wN {#2}}
#1<-\l__cmd_args_tl 
#2<-\use_none:nnnnnnn {}{}{}{}{}{}{}{begindocument}

\l__cmd_args_tl ->

\use_none:nnnnnnn #1#2#3#4#5#6#7->
#1<-
#2<-
#3<-
#4<-
#5<-
#6<-
#7<-

\l__cmd_signature_tl ->\__cmd_grab_D:w []\__cmd_grab_m_long:w 

\__cmd_grab_D:w #1#2#3\__cmd_run_code: ->\__cmd_grab_D_aux:NNnNNN #1#2{#3}\cs_s
et_protected_nopar:Npn \__cmd_peek_nonspace_remove:NTF \use_ii:nn 
#1<-[
#2<-]
#3<-\__cmd_grab_m_long:w 

\__cmd_grab_D_aux:NNnNNN #1#2#3#4#5#6->\__cmd_grab_D_aux:NNnNN #1#2{#3}#4#6#5#1
{\__cmd_grab_D_call:Nw #1}{\__cmd_add_arg:o \c_novalue_tl }
#1<-[
#2<-]
#3<-\__cmd_grab_m_long:w 
#4<-\cs_set_protected_nopar:Npn 
#5<-\__cmd_peek_nonspace_remove:NTF 
#6<-\use_ii:nn 

\__cmd_grab_D_aux:NNnNN #1#2#3#4#5->\tl_set:Nn \l__cmd_signature_tl {#3}\exp_af
ter:wN #4\l__cmd_fn_tl ##1#2{\tl_if_in:nnTF {##1}{#1}{\__cmd_grab_D_nested:NNnN
 #1#2{##1}#4}{\tl_if_blank:oTF {\use_none:n ##1}{\__cmd_add_arg:o {\use_none:n 
##1}}{\str_if_eq:eeTF {\exp_not:o {\use_none:n ##1}}{{\exp_not:o {\use_ii:nnn #
#1\q_nil }}}{\__cmd_add_arg:o {#5##1}}{\__cmd_add_arg:o {\use_none:n ##1}}}}}
#1<-[
#2<-]
#3<-\__cmd_grab_m_long:w 
#4<-\cs_set_protected_nopar:Npn 
#5<-\use_ii:nn 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_signature_tl 
#2<-\__cmd_grab_m_long:w 

\l__cmd_fn_tl ->\AddToHook  

\cs_set_protected_nopar:Npn ->\tex_protected:D \tex_def:D 

\__cmd_peek_nonspace_remove:NTF ->\__cmd_peek_nonspace_aux:nNNTF {}\__cmd_peek_
meaning_remove:NTF 

\__cmd_peek_nonspace_aux:nNNTF #1#2#3#4#5->\peek_meaning_remove:NTF \c_space_to
ken {\__cmd_peek_nonspace_aux:nNNTF {#1 }#2#3{#4}{#5}}{#2#3{#4}{#5#1}}
#1<-
#2<-\__cmd_peek_meaning_remove:NTF 
#3<-[
#4<-\__cmd_grab_D_call:Nw [
#5<-\__cmd_add_arg:o \c_novalue_tl 

\peek_meaning_remove:NTF ->\__peek_token_remove_generic:NNTF \__peek_execute_br
anches_meaning: 

\__peek_token_remove_generic:NNTF ->\__peek_token_generic_aux:NNNTF \__peek_tru
e_remove:w 

\__peek_token_generic_aux:NNNTF #1#2#3#4#5->\group_align_safe_begin: \cs_set_eq
:NN \l__peek_search_token #3\tl_set:Nn \l__peek_search_tl {#3}\cs_set:Npx \__pe
ek_true_aux:w {\exp_not:N \group_align_safe_end: \exp_not:n {#4}}\cs_set_eq:NN 
\__peek_true:w #1\cs_set:Npx \__peek_false:w {\exp_not:N \group_align_safe_end:
 \exp_not:n {#5}}\peek_after:Nw #2
#1<-\__peek_true_remove:w 
#2<-\__peek_execute_branches_meaning: 
#3<-\c_space_token 
#4<-\__cmd_peek_nonspace_aux:nNNTF { }\__cmd_peek_meaning_remove:NTF [{\__cmd_g
rab_D_call:Nw [}{\__cmd_add_arg:o \c_novalue_tl }
#5<-\__cmd_peek_meaning_remove:NTF [{\__cmd_grab_D_call:Nw [}{\__cmd_add_arg:o 
\c_novalue_tl }

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__peek_search_token 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__peek_search_tl 
#2<-\c_space_token 

\cs_set:Npx ->\tex_long:D \tex_edef:D 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__peek_true:w 

\cs_set:Npx ->\tex_long:D \tex_edef:D 

\peek_after:Nw ->\tex_futurelet:D \l_peek_token 

\__peek_execute_branches_meaning: ->\if_meaning:w \l_peek_token \l__peek_search
_token \exp_after:wN \__peek_true:w \else: \exp_after:wN \__peek_false:w \fi: 

\__peek_false:w ->\group_align_safe_end: \__cmd_peek_meaning_remove:NTF [{\__cm
d_grab_D_call:Nw [}{\__cmd_add_arg:o \c_novalue_tl }

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__cmd_peek_meaning_remove:NTF ->\__cmd_peek_meaning_aux:NNTF \c_true_bool 

\__cmd_peek_meaning_aux:NNTF #1#2#3#4->\tl_set:Nn \l__cmd_tmpa_tl {#3}\tl_set:N
n \l__cmd_tmpb_tl {#4}\peek_meaning:NTF #2{\token_if_eq_meaning:NNTF #2\c_group
_begin_token {\__cmd_peek_true_remove:Nw #1}{\__cmd_token_if_cs:NTF #2{\__cmd_p
eek_cs_check_equal:NNN #1#2}{\__cmd_peek_true_remove:Nw #1}}}{\l__cmd_tmpb_tl }
#1<-\c_true_bool 
#2<-[
#3<-\__cmd_grab_D_call:Nw [
#4<-\__cmd_add_arg:o \c_novalue_tl 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_tmpa_tl 
#2<-\__cmd_grab_D_call:Nw [

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_tmpb_tl 
#2<-\__cmd_add_arg:o \c_novalue_tl 

\peek_meaning:NTF ->\__peek_token_generic:NNTF \__peek_execute_branches_meaning
: 

\__peek_token_generic:NNTF ->\__peek_token_generic_aux:NNNTF \__peek_true_aux:w
 

\__peek_token_generic_aux:NNNTF #1#2#3#4#5->\group_align_safe_begin: \cs_set_eq
:NN \l__peek_search_token #3\tl_set:Nn \l__peek_search_tl {#3}\cs_set:Npx \__pe
ek_true_aux:w {\exp_not:N \group_align_safe_end: \exp_not:n {#4}}\cs_set_eq:NN 
\__peek_true:w #1\cs_set:Npx \__peek_false:w {\exp_not:N \group_align_safe_end:
 \exp_not:n {#5}}\peek_after:Nw #2
#1<-\__peek_true_aux:w 
#2<-\__peek_execute_branches_meaning: 
#3<-[
#4<-\token_if_eq_meaning:NNTF [\c_group_begin_token {\__cmd_peek_true_remove:Nw
 \c_true_bool }{\__cmd_token_if_cs:NTF [{\__cmd_peek_cs_check_equal:NNN \c_true
_bool [}{\__cmd_peek_true_remove:Nw \c_true_bool }}
#5<-\l__cmd_tmpb_tl 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__peek_search_token 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__peek_search_tl 
#2<-[

\cs_set:Npx ->\tex_long:D \tex_edef:D 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__peek_true:w 

\cs_set:Npx ->\tex_long:D \tex_edef:D 

\peek_after:Nw ->\tex_futurelet:D \l_peek_token 

\__peek_execute_branches_meaning: ->\if_meaning:w \l_peek_token \l__peek_search
_token \exp_after:wN \__peek_true:w \else: \exp_after:wN \__peek_false:w \fi: 

\__peek_false:w ->\group_align_safe_end: \l__cmd_tmpb_tl 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\l__cmd_tmpb_tl ->\__cmd_add_arg:o \c_novalue_tl 

\__cmd_add_arg:o ->\exp_args:No \__cmd_add_arg:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__cmd_add_arg:n 
#2<-\c_novalue_tl 

\c_novalue_tl ->-NoValue-

\__cmd_add_arg:n #1->\tl_put_right:Nn \l__cmd_args_tl {{#1}}\l__cmd_signature_t
l \__cmd_run_code: 
#1<--NoValue-

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__cmd_args_tl 
#2<-{-NoValue-}

\l__cmd_args_tl ->{begindocument}

\l__cmd_signature_tl ->\__cmd_grab_m_long:w 

\__cmd_grab_m_long:w #1\__cmd_run_code: ->\tl_set:Nn \l__cmd_signature_tl {#1}\
exp_after:wN \cs_set_protected:Npn \l__cmd_fn_tl ##1{\__cmd_add_arg:n {##1}}\l_
_cmd_fn_tl 
#1<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__cmd_signature_tl 
#2<-

\l__cmd_fn_tl ->\AddToHook  

\cs_set_protected:Npn ->\tex_protected:D \tex_long:D \tex_def:D 

\l__cmd_fn_tl ->\AddToHook  

\AddToHook  #1->\__cmd_add_arg:n {#1}
#1<-\class@documenthook 

\__cmd_add_arg:n #1->\tl_put_right:Nn \l__cmd_args_tl {{#1}}\l__cmd_signature_t
l \__cmd_run_code: 
#1<-\class@documenthook 

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__cmd_args_tl 
#2<-{\class@documenthook }

\l__cmd_args_tl ->{begindocument}{-NoValue-}

\l__cmd_signature_tl ->

\__cmd_run_code: ->\tl_if_empty:NF \l__cmd_defaults_tl {\__cmd_defaults: }\tl_i
f_empty:NF \l__cmd_process_all_tl {\__cmd_args_process: }\bool_if:NT \l__cmd_en
vironment_bool {\exp_args:No \__cmd_set_environment_end:n \l__cmd_environment_s
tr }\group_align_safe_end: \conditionally@traceon \exp_after:wN \l__cmd_fn_code
_tl \l__cmd_args_tl 

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__cmd_defaults_tl 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__cmd_defaults: 

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__cmd_process_all_tl 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__cmd_args_process: 

\bool_if:NT #1->\if_bool:N #1\__prg_T_true:w \fi: \use_none:n 
#1<-\l__cmd_environment_bool 

\use_none:n #1->
#1<-\exp_args:No \__cmd_set_environment_end:n \l__cmd_environment_str 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\conditionally@traceon ->

\l__cmd_args_tl ->{begindocument}{-NoValue-}{\class@documenthook }

\l__cmd_fn_code_tl ->\AddToHook code 

\AddToHook code #1#2#3->\hook_gput_code:nnn {#1}{#2}{#3}
#1<-begindocument
#2<--NoValue-
#3<-\class@documenthook 

\hook_gput_code:nnn #1#2->\__hook_normalize_hook_args:Nnn \__hook_gput_code:nnn
 {#1}{#2}
#1<-begindocument
#2<--NoValue-

\__hook_normalize_hook_args:Nnn #1#2#3->\__hook_normalize_hook_args_aux:Nn #1{{
\__hook_parse_label_default:n {#2}}{\__hook_parse_label_default:n {#3}}}
#1<-\__hook_gput_code:nnn 
#2<-begindocument
#3<--NoValue-

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_gput_code:nnn 
#2<-{\__hook_parse_label_default:n {begindocument}}{\__hook_parse_label_default
:n {-NoValue-}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_gput_code:nnn {\__hook_parse_label_default:n
 {begindocument}}{\__hook_parse_label_default:n {-NoValue-}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-begindocument

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-begindocument

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}begindocument{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}begindocument{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {begindocument}\__hook_parse_dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-begindocument
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: begindocument

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: begindocument\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: begindocument\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: begindocument\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: begindocument
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: begindocument

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-begindocument

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-begindocument

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {begindocument}{.}{\__hook_currname_or_default: }{\__hook_p
arse_dot_label:w begindocument./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-begindocument
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w begindocument./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-begindocument
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-begindocument

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {begindocument}}{\__hook_parse_dot_
label_cleanup:w begindocument./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {begindocument}
#2<-\__hook_parse_dot_label_cleanup:w begindocument./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-begindocument

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<--NoValue-

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<--NoValue-

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}-NoValue-{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-
#2<-
#3<-!-NoValue-?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {-NoValue-}\__hook_parse_dot_label:n 

\__hook_currname_or_default: ->\tl_if_empty:NTF \g__hook_hook_curr_name_tl {\tl
_if_empty:NTF \@currname {\msg_expandable_error:nnn {latex2e}{should-not-happen
}{Empty default label.}\__hook_make_name:n {label-missing}}{\@currname }}{\g__h
ook_hook_curr_name_tl }

\tl_if_empty:NTF #1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \fi: \use_ii:
nn 
#1<-\g__hook_hook_curr_name_tl 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:NTF \@currname {\msg_expandable_error:nnn {latex2e}{should-not
-happen}{Empty default label.}\__hook_make_name:n {label-missing}}{\@currname }
#2<-\g__hook_hook_curr_name_tl 

\g__hook_hook_curr_name_tl ->top-level

\__hook_gput_code:nnn #1#2#3->\__hook_if_execute_immediately:nTF {#1}{#3}{\__ho
ok_if_usable:nTF {#1}{\__hook_hook_gput_code_do:nnn {#1}{#2}{#3}\__hook_update_
hook_code:n {#1}}{\__hook_if_disabled:nTF {#1}{\msg_error:nnn {hooks}{hook-disa
bled}{#1}}{\__hook_try_declaring_generic_hook:nnn {#1}{#2}{#3}}}}
#1<-begindocument
#2<-top-level
#3<-\class@documenthook 

\__hook_if_execute_immediately:nTF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN
 \__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_m
ark \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_retur
n_false: }\exp_end: 
#1<-begindocument

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-begindocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_begindocument_re
versed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg_ret
urn_false: \fi: 
#2<-\prg_return_false: 

\g__hook_begindocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\class@documenthook 
#2<-\__hook_if_usable:nTF {begindocument}{\__hook_hook_gput_code_do:nnn {begind
ocument}{top-level}{\class@documenthook }\__hook_update_hook_code:n {begindocum
ent}}{\__hook_if_disabled:nTF {begindocument}{\msg_error:nnn {hooks}{hook-disab
led}{begindocument}}{\__hook_try_declaring_generic_hook:nnn {begindocument}{top
-level}{\class@documenthook }}}

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-begindocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_hook_gput_code_do:nnn {begindocument}{top-level}{\class@documenthoo
k }\__hook_update_hook_code:n {begindocument}
#2<-\__hook_if_disabled:nTF {begindocument}{\msg_error:nnn {hooks}{hook-disable
d}{begindocument}}{\__hook_try_declaring_generic_hook:nnn {begindocument}{top-l
evel}{\class@documenthook }}

\__hook_hook_gput_code_do:nnn #1#2#3->\__hook_debug:n {\iow_term:x {**** Add to
 \__hook_if_usable:nF {#1}{undeclared }hook #1 (#2)\on@line \space <- \tl_to_st
r:n {#3}}}\str_if_eq:nnTF {#2}{top-level}{\str_if_eq:eeTF {top-level}{\__hook_c
urrname_or_default: }{\__hook_init_structure:n {#1}\__hook_tl_gput_right:cn {__
hook_toplevel #1}{#3}}{\msg_error:nnn {hooks}{misused-top-level}{#1}}}{\prop_ge
t:cnNTF {g__hook_#1_code_prop}{#2}\l__hook_return_tl {\prop_gput:cno {g__hook_#
1_code_prop}{#2}{\l__hook_return_tl #3}}{\prop_gput:cnn {g__hook_#1_code_prop}{
#2}{#3}}}
#1<-begindocument
#2<-top-level
#3<-\class@documenthook 

\__hook_debug:n #1->
#1<-\iow_term:x {**** Add to \__hook_if_usable:nF {begindocument}{undeclared }h
ook begindocument (top-level)\on@line \space <- \tl_to_str:n {\class@documentho
ok }}

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-top-level
#2<-top-level

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\str_if_eq:eeTF {top-level}{\__hook_currname_or_default: }{\__hook_init_str
ucture:n {begindocument}\__hook_tl_gput_right:cn {__hook_toplevel begindocument
}{\class@documenthook }}{\msg_error:nnn {hooks}{misused-top-level}{begindocumen
t}}
#2<-\prop_get:cnNTF {g__hook_begindocument_code_prop}{top-level}\l__hook_return
_tl {\prop_gput:cno {g__hook_begindocument_code_prop}{top-level}{\l__hook_retur
n_tl \class@documenthook }}{\prop_gput:cnn {g__hook_begindocument_code_prop}{to
p-level}{\class@documenthook }}

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-top-level
#2<-\__hook_currname_or_default: 

\__hook_currname_or_default: ->\tl_if_empty:NTF \g__hook_hook_curr_name_tl {\tl
_if_empty:NTF \@currname {\msg_expandable_error:nnn {latex2e}{should-not-happen
}{Empty default label.}\__hook_make_name:n {label-missing}}{\@currname }}{\g__h
ook_hook_curr_name_tl }

\tl_if_empty:NTF #1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \fi: \use_ii:
nn 
#1<-\g__hook_hook_curr_name_tl 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:NTF \@currname {\msg_expandable_error:nnn {latex2e}{should-not
-happen}{Empty default label.}\__hook_make_name:n {label-missing}}{\@currname }
#2<-\g__hook_hook_curr_name_tl 

\g__hook_hook_curr_name_tl ->top-level

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_init_structure:n {begindocument}\__hook_tl_gput_right:cn {__hook_to
plevel begindocument}{\class@documenthook }
#2<-\msg_error:nnn {hooks}{misused-top-level}{begindocument}

\__hook_init_structure:n #1->\__hook_if_structure_exist:nF {#1}{\prop_new:c {g_
_hook_#1_code_prop}\tl_new:c {__hook_toplevel #1}\tl_new:c {__hook_next #1}}
#1<-begindocument

\__hook_if_structure_exist:nF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\pr
g_return_true: }{\prg_return_false: }\exp_end: {}
#1<-begindocument

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_begindocument_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_begindocument_code_prop\cs_end: \
scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\prop_new:c {g__hook_begindocument_code_prop}\tl_new:c {__hook_toplevel beg
indocument}\tl_new:c {__hook_next begindocument}

\__hook_tl_gput_right:cn ->\exp_args:Nc \__hook_tl_gput_right:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gput_right:Nn 
#2<-__hook_toplevel begindocument

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook_toplevel begindocument 
#2<-\class@documenthook 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook_toplevel begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook_toplevel begindocument \class@do
cumenthook }

\__hook_toplevel begindocument ->

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-begindocument

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'begindocument'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-begindocument

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@begindocumenthook

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w @begindocumenthook\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_if_empty:cF {@begindocumenthook}{\exp_args:Nnnv \__hook_hook_gput_code_
do:nnn {begindocument}{legacy}{@begindocumenthook}\__hook_tl_gclear:c {@begindo
cumenthook}}

\tl_if_empty:cF ->\exp_args:Nc \tl_if_empty:NF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty:NF 
#2<-@begindocumenthook

\tl_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@begindocumenthook 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {begindocument}{legacy}{@begin
documenthook}\__hook_tl_gclear:c {@begindocumenthook}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-begindocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_begindocument_code_prop}{\__hook_tl_gset:co {__
hook begindocument}{\cs:w __hook_toplevel begindocument\exp_after:wN \cs_end: \
cs:w __hook_next begindocument\cs_end: }}{\__hook_if_reversed:nTF {begindocumen
t}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__ho
ok_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook
_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\pr
op_set_eq:Nc \l__hook_work_prop {g__hook_begindocument_code_prop}\__hook_initia
lize_single:ccn {__hook begindocument}{g__hook_begindocument_labels_clist}{begi
ndocument}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {beg
indocument}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_begindocument_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_begindocument_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_begindocument_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook begindocument}{\cs:w __hook_toplevel begindocume
nt\exp_after:wN \cs_end: \cs:w __hook_next begindocument\cs_end: }
#2<-\__hook_if_reversed:nTF {begindocument}{\cs_set_eq:NN \__hook_tl_gput:Nn \_
_hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_left:NV }
{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hoo
k_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work_prop {g__ho
ok_begindocument_code_prop}\__hook_initialize_single:ccn {__hook begindocument}
{g__hook_begindocument_labels_clist}{begindocument}\__hook_debug:n {\exp_args:N
Nx \prop_gput:Nnn \g__hook_used_prop {begindocument}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-begindocument

\g__hook_begindocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_begindocument_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_begindocument_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook begindocument
#3<-g__hook_begindocument_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook begindocument 
#2<-\g__hook_begindocument_labels_clist 
#3<-begindocument

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-begindocument

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_0:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-revtex4-2

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {revtex4-2}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {revtex4-2}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {revtex4-2}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-revtex4-2

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_revtex4-2_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_revtex4-2_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_revtex4-2_seq 
#2<-\seq_new:N \l__hook_label_revtex4-2_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_revtex4-2_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_revtex4-2_seq 
#2<-\c_empty_seq 

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-natbib

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {natbib}

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {natbib}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_natbib_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {natbib}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-natbib

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_natbib_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_natbib_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\seq_clear:N \l__hook_label_natbib_seq 
#2<-\seq_new:N \l__hook_label_natbib_seq 

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_natbib_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_label_natbib_seq 
#2<-\c_empty_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{begindocument}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_0:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{begindocument}}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {revtex4-2}{##1}{\prop_map_break: }{\__hook_app
ly_label_pair:nnn {revtex4-2}{##1}}{\__hook_apply_label_pair:nnn {##1}{revtex4-
2}}{begindocument}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {revtex4-2}{#1}{\pro
p_map_break: }{\__hook_apply_label_pair:nnn {revtex4-2}{#1}}{\__hook_apply_labe
l_pair:nnn {#1}{revtex4-2}}{begindocument}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-revtex4-2
#2<-revtex4-2

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{revtex4-2}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-{begindocument}\__prop_pair:wn natbib\s__prop {\global \let \bibstyle =\@go
bble \let \NAT@@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt
 \@biblabel \fi \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@e
mpty \else \SK@def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##
2]{##3}}\fi \ifx \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \ci
teauthor \SK@citeauthor \let \citefullauthor \SK@citefullauthor \let \citeyear 
\SK@citeyear \fi \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt 
}{}\providecommand {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@cite
x \@citex }{}}
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{begindocument}}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {natbib}{##1}{\prop_map_break: }{\__hook_apply_
label_pair:nnn {natbib}{##1}}{\__hook_apply_label_pair:nnn {##1}{natbib}}{begin
document}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{begindocument}
#1<-revtex4-2
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-revtex4-2

\use_iii:nnn #1#2#3->#3
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{revtex4-2}
#3<-\__hook_apply_label_pair:nnn {revtex4-2}{natbib}

\__hook_apply_label_pair:nnn #1#2#3->\__hook_label_if_exist_apply:nnnF {#1}{#2}
{#3}{\__hook_label_if_exist_apply:nnnF {#1}{#2}{??}{}}
#1<-revtex4-2
#2<-natbib
#3<-begindocument

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-begindocument

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-\__hook_label_if_exist_apply:nnnF {revtex4-2}{natbib}{??}{}

\__hook_label_if_exist_apply:nnnF #1#2#3->\if_cs_exist:w g__hook_#3_rule_#1|#2_
tl\cs_end: \__hook_apply_rule:nnn {#1}{#2}{#3}\exp_after:wN \use_none:n \else: 
\use:nn \fi: 
#1<-revtex4-2
#2<-natbib
#3<-??

\use:nn #1#2->#1#2
#1<-\fi: 
#2<-

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {natbib}{#1}{\prop_m
ap_break: }{\__hook_apply_label_pair:nnn {natbib}{#1}}{\__hook_apply_label_pair
:nnn {#1}{natbib}}{begindocument}
#1<-natbib
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-natbib
#2<-natbib

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {natbib}{natbib}
#3<-\__hook_apply_label_pair:nnn {natbib}{natbib}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-begindocument
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {revtex4-2}\__seq_item:n {natbib}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-revtex4-2

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {revtex4-2}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-revtex4-2

\l__hook_label_revtex4-2_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{revtex4-2}\tl_set:Nn \
l__hook_rear_tl {revtex4-2}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-revtex4-2

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-natbib

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {natbib}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-natbib

\l__hook_label_natbib_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{natbib}\tl_set:Nn \l__
hook_rear_tl {natbib}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->revtex4-2

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_revtex4-2_tl 
#2<-natbib

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-natbib

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_begindocument_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-revtex4-2
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-revtex4-2

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {revtex4-2}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-revtex4-2
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_split_aux:w #1\__prop_pair:wn revtex4-2\s__prop #2#3\s__prop_mark #4#5\
s__prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_retur
n_tl {\q_no_value }}
#1<-\s__prop 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 
#3<-\__prop_pair:wn natbib\s__prop {\global \let \bibstyle =\@gobble \let \NAT@
@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi
 \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@
def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \if
x \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@ci
teauthor \let \citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \f
i \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecomm
and {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}}
#4<-\use_i:nn 
#5<-\__prop_pair:wn revtex4-2\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\open@column@one \@ne \set@colht \@floatplac
ement \@dblfloatplacement }
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\open@column@one \@ne \set@colht \@floatplacement \@dblflo
atplacement 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\open@column@one \@ne \set@colht \@floatplacement \@dblfloatplacement 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \open@column@one \
@ne \set@colht \@floatplacement \@dblfloatplacement }

\__hook begindocument ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_begindocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->revtex4-2

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_begindocument_labels_clist 
#4<-revtex4-2

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-revtex4-2

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-revtex4-2

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: revtex4-2?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-r

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: revtex4-2}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: revtex4-2

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-revtex4-2
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: revtex4-2

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: revtex4-2\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: revtex4-2
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: revtex4-2

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-revtex4-2

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-revtex4-2

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-revtex4-2

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-revtex4-2

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?revtex4-2 \s__clist_mark ? revtex4-2\s__
clist_mark , \s__clist_mark revtex4-2,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?revtex4-2 
#2<-revtex4-2\s__clist_mark ,
#3<-revtex4-2

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {revtex4-2{}}{\tl_if_empty:nTF {revtex4-2}{\prg_re
turn_true: }{\tl_if_empty:oTF {\use_none:n revtex4-2}{\prg_return_true: }{\prg_
return_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-revtex4-2{}

\use_none:n #1->
#1<-{revtex4-2{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {revtex4-2}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n revtex4-2}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{revtex4-2}}
#2<-\exp_not:n {revtex4-2}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_begindocument_labels_clist 
#3<-\g__hook_begindocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_begindocument_labels_clist 

\g__hook_begindocument_labels_clist ->

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_begindocument_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->revtex4-2

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_revtex4-2_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_revtex4-2_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->revtex4-2

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_revtex4-2_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-natbib
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-natbib

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {natbib}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-natbib
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@o
ne \@ne \set@colht \@floatplacement \@dblfloatplacement }\__prop_pair:wn natbib
\s__prop {\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \
ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@d
ef \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{
\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefin
ed \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullaut
hor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {i
ndex}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@i
fpackageloaded {babel}{\let \org@@citex \@citex }{}}

\__prop_split_aux:w #1\__prop_pair:wn natbib\s__prop #2#3\s__prop_mark #4#5\s__
prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return_t
l {\q_no_value }}
#1<-\s__prop \__prop_pair:wn revtex4-2\s__prop {\open@column@one \@ne \set@colh
t \@floatplacement \@dblfloatplacement }
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn natbib\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\global \let \bibstyle =\@gobble \let \NAT@@
setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi 
\NAT@set@cites \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@d
ef \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx
 \SK@citeauthor \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@cit
eauthor \let \citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi
 \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecomma
nd {\harvardand }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@
set@cites \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites
 \ifx \SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##
1][##2]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeautho
r \@undefined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \
citefullauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpacka
geloaded {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardan
d }{and}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \b
ibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@u
ndefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \
SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \de
f \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefullauthor \S
K@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{
\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{and}\@ifpacka
geloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \global \let \bibs
tyle =\@gobble \let \NAT@@setcites \NAT@set@cites \ifx \bibnumfmt \@empty \let 
\bibnumfmt \@biblabel \fi \NAT@set@cites \ifx \SK@def \@undefined \else \ifx \S
K@cite \@empty \else \SK@def \@citex [##1][##2]##3{\SK@ \SK@@ref {##3}\SK@@cite
x [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@undefined \def \HAR@checkdef {}\els
e \let \citeauthor \SK@citeauthor \let \citefullauthor \SK@citefullauthor \let 
\citeyear \SK@citeyear \fi \fi \@ifpackageloaded {index}{\let \NAT@index =\NAT@
index@alt }{}\providecommand {\harvardand }{and}\@ifpackageloaded {babel}{\let 
\org@@citex \@citex }{}}

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement 

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_right:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_right:Nn 
#2<-\g__hook_begindocument_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->natbib

\clist_gput_right:Nn ->\__clist_put_right:NNNn \clist_gconcat:NNN \clist_set:Nn
 

\__clist_put_right:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3#3\l__clis
t_internal_clist 
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_begindocument_labels_clist 
#4<-natbib

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-natbib

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-natbib

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: natbib?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-n

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: natbib}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: natbib

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-natbib
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: natbib

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: natbib\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: natbib\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: natbib\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: natbib
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: natbib

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-natbib

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-natbib

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-natbib

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-natbib

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?natbib \s__clist_mark ? natbib\s__clist_
mark , \s__clist_mark natbib,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?natbib 
#2<-natbib\s__clist_mark ,
#3<-natbib

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {natbib{}}{\tl_if_empty:nTF {natbib}{\prg_return_t
rue: }{\tl_if_empty:oTF {\use_none:n natbib}{\prg_return_true: }{\prg_return_fa
lse: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-natbib{}

\use_none:n #1->
#1<-{natbib{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {natbib}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:n
 natbib}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{natbib}}
#2<-\exp_not:n {natbib}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_begindocument_labels_clist 
#3<-\g__hook_begindocument_labels_clist 
#4<-\l__clist_internal_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_begindocument_labels_clist 

\g__hook_begindocument_labels_clist ->revtex4-2

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_begindocument_labels_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \l__clist_internal_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->natbib

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_natbib_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_natbib_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->natbib

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_natbib_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocume
nt \l__hook_return_tl \__hook_clist_gput:NV \g__hook_begindocument_labels_clist
 \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handled code for \l__hook_fron
t_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:c
x {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_e
nd: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:
cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {#
#1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}
\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook
_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_
tl \exp_args:NNV \__hook_tl_gput:Nn \__hook begindocument \l__hook_return_tl \_
_hook_clist_gput:NV \g__hook_begindocument_labels_clist \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook begindocument 
#3<-\cs:w __hook_toplevel begindocument\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:w
N {#1#2}}
#1<-\__hook begindocument 
#2<-\__hook_toplevel begindocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \__hook_toplevel b
egindocument }

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement \global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@ci
tes \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx 
\SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2
]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@un
defined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefu
llauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageload
ed {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{an
d}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook begindocument 
#3<-\cs:w __hook_next begindocument\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook begindocument 
#2<-\__hook_next begindocument 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook begindocument 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook begindocument \__hook_next begin
document }

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement \global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@ci
tes \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx 
\SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2
]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@un
defined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefu
llauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageload
ed {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{an
d}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}\__hook_toplevel begind
ocument 

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {begindocument}{}

\init@hyperref ->\providecommand \phantomsection {}\providecommand \hyper@makec
urrent [1]{}\providecommand \Hy@raisedlink [1]{}\providecommand \hyper@anchorst
art [1]{}\providecommand \hyper@anchorend {}\providecommand \hyper@linkstart [2
]{}\providecommand \hyper@linkend {}\providecommand \@currentHref {}

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\phantomsection 

\@gtempa ->{phantomsection}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-phantomsection

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-phantomsection
#2<-\def \reserved@a {\new@command \phantomsection }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \phantomsection 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\phantomsection 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \phantomsection 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \phantomsection 
#3<-\@newcommand \phantomsection [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \phantomsection [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\phantomsection 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \phantomsection [0]
#3<-\@argdef \phantomsection [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \phantomsection [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\phantomsection 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\phantomsection 
#2<-\@yargdef \phantomsection \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->phantomsection

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \phantomsection \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->phantomsection

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-p
#2<-h
#3<-a
#4<-ntomsectionxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\phantomsection 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\phantomsection 

\reserved@a #10#2{->\expandafter \def \expandafter \phantomsection \reserved@b 
#10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\hyper@makecurrent 

\@gtempa ->{hyper@makecurrent}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-hyper@makecurrent

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-hyper@makecurrent
#2<-\def \reserved@a {\new@command \hyper@makecurrent }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \hyper@makecurrent 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\hyper@makecurrent 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \hyper@makecurrent 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \hyper@makecurrent 
#3<-\@newcommand \hyper@makecurrent [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \hyper@makecurrent 

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\hyper@makecurrent 
#2<-1

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \hyper@makecurrent [1]
#3<-\@argdef \hyper@makecurrent [1]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \hyper@makecurrent [1]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\hyper@makecurrent 
#2<-1
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\hyper@makecurrent 
#2<-\@yargdef \hyper@makecurrent \@ne {1}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->hyper@makecurrent

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \hyper@makecurrent \@ne {1}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->hyper@makecurrent

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-y
#3<-p
#4<-er@makecurrentxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\hyper@makecurrent 
#2<-\@ne 
#3<-1

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-1
#2<-\hyper@makecurrent 

\reserved@a #11#2{->\expandafter \def \expandafter \hyper@makecurrent \reserved
@b #11{
#1<-0##
#2<-##2##3##4##5##6##7##8##9##1

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\Hy@raisedlink 

\@gtempa ->{Hy@raisedlink}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-Hy@raisedlink

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-Hy@raisedlink
#2<-\def \reserved@a {\new@command \Hy@raisedlink }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \Hy@raisedlink 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\Hy@raisedlink 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \Hy@raisedlink 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \Hy@raisedlink 
#3<-\@newcommand \Hy@raisedlink [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \Hy@raisedlink 

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\Hy@raisedlink 
#2<-1

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \Hy@raisedlink [1]
#3<-\@argdef \Hy@raisedlink [1]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \Hy@raisedlink [1]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\Hy@raisedlink 
#2<-1
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\Hy@raisedlink 
#2<-\@yargdef \Hy@raisedlink \@ne {1}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->Hy@raisedlink

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \Hy@raisedlink \@ne {1}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->Hy@raisedlink

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-H
#2<-y
#3<-@
#4<-raisedlinkxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\Hy@raisedlink 
#2<-\@ne 
#3<-1

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-1
#2<-\Hy@raisedlink 

\reserved@a #11#2{->\expandafter \def \expandafter \Hy@raisedlink \reserved@b #
11{
#1<-0##
#2<-##2##3##4##5##6##7##8##9##1

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\hyper@anchorstart 

\@gtempa ->{hyper@anchorstart}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-hyper@anchorstart

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-hyper@anchorstart
#2<-\def \reserved@a {\new@command \hyper@anchorstart }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \hyper@anchorstart 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\hyper@anchorstart 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \hyper@anchorstart 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \hyper@anchorstart 
#3<-\@newcommand \hyper@anchorstart [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \hyper@anchorstart 

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\hyper@anchorstart 
#2<-1

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \hyper@anchorstart [1]
#3<-\@argdef \hyper@anchorstart [1]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \hyper@anchorstart [1]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\hyper@anchorstart 
#2<-1
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\hyper@anchorstart 
#2<-\@yargdef \hyper@anchorstart \@ne {1}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->hyper@anchorstart

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \hyper@anchorstart \@ne {1}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->hyper@anchorstart

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-y
#3<-p
#4<-er@anchorstartxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\hyper@anchorstart 
#2<-\@ne 
#3<-1

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-1
#2<-\hyper@anchorstart 

\reserved@a #11#2{->\expandafter \def \expandafter \hyper@anchorstart \reserved
@b #11{
#1<-0##
#2<-##2##3##4##5##6##7##8##9##1

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\hyper@anchorend 

\@gtempa ->{hyper@anchorend}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-hyper@anchorend

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-hyper@anchorend
#2<-\def \reserved@a {\new@command \hyper@anchorend }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \hyper@anchorend 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\hyper@anchorend 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \hyper@anchorend 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \hyper@anchorend 
#3<-\@newcommand \hyper@anchorend [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \hyper@anchorend [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\hyper@anchorend 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \hyper@anchorend [0]
#3<-\@argdef \hyper@anchorend [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \hyper@anchorend [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\hyper@anchorend 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\hyper@anchorend 
#2<-\@yargdef \hyper@anchorend \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->hyper@anchorend

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \hyper@anchorend \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->hyper@anchorend

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-y
#3<-p
#4<-er@anchorendxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\hyper@anchorend 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\hyper@anchorend 

\reserved@a #10#2{->\expandafter \def \expandafter \hyper@anchorend \reserved@b
 #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\hyper@linkstart 

\@gtempa ->{hyper@linkstart}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-hyper@linkstart

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-hyper@linkstart
#2<-\def \reserved@a {\new@command \hyper@linkstart }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \hyper@linkstart 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\hyper@linkstart 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \hyper@linkstart 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \hyper@linkstart 
#3<-\@newcommand \hyper@linkstart [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \hyper@linkstart 

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\hyper@linkstart 
#2<-2

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \hyper@linkstart [2]
#3<-\@argdef \hyper@linkstart [2]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \hyper@linkstart [2]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\hyper@linkstart 
#2<-2
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\hyper@linkstart 
#2<-\@yargdef \hyper@linkstart \@ne {2}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->hyper@linkstart

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \hyper@linkstart \@ne {2}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->hyper@linkstart

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-y
#3<-p
#4<-er@linkstartxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\hyper@linkstart 
#2<-\@ne 
#3<-2

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-2
#2<-\hyper@linkstart 

\reserved@a #12#2{->\expandafter \def \expandafter \hyper@linkstart \reserved@b
 #12{
#1<-0##1##
#2<-##3##4##5##6##7##8##9##2

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\hyper@linkend 

\@gtempa ->{hyper@linkend}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-hyper@linkend

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-hyper@linkend
#2<-\def \reserved@a {\new@command \hyper@linkend }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \hyper@linkend 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\hyper@linkend 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \hyper@linkend 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \hyper@linkend 
#3<-\@newcommand \hyper@linkend [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \hyper@linkend [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\hyper@linkend 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \hyper@linkend [0]
#3<-\@argdef \hyper@linkend [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \hyper@linkend [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\hyper@linkend 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\hyper@linkend 
#2<-\@yargdef \hyper@linkend \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->hyper@linkend

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \hyper@linkend \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->hyper@linkend

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-y
#3<-p
#4<-er@linkendxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\hyper@linkend 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\hyper@linkend 

\reserved@a #10#2{->\expandafter \def \expandafter \hyper@linkend \reserved@b #
10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\@currentHref 

\@gtempa ->{@currentHref}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-@currentHref

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-@currentHref
#2<-\def \reserved@a {\new@command \@currentHref }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \@currentHref 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\@currentHref 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \@currentHref 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \@currentHref 
#3<-\@newcommand \@currentHref [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \@currentHref [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\@currentHref 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \@currentHref [0]
#3<-\@argdef \@currentHref [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \@currentHref [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\@currentHref 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\@currentHref 
#2<-\@yargdef \@currentHref \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->@currentHref

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \@currentHref \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->@currentHref

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-@
#2<-c
#3<-u
#4<-rrentHrefxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\@currentHref 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\@currentHref 

\reserved@a #10#2{->\expandafter \def \expandafter \@currentHref \reserved@b #1
0{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-array

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\switch@array 
#2<-\switch@tabular 

\switch@tabular ->\let \@array@sw \@array@sw@array \@ifx {\@array \@array@LaTeX
 }{\@ifx {\multicolumn \multicolumn@LaTeX }{\@ifx {\@tabular \@tabular@LaTeX }{
\@ifx {\@tabarray \@tabarray@LaTeX }{\@ifx {\array \array@LaTeX }{\@ifx {\endar
ray \endarray@LaTeX }{\@ifx {\endtabular \endtabular@LaTeX }{\@ifx {\@mkpream \
@mkpream@LaTeX }{\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arrayacol \@arrayaco
l@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arrayclassz
@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@array
classiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv
@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@
ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX
 }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw
 }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw 
}}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}
{\false@sw }{\class@info {Patching LaTeX tabular.}}{\class@info {Unrecognized L
aTeX tabular. Please update this document class! (Proceeding with fingers cross
ed.)}}\let \@array \@array@ltx \let \multicolumn \multicolumn@ltx \let \@tabula
r \@tabular@ltx \let \@tabarray \@tabarray@ltx \let \array \array@ltx \let \end
array \endarray@ltx \let \endtabular \endtabular@ltx \let \@mkpream \@mkpream@l
tx \let \@addamp \@addamp@ltx \let \@arrayacol \@arrayacol@ltx \let \@tabacol \
@tabacol@ltx \let \@arrayclassz \@arrayclassz@ltx \let \@tabclassiv \@tabclassi
v@ltx \let \@arrayclassiv \@arrayclassiv@ltx \let \@tabclassz \@tabclassz@ltx \
let \@classv \@classv@ltx \let \hline \hline@ltx \let \@tabularcr \@tabularcr@l
tx \let \@xtabularcr \@xtabularcr@ltx \let \@xargarraycr \@xargarraycr@ltx \let
 \@yargarraycr \@yargarraycr@ltx 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@array \@array@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\multicolumn \multicolumn@LaTeX }{\@ifx {\@tabular \@tabular@LaTeX }
{\@ifx {\@tabarray \@tabarray@LaTeX }{\@ifx {\array \array@LaTeX }{\@ifx {\enda
rray \endarray@LaTeX }{\@ifx {\endtabular \endtabular@LaTeX }{\@ifx {\@mkpream 
\@mkpream@LaTeX }{\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arrayacol \@arrayac
ol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arrayclass
z@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arra
yclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@class
v@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\
@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTe
X }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@s
w }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw
 }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw 
}}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw \ETC.
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\multicolumn \multicolumn@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@tabular \@tabular@LaTeX }{\@ifx {\@tabarray \@tabarray@LaTeX }{\@i
fx {\array \array@LaTeX }{\@ifx {\endarray \endarray@LaTeX }{\@ifx {\endtabular
 \endtabular@LaTeX }{\@ifx {\@mkpream \@mkpream@LaTeX }{\@ifx {\@addamp \@addam
p@LaTeX }{\@ifx {\@arrayacol \@arrayacol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaT
eX }{\@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@tabclassi
v@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tab
classz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@
ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\
@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@La
TeX }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw 
}}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}
{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@tabular \@tabular@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@tabarray \@tabarray@LaTeX }{\@ifx {\array \array@LaTeX }{\@ifx {\e
ndarray \endarray@LaTeX }{\@ifx {\endtabular \endtabular@LaTeX }{\@ifx {\@mkpre
am \@mkpream@LaTeX }{\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arrayacol \@arra
yacol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arraycl
assz@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@a
rrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@cl
assv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX 
}{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@L
aTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\fals
e@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false
@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@
sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@tabarray \@tabarray@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\array \array@LaTeX }{\@ifx {\endarray \endarray@LaTeX }{\@ifx {\end
tabular \endtabular@LaTeX }{\@ifx {\@mkpream \@mkpream@LaTeX }{\@ifx {\@addamp 
\@addamp@LaTeX }{\@ifx {\@arrayacol \@arrayacol@LaTeX }{\@ifx {\@tabacol \@taba
col@LaTeX }{\@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@ta
bclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclass
z \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaT
eX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@La
TeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarr
aycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fa
lse@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fal
se@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fals
e@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\array \array@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\endarray \endarray@LaTeX }{\@ifx {\endtabular \endtabular@LaTeX }{\
@ifx {\@mkpream \@mkpream@LaTeX }{\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arr
ayacol \@arrayacol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arraycla
ssz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arr
ayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {
\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tab
ularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@
xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\fals
e@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false
@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@
sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\endarray \endarray@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\endtabular \endtabular@LaTeX }{\@ifx {\@mkpream \@mkpream@LaTeX }{\
@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arrayacol \@arrayacol@LaTeX }{\@ifx {\
@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@ifx {\@
tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@
ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\h
line \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr 
\@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargar
raycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\
false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\f
alse@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\endtabular \endtabular@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@mkpream \@mkpream@LaTeX }{\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {
\@arrayacol \@arrayacol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arr
ayclassz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {
\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@
ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr 
\@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarray
cr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{
\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\
false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\f
alse@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@mkpream \@mkpream@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@addamp \@addamp@LaTeX }{\@ifx {\@arrayacol \@arrayacol@LaTeX }{\@i
fx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@if
x {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX
 }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@if
x {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabul
arcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@y
argarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw
 }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw 
}}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@addamp \@addamp@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@arrayacol \@arrayacol@LaTeX }{\@ifx {\@tabacol \@tabacol@LaTeX }{\
@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv@LaTe
X }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz
@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\
@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {
\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{
\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fa
lse@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fal
se@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@arrayacol \@arrayacol@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@tabacol \@tabacol@LaTeX }{\@ifx {\@arrayclassz \@arrayclassz@LaTeX
 }{\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassi
v@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX
 }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\
@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@i
fx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\f
alse@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fa
lse@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@tabacol \@tabacol@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@arrayclassz \@arrayclassz@LaTeX }{\@ifx {\@tabclassiv \@tabclassiv
@LaTeX }{\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabc
lassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@i
fx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@
ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaT
eX }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@arrayclassz \@arrayclassz@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@tabclassiv \@tabclassiv@LaTeX }{\@ifx {\@arrayclassiv \@arrayclass
iv@LaTeX }{\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTe
X }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {
\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@
ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\
false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\f
alse@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@tabclassiv \@tabclassiv@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@arrayclassiv \@arrayclassiv@LaTeX }{\@ifx {\@tabclassz \@tabclassz
@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\
@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {
\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{
\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\fa
lse@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@arrayclassiv \@arrayclassiv@LaTeX 

\true@sw #1#2->#1
#1<-\@ifx {\@tabclassz \@tabclassz@LaTeX }{\@ifx {\@classv \@classv@LaTeX }{\@i
fx {\hline \hline@LaTeX }{\@ifx {\@tabularcr \@tabularcr@LaTeX }{\@ifx {\@xtabu
larcr \@xtabularcr@LaTeX }{\@ifx {\@xargarraycr \@xargarraycr@LaTeX }{\@ifx {\@
yargarraycr \@yargarraycr@LaTeX }{\true@sw }{\false@sw }}{\false@sw }}{\false@s
w }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }
#2<-\false@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@tabclassz \@tabclassz@LaTeX 

\false@sw #1#2->#2
#1<-\@ifx {\@classv \@classv@LaTeX }{\@ifx {\hline \hline@LaTeX }{\@ifx {\@tabu
larcr \@tabularcr@LaTeX }{\@ifx {\@xtabularcr \@xtabularcr@LaTeX }{\@ifx {\@xar
garraycr \@xargarraycr@LaTeX }{\@ifx {\@yargarraycr \@yargarraycr@LaTeX }{\true
@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@s
w }
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\class@info {Patching LaTeX tabular.}
#2<-\class@info {Unrecognized LaTeX tabular. Please update this document class!
 (Proceeding with fingers crossed.)}

\class@info #1->\ClassInfo {\class@name }{#1}
#1<-Unrecognized LaTeX tabular. Please update this document class! (Proceeding 
with fingers crossed.)

\ClassInfo #1#2->\GenericInfo {(#1) \space \space \@spaces \@spaces }{Class #1 
Info: #2}
#1<-\class@name 
#2<-Unrecognized LaTeX tabular. Please update this document class! (Proceeding 
with fingers crossed.)

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(\class@name ) \space \space \@spaces \@spaces 
#2<-Class \class@name  Info: Unrecognized LaTeX tabular. Please update this doc
ument class! (Proceeding with fingers crossed.)

\set@display@protect ->\let \protect \string 

\class@name ->revtex4-2

\on@line -> on input line \the \inputlineno 
Class revtex4-2 Info: Unrecognized LaTeX tabular. Please update this document c
lass! (Proceeding with fingers crossed.) on input line 6.

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\endtabular 
#2<-\endtabular@hook 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\endtabular 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \endtabular 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\endtabular }

\endtabular ->\endarray 

\@provide #1->\@ifx {\undefined #1}{\true@sw }{\@ifx {\relax #1}{\true@sw }{\fa
lse@sw }}{\def #1}{\def \j@nk }
#1<-\endtabular@hook 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \endtabular@hook 

\false@sw #1#2->#2
#1<-\true@sw 
#2<-\@ifx {\relax \endtabular@hook }{\true@sw }{\false@sw }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \endtabular@hook 

\false@sw #1#2->#2
#1<-\true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\def \endtabular@hook 
#2<-\def \j@nk 

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\endarray 
#2<-\endarray@hook 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\endarray 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \endarray 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\endarray }

\endarray ->\crcr \array@row@pst \egroup \egroup 

\@provide #1->\@ifx {\undefined #1}{\true@sw }{\@ifx {\relax #1}{\true@sw }{\fa
lse@sw }}{\def #1}{\def \j@nk }
#1<-\endarray@hook 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \endarray@hook 

\true@sw #1#2->#1
#1<-\true@sw 
#2<-\@ifx {\relax \endarray@hook }{\true@sw }{\false@sw }

\true@sw #1#2->#1
#1<-\def \endarray@hook 
#2<-\def \j@nk 

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\array@hook 

\@gtempa ->{array@hook}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-array@hook

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-array@hook
#2<-\def \reserved@a {\new@command \array@hook }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \array@hook 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\array@hook 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \array@hook 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \array@hook 
#3<-\@newcommand \array@hook [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \array@hook [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\array@hook 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \array@hook [0]
#3<-\@argdef \array@hook [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \array@hook [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\array@hook 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\array@hook 
#2<-\@yargdef \array@hook \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->array@hook

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \array@hook \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->array@hook

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-a
#2<-r
#3<-r
#4<-ay@hookxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\array@hook 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\array@hook 

\reserved@a #10#2{->\expandafter \def \expandafter \array@hook \reserved@b #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\@tabular 
#2<-\tabular@hook 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\@tabular 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \@tabular 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\@tabular }

\@tabular ->\let \@acoll \@tabacoll \let \@acolr \@tabacolr \let \@acol \@tabac
ol \let \@classz \@tabclassz \let \@classiv \@tabclassiv \let \\\@tabularcr \@t
abarray 

\@provide #1->\@ifx {\undefined #1}{\true@sw }{\@ifx {\relax #1}{\true@sw }{\fa
lse@sw }}{\def #1}{\def \j@nk }
#1<-\tabular@hook 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \tabular@hook 

\true@sw #1#2->#1
#1<-\true@sw 
#2<-\@ifx {\relax \tabular@hook }{\true@sw }{\false@sw }

\true@sw #1#2->#1
#1<-\def \tabular@hook 
#2<-\def \j@nk 

\switch@hyperref@href ->\expandafter \@ifx \expandafter {\csname href \endcsnam
e \href@Hy }{ \class@info {Repairing hyperref 6.75r \string \href }\let \hyper@
normalise \hyper@normalise@ltx \let \hyper@@normalise \hyper@@normalise@ltx \le
t \hyper@n@rmalise \hyper@n@rmalise@ltx \let \Hy@ActiveCarriageReturn \Hy@Activ
eCarriageReturn@ltx \let \Hy@RemovePercentCr \Hy@RemovePercentCr@ltx \let \href
 \href@Hy@ltx }{}

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\href  \href@Hy 

\false@sw #1#2->#2
#1<- \class@info {Repairing hyperref 6.75r \string \href }\let \hyper@normalise
 \hyper@normalise@ltx \let \hyper@@normalise \hyper@@normalise@ltx \let \hyper@
n@rmalise \hyper@n@rmalise@ltx \let \Hy@ActiveCarriageReturn \Hy@ActiveCarriage
Return@ltx \let \Hy@RemovePercentCr \Hy@RemovePercentCr@ltx \let \href \href@Hy
@ltx 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\newfloat 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \newfloat 

\true@sw #1#2->#1
#1<-
#2<-\@ifx {\float@end \float@end@float }{\@ifx {\newfloat \newfloat@float }{\tr
ue@sw }{\false@sw }}{\false@sw }{\class@warn {Repair the float package}\let \fl
oat@end \float@end@ltx \let \newfloat \newfloat@ltx }{\class@warn {Failed to pa
tch the float package}}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\rotatebox 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \rotatebox 

\true@sw #1#2->#1
#1<-\let \rotatebox \rotatebox@dummy 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\raggedcolumn@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \raggedcolumn@sw 

\false@sw #1#2->#2
#1<-\@booleanfalse \raggedcolumn@sw 
#2<-

\switch@longtable ->\@ifpackageloaded {longtable}{\@ifx {\longtable \longtable@
longtable }{\@ifx {\endlongtable \endlongtable@longtable }{\@ifx {\LT@start \LT
@start@longtable }{\@ifx {\LT@end@hd@ft \LT@end@hd@ft@longtable }{\@ifx {\LT@ar
ray \LT@array@longtable }{\true@sw }{\false@sw }}{\false@sw }}{\false@sw }}{\fa
lse@sw }}{\false@sw }{\class@info {Patching longtable package}}{\class@info {Pa
tching unrecognized longtable package. (Proceeding with fingers crossed)}}\let 
\longtable \longtable@new \let \endlongtable \endlongtable@new \let \LT@start \
LT@start@new \let \LT@end@hd@ft \LT@end@hd@ft@new \let \LT@array \LT@array@new 
\newenvironment {longtable*}{\onecolumngrid@push \longtable }{\endlongtable \on
ecolumngrid@pop }}{}

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-longtable

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\@ifx {\longtable \longtable@longtable }{\@ifx {\endlongtable \endlongtable
@longtable }{\@ifx {\LT@start \LT@start@longtable }{\@ifx {\LT@end@hd@ft \LT@en
d@hd@ft@longtable }{\@ifx {\LT@array \LT@array@longtable }{\true@sw }{\false@sw
 }}{\false@sw }}{\false@sw }}{\false@sw }}{\false@sw }{\class@info {Patching lo
ngtable package}}{\class@info {Patching unrecognized longtable package. (Procee
ding with fingers crossed)}}\let \longtable \longtable@new \let \endlongtable \
endlongtable@new \let \LT@start \LT@start@new \let \LT@end@hd@ft \LT@end@hd@ft@
new \let \LT@array \LT@array@new \newenvironment {longtable*}{\onecolumngrid@pu
sh \longtable }{\endlongtable \onecolumngrid@pop }
#2<-

\protectdef@boldmath ->\expandafter \@ifnotrelax \csname boldmath \endcsname {}
{\class@info {Robustifying \string \LaTeX 's \string \boldmath \space command}\
expandafter \let \csname boldmath \endcsname \boldmath \expandafter \def \expan
dafter \boldmath \expandafter {\expandafter \protect \csname boldmath \endcsnam
e }}

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\boldmath  
#2<-
#3<-\class@info {Robustifying \string \LaTeX 's \string \boldmath \space comman
d}\expandafter \let \csname boldmath \endcsname \boldmath \expandafter \def \ex
pandafter \boldmath \expandafter {\expandafter \protect \csname boldmath \endcs
name }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \boldmath  

\false@sw #1#2->#2
#1<-\class@info {Robustifying \string \LaTeX 's \string \boldmath \space comman
d}\expandafter \let \csname boldmath \endcsname \boldmath \expandafter \def \ex
pandafter \boldmath \expandafter {\expandafter \protect \csname boldmath \endcs
name }
#2<-

\twoside@sw #1#2->#2
#1<-\@twosidetrue 
#2<-\@twosidefalse 

\@twosidefalse ->\let \if@twoside \iffalse 

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-hyperref

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\hypertext@enable@ltx 
#2<-

\incompatible@package #1->\@ifpackageloaded {#1}{\def \@tempa {I cannot continu
e. You must remove the \string \usepackage \ statement that caused that package
 to be loaded.}\ClassError {\class@name }{The #1 package cannot be used with \c
lass@name }\@tempa \stop }{\class@info {#1 was not loaded (OK!)}}
#1<-cite

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-cite

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\def \@tempa {I cannot continue. You must remove the \string \usepackage \ 
statement that caused that package to be loaded.}\ClassError {\class@name }{The
 cite package cannot be used with \class@name }\@tempa \stop 
#2<-\class@info {cite was not loaded (OK!)}

\class@info #1->\ClassInfo {\class@name }{#1}
#1<-cite was not loaded (OK!)

\ClassInfo #1#2->\GenericInfo {(#1) \space \space \@spaces \@spaces }{Class #1 
Info: #2}
#1<-\class@name 
#2<-cite was not loaded (OK!)

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(\class@name ) \space \space \@spaces \@spaces 
#2<-Class \class@name  Info: cite was not loaded (OK!)

\set@display@protect ->\let \protect \string 

\class@name ->revtex4-2

\on@line -> on input line \the \inputlineno 
Class revtex4-2 Info: cite was not loaded (OK!) on input line 6.

\incompatible@package #1->\@ifpackageloaded {#1}{\def \@tempa {I cannot continu
e. You must remove the \string \usepackage \ statement that caused that package
 to be loaded.}\ClassError {\class@name }{The #1 package cannot be used with \c
lass@name }\@tempa \stop }{\class@info {#1 was not loaded (OK!)}}
#1<-mcite

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-mcite

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\def \@tempa {I cannot continue. You must remove the \string \usepackage \ 
statement that caused that package to be loaded.}\ClassError {\class@name }{The
 mcite package cannot be used with \class@name }\@tempa \stop 
#2<-\class@info {mcite was not loaded (OK!)}

\class@info #1->\ClassInfo {\class@name }{#1}
#1<-mcite was not loaded (OK!)

\ClassInfo #1#2->\GenericInfo {(#1) \space \space \@spaces \@spaces }{Class #1 
Info: #2}
#1<-\class@name 
#2<-mcite was not loaded (OK!)

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(\class@name ) \space \space \@spaces \@spaces 
#2<-Class \class@name  Info: mcite was not loaded (OK!)

\set@display@protect ->\let \protect \string 

\class@name ->revtex4-2

\on@line -> on input line \the \inputlineno 
Class revtex4-2 Info: mcite was not loaded (OK!) on input line 6.

\incompatible@package #1->\@ifpackageloaded {#1}{\def \@tempa {I cannot continu
e. You must remove the \string \usepackage \ statement that caused that package
 to be loaded.}\ClassError {\class@name }{The #1 package cannot be used with \c
lass@name }\@tempa \stop }{\class@info {#1 was not loaded (OK!)}}
#1<-multicol

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-multicol

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\def \@tempa {I cannot continue. You must remove the \string \usepackage \ 
statement that caused that package to be loaded.}\ClassError {\class@name }{The
 multicol package cannot be used with \class@name }\@tempa \stop 
#2<-\class@info {multicol was not loaded (OK!)}

\class@info #1->\ClassInfo {\class@name }{#1}
#1<-multicol was not loaded (OK!)

\ClassInfo #1#2->\GenericInfo {(#1) \space \space \@spaces \@spaces }{Class #1 
Info: #2}
#1<-\class@name 
#2<-multicol was not loaded (OK!)

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(\class@name ) \space \space \@spaces \@spaces 
#2<-Class \class@name  Info: multicol was not loaded (OK!)

\set@display@protect ->\let \protect \string 

\class@name ->revtex4-2

\on@line -> on input line \the \inputlineno 
Class revtex4-2 Info: multicol was not loaded (OK!) on input line 6.

\set@table@environments ->\floats@sw {}{\let@environment {longtable@float}{long
table}\let@environment {longtable}{longtable@write}\let@environment {longtable*
@float}{longtable*}\let@environment {longtable*}{longtable*@write}\let@environm
ent {turnpage@float}{turnpage}\let@environment {turnpage}{turnpage@write}}\do@i
f@floats {table}{.tbx}

\floats@sw #1#2->#1
#1<-
#2<-\let@environment {longtable@float}{longtable}\let@environment {longtable}{l
ongtable@write}\let@environment {longtable*@float}{longtable*}\let@environment 
{longtable*}{longtable*@write}\let@environment {turnpage@float}{turnpage}\let@e
nvironment {turnpage}{turnpage@write}

\do@if@floats #1#2->\floats@sw {}{\expandafter \newwrite \csname #1write\endcsn
ame \expandafter \def \csname #1@stream\endcsname {\jobname #2}\expandafter \im
mediate \expandafter \openout \csname #1write\endcsname \csname #1@stream\endcs
name \relax \@ifxundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dbl
float@LaTeX \@dblfloat \let \@float \write@float \let \@dblfloat \write@floats 
}{}\let@environment {#1@float}{#1}\let@environment {#1@floats}{#1*}\@ifxundefin
ed@cs {#1@write}{}{\let@environment {#1}{#1@write}}}
#1<-table
#2<-.tbx

\floats@sw #1#2->#1
#1<-
#2<-\expandafter \newwrite \csname tablewrite\endcsname \expandafter \def \csna
me table@stream\endcsname {\jobname .tbx}\expandafter \immediate \expandafter \
openout \csname tablewrite\endcsname \csname table@stream\endcsname \relax \@if
xundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dblfloat@LaTeX \@db
lfloat \let \@float \write@float \let \@dblfloat \write@floats }{}\let@environm
ent {table@float}{table}\let@environment {table@floats}{table*}\@ifxundefined@c
s {table@write}{}{\let@environment {table}{table@write}}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\c@float@type 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \c@float@type 

\true@sw #1#2->#1
#1<-
#2<-\global \setcounter {float@type}{8}

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-dcolumn

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\expandafter \@ifnotrelax \csname NC@find@d\endcsname {}{\newcolumntype {d}
{D{.}{.}{-1}}}
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\TextOrMath 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \TextOrMath 

\false@sw #1#2->#2
#1<-\DeclareRobustCommand \TextOrMath {\@ifmmode {\false@sw }{\true@sw }}
#2<-

\__hook_toplevel begindocument/before ->

\__hook_next begindocument/before ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-begindocument/before

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook begindocument/before

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument/before 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next begindocument/before

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next begindocument/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next begindocument/before 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel begindocument/before

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel begindocument/before 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel begindocument/before 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_begindocument/before_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_begindocument/before_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_begindocument/before_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_begindocument/before_code_prop 
#2<-\prop_new:N \g__hook_begindocument/before_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_begindocument/before_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_begindocument/before_code_prop 
#2<-\c_empty_prop 

\@kernel@after@begindocument@before ->\let \__hook env/document/begin \@empty \
reinstall@nfss@defs \init@series@setup 

\reinstall@nfss@defs ->\protected \def \upshape {\not@math@alphabet \upshape \r
elax \fontshape \updefault \selectfont }\protected \def \slshape {\not@math@alp
habet \slshape \relax \fontshape \sldefault \selectfont }\protected \def \scsha
pe {\not@math@alphabet \scshape \relax \fontshape \scdefault \selectfont }\prot
ected \def \itshape {\not@math@alphabet \itshape \mathit \fontshape \itdefault 
\selectfont }\protected \def \ulcshape {\not@math@alphabet \ulcshape \relax \fo
ntshape {ulc}\selectfont }\protected \def \swshape {\not@math@alphabet \swshape
 \relax \fontshape \swdefault \selectfont }\protected \def \sscshape {\not@math
@alphabet \sscshape \relax \fontshape \sscdefault \selectfont }

\init@series@setup ->\ifx \bfseries@rm@kernel \bfseries@rm \expandafter \in@ \e
xpandafter {\rmdefault }{cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt}\ifin@ \else \
def \bfseries@rm {b}\fi \fi \ifx \bfseries@sf@kernel \bfseries@sf \expandafter 
\in@ \expandafter {\sfdefault }{cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt}\ifin@ 
\else \def \bfseries@sf {b}\fi \fi \ifx \bfseries@tt@kernel \bfseries@tt \expan
dafter \in@ \expandafter {\ttdefault }{cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt}
\ifin@ \else \def \bfseries@tt {b}\fi \fi \reset@font \ifx \seriesdefault \seri
esdefault@kernel \mdseries \let \seriesdefault \f@series \fi 

\rmdefault ->cmr

\in@ #1#2->\begingroup \def \in@@ ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1}\e
def \in@@ {\the \toks@ }\expandafter \endgroup \ifx \in@@ \@empty \in@false \el
se \in@true \fi 
#1<-cmr
#2<-cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt

\in@@ #1cmr->
#1<-

\in@true ->\let \ifin@ \iftrue 

\sfdefault ->cmss

\in@ #1#2->\begingroup \def \in@@ ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1}\e
def \in@@ {\the \toks@ }\expandafter \endgroup \ifx \in@@ \@empty \in@false \el
se \in@true \fi 
#1<-cmss
#2<-cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt

\in@@ #1cmss->
#1<-cmr,

\in@true ->\let \ifin@ \iftrue 

\ttdefault ->cmtt

\in@ #1#2->\begingroup \def \in@@ ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1}\e
def \in@@ {\the \toks@ }\expandafter \endgroup \ifx \in@@ \@empty \in@false \el
se \in@true \fi 
#1<-cmtt
#2<-cmr,cmss,cmtt,lcmss,lcmtt,lmr,lmss,lmtt

\in@@ #1cmtt->
#1<-cmr,cmss,

\in@true ->\let \ifin@ \iftrue 

\reset@font ->\protect \normalfont  

\normalfont  ->\fontencoding \encodingdefault \edef \f@family {\familydefault }
\edef \f@series {\seriesdefault }\edef \f@shape {\shapedefault }\let \delayed@f
@adjustment \@empty \UseHook {normalfont}\@defaultfamilyhook \selectfont 

\fontencoding ->\protect \fontencoding  

\fontencoding  #1->\expandafter \ifx \csname T@#1\endcsname \relax \@latex@erro
r {Encoding scheme `#1' unknown}\@eha \else \edef \f@encoding {#1}\ifx \cf@enco
ding \f@encoding \let \enc@update \relax \else \let \enc@update \@@enc@update \
fi \fi 
#1<-\encodingdefault 

\encodingdefault ->OT1

\encodingdefault ->OT1

\familydefault ->\rmdefault 

\rmdefault ->cmr

\seriesdefault ->\mddefault \@empty 

\mddefault ->m\@empty 

\@empty ->

\@empty ->

\shapedefault ->n

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-normalfont

\__hook normalfont ->\__hook_toplevel normalfont \__hook_next normalfont 

\__hook_toplevel normalfont ->

\__hook_next normalfont ->

\@defaultfamilyhook ->

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\mdseries ->\protect \mdseries  

\mdseries  ->\not@math@alphabet \mdseries \relax \expand@font@defaults \maybe@u
pdate@mdseries@defaults \ifx \f@family \rmdef@ult \fontseries \mdseries@rm \els
e \ifx \f@family \sfdef@ult \fontseries \mdseries@sf \else \ifx \f@family \ttde
f@ult \fontseries \mdseries@tt \else \fontseries \mddefault \fi \fi \fi \UseHoo
k {mdseries}\selectfont 

\not@math@alphabet #1#2->\relax \ifmmode \@latex@error {Command \noexpand #1inv
alid in math mode}{Please \ifx #2\relax define a new math alphabet
if you want to use a special font in math mode\else use the math alphabet \noex
pand #2instead of the #1command\fi . }\fi 
#1<-\mdseries 
#2<-\relax 

\expand@font@defaults ->\edef \rmdef@ult {\rmdefault }\edef \sfdef@ult {\sfdefa
ult }\edef \ttdef@ult {\ttdefault }\series@maybe@drop@one@m \bfdefault \bfdef@u
lt \series@maybe@drop@one@m \mddefault \mddef@ult \UseHook {expand@font@default
s}

\rmdefault ->cmr

\sfdefault ->cmss

\ttdefault ->cmtt

\series@maybe@drop@one@m #1->\expandafter \series@maybe@drop@one@m@x \expandaft
er {#1}
#1<-\bfdefault 

\bfdefault ->b\@empty 

\series@maybe@drop@one@m@x #1#2->\def \in@@ ##1,#1,{}\series@check@toks \expand
after {\in@@ ,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}
{},#1,}\edef \in@@ {\the \series@check@toks }\ifx \in@@ \@empty \edef #2{#1}\el
se \edef #2{\expandafter \series@drop@one@m #1m\series@drop@one@m }\fi 
#1<-b\@empty 
#2<-\bfdef@ult 

\in@@ #1,b\@empty ,->
#1<-,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}{}

\@empty ->

\series@maybe@drop@one@m #1->\expandafter \series@maybe@drop@one@m@x \expandaft
er {#1}
#1<-\mddefault 

\mddefault ->m\@empty 

\series@maybe@drop@one@m@x #1#2->\def \in@@ ##1,#1,{}\series@check@toks \expand
after {\in@@ ,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}
{},#1,}\edef \in@@ {\the \series@check@toks }\ifx \in@@ \@empty \edef #2{#1}\el
se \edef #2{\expandafter \series@drop@one@m #1m\series@drop@one@m }\fi 
#1<-m\@empty 
#2<-\mddef@ult 

\in@@ #1,m\@empty ,->
#1<-,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}{}

\@empty ->

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-expand@font@defaults

\__hook expand@font@defaults ->\__hook_toplevel expand@font@defaults \__hook_ne
xt expand@font@defaults 

\__hook_toplevel expand@font@defaults ->

\__hook_next expand@font@defaults ->

\maybe@update@mdseries@defaults ->\ifx \mddefault \mddefault@previous \else \ex
pandafter \def \expandafter \mddefault \expandafter {\mddefault \@empty }\let \
mddefault@previous \mddefault \let \mdseries@rm \mddef@ult \let \mdseries@sf \m
ddef@ult \let \mdseries@tt \mddef@ult \UseHook {mdseries/defaults}\fi 

\fontseries ->\protect \fontseries  

\fontseries  #1->\@forced@seriesfalse \expandafter \def \expandafter \delayed@f
@adjustment \expandafter {\delayed@f@adjustment \delayed@merge@font@series {#1}
}
#1<-\mdseries@rm 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\delayed@f@adjustment ->

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-mdseries

\__hook mdseries ->\__hook_toplevel mdseries \__hook_next mdseries 

\__hook_toplevel mdseries ->

\__hook_next mdseries ->

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\delayed@f@adjustment ->\delayed@merge@font@series {\mdseries@rm }

\delayed@merge@font@series #1->\expandafter \expandafter \expandafter \merge@fo
nt@series@without@substitution@ \csname series@\f@series @#1\endcsname {#1}\@ni
l 
#1<-\mdseries@rm 

\f@series ->m

\mdseries@rm ->m

\merge@font@series@without@substitution@ #1#2#3\@nil ->\def \reserved@a {#3}\if
x \reserved@a \@empty \set@target@series {#2}\else \set@target@series {#1}\fi 
#1<-\series@m@m 
#2<-\mdseries@rm 
#3<-

\set@target@series #1->\edef \f@series {#1}\series@maybe@drop@one@m \f@series \
f@series 
#1<-\mdseries@rm 

\mdseries@rm ->m

\series@maybe@drop@one@m #1->\expandafter \series@maybe@drop@one@m@x \expandaft
er {#1}
#1<-\f@series 

\f@series ->m

\series@maybe@drop@one@m@x #1#2->\def \in@@ ##1,#1,{}\series@check@toks \expand
after {\in@@ ,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}
{},#1,}\edef \in@@ {\the \series@check@toks }\ifx \in@@ \@empty \edef #2{#1}\el
se \edef #2{\expandafter \series@drop@one@m #1m\series@drop@one@m }\fi 
#1<-m
#2<-\f@series 

\in@@ #1,m,->
#1<-,ulm,elm,lm,slm,mm,sbm,bm,ebm,ubm,muc,mec,mc,msc,msx,mx,mex,mux,{}{}

\maybe@load@fontshape ->\begingroup \let \typeout \@font@info \try@load@fontsha
pe \endgroup 

\try@load@fontshape ->\expandafter \ifx \csname \f@encoding +\f@family \endcsna
me \relax \@font@info {Trying to load font information for \f@encoding +\f@fami
ly }\global \expandafter \let \csname \f@encoding +\f@family \endcsname \@empty
 \nfss@catcodes \let \nfss@catcodes \relax \edef \reserved@a {\lowercase {\noex
pand \InputIfFileExists {\f@encoding \f@family .fd}}}\reserved@a \relax {\@inpu
t@ {\f@encoding \f@family .fd}}\fi 

\f@encoding ->OT1

\f@family ->cmr

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\@expl@sys@load@backend@@ ->\str_if_exist:NF \c_sys_backend_str {\sys_load_back
end:n {}}

\str_if_exist:NF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: {}
#1<-\c_sys_backend_str 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\sys_load_backend:n {}

\sys_load_backend:n #1->\sys_finalise: \str_if_exist:NTF \c_sys_backend_str {\s
tr_if_eq:VnF \c_sys_backend_str {#1}{\msg_error:nn {sys}{backend-set}}}{\tl_if_
blank:nF {#1}{\tl_gset:Nn \g__sys_backend_tl {#1}}\__sys_load_backend_check:N \
g__sys_backend_tl \str_const:Nx \c_sys_backend_str {\g__sys_backend_tl }\__kern
el_sys_configuration_load:n {l3backend-\c_sys_backend_str }}
#1<-

\sys_finalise: ->\sys_everyjob: \tl_use:N \g__sys_finalise_tl \tl_gclear:N \g__
sys_finalise_tl 

\sys_everyjob: ->\tl_use:N \g__sys_everyjob_tl \tl_gclear:N \g__sys_everyjob_tl
 

\tl_use:N #1->\tl_if_exist:NTF #1{#1}{\msg_expandable_error:nnn {kernel}{bad-va
riable}{#1}}
#1<-\g__sys_everyjob_tl 

\tl_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__sys_everyjob_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\g__sys_everyjob_tl 
#2<-\msg_expandable_error:nnn {kernel}{bad-variable}{\g__sys_everyjob_tl }

\g__sys_everyjob_tl ->

\tl_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__sys_everyjob_tl 

\tl_use:N #1->\tl_if_exist:NTF #1{#1}{\msg_expandable_error:nnn {kernel}{bad-va
riable}{#1}}
#1<-\g__sys_finalise_tl 

\tl_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__sys_finalise_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\g__sys_finalise_tl 
#2<-\msg_expandable_error:nnn {kernel}{bad-variable}{\g__sys_finalise_tl }

\g__sys_finalise_tl ->\str_const:Nx \c_sys_output_str {\int_compare:nNnTF {\cs_
if_exist_use:NF \tex_pdfoutput:D {0}}>{0}{pdf}{dvi}}\__sys_const:nn {sys_if_out
put_dvi}{\str_if_eq_p:Vn \c_sys_output_str {dvi}}\__sys_const:nn {sys_if_output
_pdf}{\str_if_eq_p:Vn \c_sys_output_str {pdf}}\__kernel_tl_gset:Nx \g__sys_back
end_tl {\sys_if_engine_xetex:TF {xetex}{\sys_if_output_pdf:TF {\sys_if_engine_p
dftex:TF {pdftex}{luatex}}{dvips}}}\cs_if_exist:NT \@classoptionslist {\cs_if_e
q:NNF \@classoptionslist \scan_stop: {\clist_map_inline:Nn \@classoptionslist {
\str_case:nnT {##1}{{dvipdfmx}{\tl_gset:Nn \g__sys_backend_tl {dvipdfmx}}{dvips
}{\tl_gset:Nn \g__sys_backend_tl {dvips}}{dvisvgm}{\tl_gset:Nn \g__sys_backend_
tl {dvisvgm}}{pdftex}{\tl_gset:Nn \g__sys_backend_tl {pdfmode}}{xetex}{\tl_gset
:Nn \g__sys_backend_tl {xdvipdfmx}}}{\clist_remove_all:Nn \@unusedoptionlist {#
#1}}}}}

\str_const:Nx ->\exp_args:NNx \str_const:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\str_const:Nn 
#2<-\c_sys_output_str 
#3<-\int_compare:nNnTF {\cs_if_exist_use:NF \tex_pdfoutput:D {0}}>{0}{pdf}{dvi}

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \str_const:Nn \exp_not:N \c_sys_output_str {\int_compare:nNnTF {
\cs_if_exist_use:NF \tex_pdfoutput:D {0}}>{0}{pdf}{dvi}}

\int_compare:nNnTF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3
\__int_eval_end: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\cs_if_exist_use:NF \tex_pdfoutput:D {0}
#2<->
#3<-0

\cs_if_exist_use:NF #1->\cs_if_exist:NTF #1{#1}
#1<-\tex_pdfoutput:D 

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\tex_pdfoutput:D 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\tex_pdfoutput:D 
#2<-0

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-pdf
#2<-dvi

\l__exp_internal_tl ->\str_const:Nn \c_sys_output_str {pdf}

\str_const:Nn #1#2->\tl_const:Nx #1{\tl_to_str:n {#2}}
#1<-\c_sys_output_str 
#2<-pdf

\tl_const:Nx #1#2->\__kernel_chk_if_free_cs:N #1\cs_gset_nopar:Npx #1{#2}
#1<-\c_sys_output_str 
#2<-\tl_to_str:n {pdf}

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\c_sys_output_str 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\c_sys_output_str 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \c_sys_ou
tput_str }{\token_to_meaning:N \c_sys_output_str }

\__sys_const:nn #1#2->\bool_if:nTF {#2}{\cs_new_eq:cN {#1:T}\use:n \cs_new_eq:c
N {#1:F}\use_none:n \cs_new_eq:cN {#1:TF}\use_i:nn \cs_new_eq:cN {#1_p:}\c_true
_bool }{\cs_new_eq:cN {#1:T}\use_none:n \cs_new_eq:cN {#1:F}\use:n \cs_new_eq:c
N {#1:TF}\use_ii:nn \cs_new_eq:cN {#1_p:}\c_false_bool }
#1<-sys_if_output_dvi
#2<-\str_if_eq_p:Vn \c_sys_output_str {dvi}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\str_if_eq_p:Vn \c_sys_output_str {dvi}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:Vn \c_sys_output_str {dvi}

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\c_sys_output_str 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\c_sys_output_str 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\c_sys_output_str ->pdf

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-pdf
#2<-dvi

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\cs_new_eq:cN {sys_if_output_dvi:T}\use:n \cs_new_eq:cN {sys_if_output_dvi:
F}\use_none:n \cs_new_eq:cN {sys_if_output_dvi:TF}\use_i:nn \cs_new_eq:cN {sys_
if_output_dvi_p:}\c_true_bool 
#2<-\cs_new_eq:cN {sys_if_output_dvi:T}\use_none:n \cs_new_eq:cN {sys_if_output
_dvi:F}\use:n \cs_new_eq:cN {sys_if_output_dvi:TF}\use_ii:nn \cs_new_eq:cN {sys
_if_output_dvi_p:}\c_false_bool 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_dvi:T

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_dvi:T 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_dvi:T 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_dvi:T 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_dvi:T }{\token_to_meaning:N \sys_if_output_dvi:T }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_dvi:T 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_dvi:F

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_dvi:F 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_dvi:F 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_dvi:F 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_dvi:F }{\token_to_meaning:N \sys_if_output_dvi:F }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_dvi:F 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_dvi:TF

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_dvi:TF 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_dvi:TF 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_dvi:TF 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_dvi:TF }{\token_to_meaning:N \sys_if_output_dvi:TF }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_dvi:TF 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_dvi_p:

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_dvi_p: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_dvi_p: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_dvi_p: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_dvi_p: }{\token_to_meaning:N \sys_if_output_dvi_p: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_dvi_p: 

\__sys_const:nn #1#2->\bool_if:nTF {#2}{\cs_new_eq:cN {#1:T}\use:n \cs_new_eq:c
N {#1:F}\use_none:n \cs_new_eq:cN {#1:TF}\use_i:nn \cs_new_eq:cN {#1_p:}\c_true
_bool }{\cs_new_eq:cN {#1:T}\use_none:n \cs_new_eq:cN {#1:F}\use:n \cs_new_eq:c
N {#1:TF}\use_ii:nn \cs_new_eq:cN {#1_p:}\c_false_bool }
#1<-sys_if_output_pdf
#2<-\str_if_eq_p:Vn \c_sys_output_str {pdf}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\str_if_eq_p:Vn \c_sys_output_str {pdf}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:Vn \c_sys_output_str {pdf}

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\c_sys_output_str 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\c_sys_output_str 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\c_sys_output_str ->pdf

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-pdf
#2<-pdf

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\cs_new_eq:cN {sys_if_output_pdf:T}\use:n \cs_new_eq:cN {sys_if_output_pdf:
F}\use_none:n \cs_new_eq:cN {sys_if_output_pdf:TF}\use_i:nn \cs_new_eq:cN {sys_
if_output_pdf_p:}\c_true_bool 
#2<-\cs_new_eq:cN {sys_if_output_pdf:T}\use_none:n \cs_new_eq:cN {sys_if_output
_pdf:F}\use:n \cs_new_eq:cN {sys_if_output_pdf:TF}\use_ii:nn \cs_new_eq:cN {sys
_if_output_pdf_p:}\c_false_bool 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_pdf:T

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_pdf:T 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_pdf:T 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_pdf:T 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_pdf:T }{\token_to_meaning:N \sys_if_output_pdf:T }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_pdf:T 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_pdf:F

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_pdf:F 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_pdf:F 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_pdf:F 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_pdf:F }{\token_to_meaning:N \sys_if_output_pdf:F }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_pdf:F 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_pdf:TF

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_pdf:TF 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_pdf:TF 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_pdf:TF 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_pdf:TF }{\token_to_meaning:N \sys_if_output_pdf:TF }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_pdf:TF 

\cs_new_eq:cN ->\exp_args:Nc \cs_new_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_new_eq:NN 
#2<-sys_if_output_pdf_p:

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\sys_if_output_pdf_p: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\sys_if_output_pdf_p: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\sys_if_output_pdf_p: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \sys_if_o
utput_pdf_p: }{\token_to_meaning:N \sys_if_output_pdf_p: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\sys_if_output_pdf_p: 

\sys_if_engine_xetex:TF #1#2->#2
#1<-xetex
#2<-\sys_if_output_pdf:TF {\sys_if_engine_pdftex:TF {pdftex}{luatex}}{dvips}

\sys_if_output_pdf:TF #1#2->#1
#1<-\sys_if_engine_pdftex:TF {pdftex}{luatex}
#2<-dvips

\sys_if_engine_pdftex:TF #1#2->#1
#1<-pdftex
#2<-luatex

\cs_if_exist:NT #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_c
s_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \us
e:n \use_none:n 
#1<-\@classoptionslist 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\cs_if_eq:NNF \@classoptionslist \scan_stop: {\clist_map_inline:Nn \@classo
ptionslist {\str_case:nnT {##1}{{dvipdfmx}{\tl_gset:Nn \g__sys_backend_tl {dvip
dfmx}}{dvips}{\tl_gset:Nn \g__sys_backend_tl {dvips}}{dvisvgm}{\tl_gset:Nn \g__
sys_backend_tl {dvisvgm}}{pdftex}{\tl_gset:Nn \g__sys_backend_tl {pdfmode}}{xet
ex}{\tl_gset:Nn \g__sys_backend_tl {xdvipdfmx}}}{\clist_remove_all:Nn \@unusedo
ptionlist {##1}}}}

\cs_if_eq:NNF #1#2->\if_meaning:w #1#2\__prg_F_true:w \fi: \use:n 
#1<-\@classoptionslist 
#2<-\scan_stop: 

\use:n #1->#1
#1<-\clist_map_inline:Nn \@classoptionslist {\str_case:nnT {##1}{{dvipdfmx}{\tl
_gset:Nn \g__sys_backend_tl {dvipdfmx}}{dvips}{\tl_gset:Nn \g__sys_backend_tl {
dvips}}{dvisvgm}{\tl_gset:Nn \g__sys_backend_tl {dvisvgm}}{pdftex}{\tl_gset:Nn 
\g__sys_backend_tl {pdfmode}}{xetex}{\tl_gset:Nn \g__sys_backend_tl {xdvipdfmx}
}}{\clist_remove_all:Nn \@unusedoptionlist {##1}}}

\clist_map_inline:Nn #1#2->\clist_if_empty:NF #1{\int_gincr:N \g__kernel_prg_ma
p_int \cs_gset_protected:cpn {__clist_map_\int_use:N \g__kernel_prg_map_int :w}
##1{#2}\exp_last_unbraced:Nco \__clist_map_function:Nw {__clist_map_\int_use:N 
\g__kernel_prg_map_int :w}#1,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\s
__clist_stop ,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\
prg_break_point:Nn \clist_map_break: {\int_gdecr:N \g__kernel_prg_map_int }}
#1<-\@classoptionslist 
#2<-\str_case:nnT {##1}{{dvipdfmx}{\tl_gset:Nn \g__sys_backend_tl {dvipdfmx}}{d
vips}{\tl_gset:Nn \g__sys_backend_tl {dvips}}{dvisvgm}{\tl_gset:Nn \g__sys_back
end_tl {dvisvgm}}{pdftex}{\tl_gset:Nn \g__sys_backend_tl {pdfmode}}{xetex}{\tl_
gset:Nn \g__sys_backend_tl {xdvipdfmx}}}{\clist_remove_all:Nn \@unusedoptionlis
t {##1}}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\@classoptionslist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\int_gincr:N \g__kernel_prg_map_int \cs_gset_protected:cpn {__clist_map_\in
t_use:N \g__kernel_prg_map_int :w}##1{\str_case:nnT {##1}{{dvipdfmx}{\tl_gset:N
n \g__sys_backend_tl {dvipdfmx}}{dvips}{\tl_gset:Nn \g__sys_backend_tl {dvips}}
{dvisvgm}{\tl_gset:Nn \g__sys_backend_tl {dvisvgm}}{pdftex}{\tl_gset:Nn \g__sys
_backend_tl {pdfmode}}{xetex}{\tl_gset:Nn \g__sys_backend_tl {xdvipdfmx}}}{\cli
st_remove_all:Nn \@unusedoptionlist {##1}}}\exp_last_unbraced:Nco \__clist_map_
function:Nw {__clist_map_\int_use:N \g__kernel_prg_map_int :w}\@classoptionslis
t ,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\s__clist_st
op ,\s__clist_stop ,\s__clist_stop ,\s__clist_stop ,\prg_break_point:Nn \clist_
map_break: {\int_gdecr:N \g__kernel_prg_map_int }

\tl_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__sys_finalise_tl 

\str_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\c_sys_backend_str 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\str_if_eq:VnF \c_sys_backend_str {}{\msg_error:nn {sys}{backend-set}}
#2<-\tl_if_blank:nF {}{\tl_gset:Nn \g__sys_backend_tl {}}\__sys_load_backend_ch
eck:N \g__sys_backend_tl \str_const:Nx \c_sys_backend_str {\g__sys_backend_tl }
\__kernel_sys_configuration_load:n {l3backend-\c_sys_backend_str }

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-

\use_none:n #1->
#1<-?

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tl_gset:Nn \g__sys_backend_tl {}

\__sys_load_backend_check:N #1->\sys_if_engine_xetex:TF {\str_case:VnF #1{{dvis
vgm}{}{xdvipdfmx}{\tl_gset:Nn #1{xetex}}{xetex}{}}{\msg_error:nnxx {sys}{wrong-
backend}#1{xetex}\tl_gset:Nn #1{xetex}}}{\sys_if_output_pdf:TF {\str_if_eq:VnTF
 #1{pdfmode}{\sys_if_engine_luatex:TF {\tl_gset:Nn #1{luatex}}{\tl_gset:Nn #1{p
dftex}}}{\bool_lazy_or:nnF {\str_if_eq_p:Vn #1{luatex}}{\str_if_eq_p:Vn #1{pdft
ex}}{\msg_error:nnxx {sys}{wrong-backend}#1{\sys_if_engine_luatex:TF {luatex}{p
dftex}}\sys_if_engine_luatex:TF {\tl_gset:Nn #1{luatex}}{\tl_gset:Nn #1{pdftex}
}}}}{\str_case:VnF #1{{dvipdfmx}{}{dvips}{}{dvisvgm}{}}{\msg_error:nnxx {sys}{w
rong-backend}#1{dvips}\tl_gset:Nn #1{dvips}}}}
#1<-\g__sys_backend_tl 

\sys_if_engine_xetex:TF #1#2->#2
#1<-\str_case:VnF \g__sys_backend_tl {{dvisvgm}{}{xdvipdfmx}{\tl_gset:Nn \g__sy
s_backend_tl {xetex}}{xetex}{}}{\msg_error:nnxx {sys}{wrong-backend}\g__sys_bac
kend_tl {xetex}\tl_gset:Nn \g__sys_backend_tl {xetex}}
#2<-\sys_if_output_pdf:TF {\str_if_eq:VnTF \g__sys_backend_tl {pdfmode}{\sys_if
_engine_luatex:TF {\tl_gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset:Nn \g__sys
_backend_tl {pdftex}}}{\bool_lazy_or:nnF {\str_if_eq_p:Vn \g__sys_backend_tl {l
uatex}}{\str_if_eq_p:Vn \g__sys_backend_tl {pdftex}}{\msg_error:nnxx {sys}{wron
g-backend}\g__sys_backend_tl {\sys_if_engine_luatex:TF {luatex}{pdftex}}\sys_if
_engine_luatex:TF {\tl_gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset:Nn \g__sys
_backend_tl {pdftex}}}}}{\str_case:VnF \g__sys_backend_tl {{dvipdfmx}{}{dvips}{
}{dvisvgm}{}}{\msg_error:nnxx {sys}{wrong-backend}\g__sys_backend_tl {dvips}\tl
_gset:Nn \g__sys_backend_tl {dvips}}}

\sys_if_output_pdf:TF #1#2->#1
#1<-\str_if_eq:VnTF \g__sys_backend_tl {pdfmode}{\sys_if_engine_luatex:TF {\tl_
gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset:Nn \g__sys_backend_tl {pdftex}}}{
\bool_lazy_or:nnF {\str_if_eq_p:Vn \g__sys_backend_tl {luatex}}{\str_if_eq_p:Vn
 \g__sys_backend_tl {pdftex}}{\msg_error:nnxx {sys}{wrong-backend}\g__sys_backe
nd_tl {\sys_if_engine_luatex:TF {luatex}{pdftex}}\sys_if_engine_luatex:TF {\tl_
gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset:Nn \g__sys_backend_tl {pdftex}}}}
#2<-\str_case:VnF \g__sys_backend_tl {{dvipdfmx}{}{dvips}{}{dvisvgm}{}}{\msg_er
ror:nnxx {sys}{wrong-backend}\g__sys_backend_tl {dvips}\tl_gset:Nn \g__sys_back
end_tl {dvips}}

\str_if_eq:VnTF ->\exp_args:NV \str_if_eq:nnTF 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq:nnTF 
#2<-\g__sys_backend_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\g__sys_backend_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\g__sys_backend_tl ->pdftex

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-pdftex
#2<-pdfmode

\use_ii:nn #1#2->#2
#1<-\sys_if_engine_luatex:TF {\tl_gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset
:Nn \g__sys_backend_tl {pdftex}}
#2<-\bool_lazy_or:nnF {\str_if_eq_p:Vn \g__sys_backend_tl {luatex}}{\str_if_eq_
p:Vn \g__sys_backend_tl {pdftex}}{\msg_error:nnxx {sys}{wrong-backend}\g__sys_b
ackend_tl {\sys_if_engine_luatex:TF {luatex}{pdftex}}\sys_if_engine_luatex:TF {
\tl_gset:Nn \g__sys_backend_tl {luatex}}{\tl_gset:Nn \g__sys_backend_tl {pdftex
}}}

\bool_lazy_or:nnF #1#2->\if_predicate:w \bool_if:nTF {#1}{\c_true_bool }{\bool_
if_p:n {#2}}\__prg_F_true:w \fi: \use:n 
#1<-\str_if_eq_p:Vn \g__sys_backend_tl {luatex}
#2<-\str_if_eq_p:Vn \g__sys_backend_tl {pdftex}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\str_if_eq_p:Vn \g__sys_backend_tl {luatex}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:Vn \g__sys_backend_tl {luatex}

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\g__sys_backend_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\g__sys_backend_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\g__sys_backend_tl ->pdftex

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-pdftex
#2<-luatex

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\bool_if_p:n {\str_if_eq_p:Vn \g__sys_backend_tl {pdftex}}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:Vn \g__sys_backend_tl {pdftex}

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\g__sys_backend_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\g__sys_backend_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\g__sys_backend_tl ->pdftex

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-pdftex
#2<-pdftex

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\msg_error:nnxx {sys}{wrong-backend}\g__sys_backend_tl {\sys_if_engine_luat
ex:TF {luatex}{pdftex}}\sys_if_engine_luatex:TF {\tl_gset:Nn \g__sys_backend_tl
 {luatex}}{\tl_gset:Nn \g__sys_backend_tl {pdftex}}

\str_const:Nx ->\exp_args:NNx \str_const:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\str_const:Nn 
#2<-\c_sys_backend_str 
#3<-\g__sys_backend_tl 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \str_const:Nn \exp_not:N \c_sys_backend_str {\g__sys_backend_tl 
}

\g__sys_backend_tl ->pdftex

\l__exp_internal_tl ->\str_const:Nn \c_sys_backend_str {pdftex}

\str_const:Nn #1#2->\tl_const:Nx #1{\tl_to_str:n {#2}}
#1<-\c_sys_backend_str 
#2<-pdftex

\tl_const:Nx #1#2->\__kernel_chk_if_free_cs:N #1\cs_gset_nopar:Npx #1{#2}
#1<-\c_sys_backend_str 
#2<-\tl_to_str:n {pdftex}

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\c_sys_backend_str 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\c_sys_backend_str 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \c_sys_ba
ckend_str }{\token_to_meaning:N \c_sys_backend_str }

\__kernel_sys_configuration_load:n #1->\cs_undefine:c {ver@#1.def}\@onefilewith
options {#1}[][]\c__expl_def_ext_tl 
#1<-l3backend-\c_sys_backend_str 

\cs_undefine:c #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use:n \else: \exp_a
fter:wN \use_none:n \fi: {\cs_gset_eq:cN {#1}\tex_undefined:D }
#1<-ver@l3backend-\c_sys_backend_str .def

\c_sys_backend_str ->pdftex

\use_none:n #1->
#1<-\cs_gset_eq:cN {ver@l3backend-\c_sys_backend_str .def}\tex_undefined:D 

\@onefilewithoptions #1[#2][#3]#4->\pkgcls@debug {--- File loaded request (\noe
xpand \usepackage or ...)}\pkgcls@debug {\@spaces 1: #1}\pkgcls@debug {\@spaces
 2: #2}\pkgcls@debug {\@spaces 3: #3}\pkgcls@debug {\@spaces 4: #4}\def \pkgcls
@name {#1}\def \pkgcls@arg {#3}\pkgcls@parse@date@arg {#3}\let \pkgcls@candidat
e \@empty \begingroup \edef \reserved@a {\endgroup \unexpanded {\load@onefilewi
thoptions #1[#2]}[\pkgcls@mindate ]\unexpanded {#4}}\reserved@a 
#1<-l3backend-\c_sys_backend_str 
#2<-
#3<-
#4<-\c__expl_def_ext_tl 

\pkgcls@debug #1->
#1<---- File loaded request (\noexpand \usepackage or ...)

\pkgcls@debug #1->
#1<-\@spaces 1: l3backend-\c_sys_backend_str 

\pkgcls@debug #1->
#1<-\@spaces 2: 

\pkgcls@debug #1->
#1<-\@spaces 3: 

\pkgcls@debug #1->
#1<-\@spaces 4: \c__expl_def_ext_tl 

\pkgcls@parse@date@arg #1->\ifx \@nil #1\@nil \pkgcls@targetdate \requestedLaTe
Xdate \relax \let \pkgcls@targetlabel \@empty \let \pkgcls@mindate \@empty \els
e \pkgcls@parse@date@arg@ #1=\@nil \relax \fi 
#1<-

\requestedLaTeXdate ->0

\pkgcls@mindate ->

\reserved@a ->\endgroup \load@onefilewithoptions l3backend-\c_sys_backend_str [
][]\c__expl_def_ext_tl 

\load@onefilewithoptions #1[#2][#3]#4->\@expl@@@filehook@set@curr@file@@nNN {#1
.#4}\reserved@a \reserved@b \edef \reserved@c {\def \noexpand \reserved@c ####1
\detokenize \expandafter {\expanded {.#4}}\noexpand \@nil {\def \noexpand \rese
rved@a {####1}}}\reserved@c \expandafter \reserved@c \reserved@a \@nil \@pushfi
lename \xdef \@currname {\string@makeletter \reserved@a }\xdef \@currpath {\ifx
 \reserved@b \@empty \else \reserved@b /\fi }\global \let \@currext #4\@ifl@ade
d \@currext \@currname {\@ifundefined {opt@handler@\@currname .\@currext } {\@o
nefilewithoptions@clashchk {#2}} {\expandafter \protected@edef \csname opt@\@cu
rrname .\@currext \endcsname {\zap@space #2 \@empty }\@namedef {@raw@opt@\@curr
name .\@currext }{#2}\@nameuse {opt@handler@\@currname .\@currext }}}{\makeatle
tter \@reset@ptions \IfFileExists {\@currpath \@currname .\@currext }{}{\@missi
ng@onefilewithoptions {#2}}\ifx \@currname \@empty \expandafter \@gobble \else 
\@disable@packageload@do {\@currname .\@currext }{\@expl@@@filehook@file@push@@
 \set@curr@file {\@currpath \@currname .\@currext }\@filehook@set@CurrentFile \
expandafter \@swaptwoargs \expandafter {\expandafter {\@currpkg@reqd }}{\edef \
@currpkg@reqd {\@currname .\@currext }\ifx \CurrentFile \CurrentFileUsed \else 
\filename@parse \@curr@file \edef \@currpath {\string@makeletter \filename@area
 }\edef \@currname {\string@makeletter \filename@base }\edef \@currext {\string
@makeletter \filename@ext }\fi \load@onefile@withoptions {#2}\def \@currpkg@req
d }\@expl@@@filehook@file@pop@@ }\expandafter \@firstofone \fi }{\@ifl@ter \@cu
rrext {\@currname }{#3}{}{\@latex@warning@no@line {You have requested,\on@line 
, version\MessageBreak `#3' of \@cls@pkg \space \@currname ,\MessageBreak but o
nly version\MessageBreak `\csname ver@\@currname .\@currext \endcsname '\Messag
eBreak is available}}\ifx \@currext \@clsextension \let \LoadClass \@twoloadcla
sserror \fi }\@popfilename \@reset@ptions 
#1<-l3backend-\c_sys_backend_str 
#2<-
#3<-
#4<-\c__expl_def_ext_tl 

\@expl@@@filehook@set@curr@file@@nNN #1->\exp_args:Nf \__filehook_file_parse_fu
ll_name:nN {#1}\__filehook_set_curr_file_assign:nnnNN 
#1<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_file_parse_full_name:nN 
#2<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\exp_end_continue_f:w ->`^^@

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {l3backend-\c_sys_
backend_str .\c__expl_def_ext_tl }}{l3backend-\c_sys_backend_str .\c__expl_def_
ext_tl }

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {l3backend-\c_sys_backend_str .\c__expl_def_ext_tl }

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {l3backend-\c_sys_backend_str .\c__expl_def_
ext_tl }

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
\c_sys_backend_str .\c__expl_def_ext_tl }}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-\c_sys_backend_str .\c__expl_def_ext_tl }

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\c_sys_backend_str ->pdftex

\c__expl_def_ext_tl ->def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-l3backend-pdftex.def

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-l3backend-pdftex.def

\use_none:n #1->
#1<-l

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {l3backend-pdftex.def}{\__file_size:
n {l3backend-pdftex.def}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-\__file_size:n {l3backend-pdftex.def}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-30429

\use_none:n #1->
#1<-3

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {l3backend-pdftex.def}}\cs_if_exist:NT \input@path {\tl_map_tokens:
Nn \input@path {\__file_full_name_aux:Nnn \tl_map_break:n {l3backend-pdftex.def
}}}\__file_name_end: 
#2<-\__file_ext_check:nn {l3backend-pdftex.def}{30429}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-l3backend-pdftex.def
#2<-30429

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{30429}{l3backend-pdftex
.def}l3backend-pdftex.def.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}\q__file_nil /\s__file
_stop 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{3042
9}
#2<-l3backend-pdftex.def

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-\c_sys_backend_str .\c__expl_def_ext_tl 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {l3backend-\c_sys_backend_str .\c__expl_def_ext_tl }
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-l3backend-pdftex.def

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}l3backend-pdftex.def.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/l3backend-pdftex.def}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-def.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {l3backend-pdftex}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{
\__file_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex}def.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.l3backend-pdftex}{\tl_if_empty:nTF {def}{\__file_parse_f
ull_name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.def}{}}}{\__file_p
arse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex.def}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.l3backend-pdftex

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {def}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.def}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-\__filehook_set_curr_file_assign:nnnNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_set_curr_file_assign:nnnNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .l3backend-pdftex\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_set_curr_file_assign:nnnNN #1#2#3#4#5->\str_set:Nn #5{#1}\str_set:N
n #4{#2#3}
#1<-
#2<-l3backend-pdftex
#3<-.def
#4<-\reserved@a 
#5<-\reserved@b 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\reserved@b 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\reserved@b 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\reserved@a 
#2<-l3backend-pdftex.def

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\reserved@a 
#2<-\tl_to_str:n {l3backend-pdftex.def}

\c__expl_def_ext_tl ->def

\reserved@c ->\def \reserved@c ##1.def\@nil {\def \reserved@a {##1}}

\reserved@a ->l3backend-pdftex.def

\reserved@c #1.def\@nil ->\def \reserved@a {#1}
#1<-l3backend-pdftex

\@pushfilename ->\@expl@push@filename@@ \xdef \@currnamestack {{\@currname }{\@
currext }{\the \catcode `\@}\@currnamestack }\xdef \@kernel@currpathstack {{\@c
urrpath }\@kernel@currpathstack }\@expl@push@filename@aux@@ 

\@expl@push@filename@@ ->\exp_args:Nx \__kernel_file_input_push:n {\tl_to_str:N
 \@currname .\tl_to_str:N \@currext }\tl_put_left:Nx \l__expl_status_stack_tl {
\bool_if:NTF \l__kernel_expl_bool {1}{0}}\ExplSyntaxOff 

\exp_args:Nx #1#2->\use:x {\exp_not:N #1{#2}}
#1<-\__kernel_file_input_push:n 
#2<-\tl_to_str:N \@currname .\tl_to_str:N \@currext 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__kernel_file_input_push:n {\tl_to_str:N \@currname .\tl_to_str
:N \@currext }

\tl_to_str:N #1->\__kernel_tl_to_str:w \exp_after:wN {#1}
#1<-\@currname 

\@currname ->

\tl_to_str:N #1->\__kernel_tl_to_str:w \exp_after:wN {#1}
#1<-\@currext 

\@currext ->

\l__exp_internal_tl ->\__kernel_file_input_push:n {.}

\__kernel_file_input_push:n #1->\seq_gpush:Nx \g__file_stack_seq {{\g_file_curr
_dir_str }{\g_file_curr_name_str }{\g_file_curr_ext_str }}\file_parse_full_name
:nNNN {#1}\l__file_dir_str \l__file_name_str \l__file_ext_str \str_gset_eq:NN \
g_file_curr_dir_str \l__file_dir_str \str_gset_eq:NN \g_file_curr_name_str \l__
file_name_str \str_gset_eq:NN \g_file_curr_ext_str \l__file_ext_str 
#1<-.

\seq_gpush:Nx ->\exp_args:NNx \seq_gput_left:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\seq_gput_left:Nn 
#2<-\g__file_stack_seq 
#3<-{\g_file_curr_dir_str }{\g_file_curr_name_str }{\g_file_curr_ext_str }

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \seq_gput_left:Nn \exp_not:N \g__file_stack_seq {{\g_file_curr_d
ir_str }{\g_file_curr_name_str }{\g_file_curr_ext_str }}

\g_file_curr_dir_str ->

\g_file_curr_name_str ->tl2022_rerun

\g_file_curr_ext_str ->

\l__exp_internal_tl ->\seq_gput_left:Nn \g__file_stack_seq {{}{tl2022_rerun}{}}

\seq_gput_left:Nn #1#2->\__kernel_tl_gset:Nx #1{\exp_not:n {\s__seq \__seq_item
:n {#2}}\exp_not:f {\exp_after:wN \__seq_put_left_aux:w #1}}
#1<-\g__file_stack_seq 
#2<-{}{tl2022_rerun}{}

\exp_not:f #1->\__kernel_exp_not:w \exp_after:wN {\exp:w \exp_end_continue_f:w 
#1}
#1<-\exp_after:wN \__seq_put_left_aux:w \g__file_stack_seq 

\exp_end_continue_f:w ->`^^@

\g__file_stack_seq ->\s__seq 

\__seq_put_left_aux:w \s__seq ->\exp_stop_f: 

\file_parse_full_name:nNNN #1#2#3#4->\file_parse_full_name_apply:nN {#1}\__file
_full_name_assign:nnnNNN #2#3#4
#1<-.
#2<-\l__file_dir_str 
#3<-\l__file_name_str 
#4<-\l__file_ext_str 

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-.

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {.}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-.

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {.}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {.}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-.

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=. 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-.

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-.

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-.

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{.}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-.

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-.
#2<-
#3<-
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {.\s__file_stop }\__file_name_trim_spaces_aux:n 
#2<-\tl_trim_spaces:n {.}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-.

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: .

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: .\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: .\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: .\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: .
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-.

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-.
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}..\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/.}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-
#3<-.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {}{\__file_parse_full_name_tidy:nnnN {
}{}}{\__file_parse_full_name_tidy:nnnN {.}{}}}{\__file_parse_full_name_tidy:nnn
N {}{.}}
#2<-\__file_parse_full_name_base:nw {.}.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.
#2<-
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.}{\tl_if_empty:nTF {}{\__file_parse_full_name_tidy:nnnN 
{}{}}{\__file_parse_full_name_tidy:nnnN {.}{}}}{\__file_parse_full_name_tidy:nn
nN {.}{.}}
#2<-\__file_parse_full_name_base:nw {..}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_parse_f
ull_name_tidy:nnnN {.}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.}{.}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.
#2<-.
#3<-
#4<-\__file_full_name_assign:nnnNNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_assign:nnnNNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__file_full_name_assign:nnnNNN #1#2#3#4#5#6->\str_set:Nn #4{#1}\str_set:Nn #5{
#2}\str_set:Nn #6{#3}
#1<-
#2<-
#3<-.
#4<-\l__file_dir_str 
#5<-\l__file_name_str 
#6<-\l__file_ext_str 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\l__file_dir_str 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__file_dir_str 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\l__file_name_str 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__file_name_str 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\l__file_ext_str 
#2<-.

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__file_ext_str 
#2<-\tl_to_str:n {.}

\str_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g_file_curr_dir_str 
#2<-\l__file_dir_str 

\str_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g_file_curr_name_str 
#2<-\l__file_name_str 

\str_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g_file_curr_ext_str 
#2<-\l__file_ext_str 

\tl_put_left:Nx #1#2->\__kernel_tl_set:Nx #1{#2\__kernel_exp_not:w \exp_after:w
N {#1}}
#1<-\l__expl_status_stack_tl 
#2<-\bool_if:NTF \l__kernel_expl_bool {1}{0}

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\l__kernel_expl_bool 

\use_ii:nn #1#2->#2
#1<-1
#2<-0

\l__expl_status_stack_tl ->0

\ExplSyntaxOff ->

\@currname ->

\@currext ->

\@currnamestack ->

\@currpath ->

\@kernel@currpathstack ->

\@expl@push@filename@aux@@ #1#2#3->\__hook_curr_name_push:n {#3}\str_gset:Nx \g
_file_curr_name_str {#3}#1#2{#3}
#1<-\xdef 
#2<-\@currname 
#3<-\string@makeletter \reserved@a 

\__hook_curr_name_push:n #1->\exp_args:Nx \__hook_curr_name_push_aux:n {\__hook
_make_name:n {#1}}
#1<-\string@makeletter \reserved@a 

\exp_args:Nx #1#2->\use:x {\exp_not:N #1{#2}}
#1<-\__hook_curr_name_push_aux:n 
#2<-\__hook_make_name:n {\string@makeletter \reserved@a }

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__hook_curr_name_push_aux:n {\__hook_make_name:n {\string@makel
etter \reserved@a }}

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\string@makeletter \reserved@a 

\string@makeletter #1->\@expl@str@map@function@@NN #1\@string@makeletter 
#1<-\reserved@a 

\@expl@str@map@function@@NN ->\exp_args:No \str_map_function:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\str_map_function:nN 
#2<-\reserved@a 

\reserved@a ->l3backend-pdftex

\str_map_function:nN #1#2->\exp_after:wN \__str_map_function:w \exp_after:wN \_
_str_map_function:nn \exp_after:wN #2\__kernel_tl_to_str:w {#1}\q__str_recursio
n_tail ? \prg_break_point:Nn \str_map_break: {}
#1<-l3backend-pdftex
#2<-\@string@makeletter 

\__str_map_function:w #1 ->#1{ { }\__str_map_function:w }
#1<-\__str_map_function:nn \@string@makeletter l3backend-pdftex\q__str_recursio
n_tail ?

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-l

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-l

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-l

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`l}{11}
#2<-l

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`l
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`l

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-108
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-108
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cviii_tl ->l\or: l\or: l\or: l\or: \or: l\or: l\or: ll\or: {\or: l\or:
 l\or: l\or: l\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-3

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-3

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-3

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`3}{11}
#2<-3

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-b

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-b

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-b

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`b}{11}
#2<-b

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`b
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`b

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-98
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-98
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcviii_tl ->b\or: b\or: b\or: b\or: \or: b\or: b\or: bb\or: {\or: b\or
: b\or: b\or: b\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-a

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-a

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-a

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`a}{11}
#2<-a

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`a
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`a

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-97
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-97
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcvii_tl ->a\or: a\or: a\or: a\or: \or: a\or: a\or: aa\or: {\or: a\or:
 a\or: a\or: a\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-c

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-c

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-c

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`c}{11}
#2<-c

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`c
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`c

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-99
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-99
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcix_tl ->c\or: c\or: c\or: c\or: \or: c\or: c\or: cc\or: {\or: c\or: 
c\or: c\or: c\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-k

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-k

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-k

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`k}{11}
#2<-k

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`k
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`k

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-107
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-107
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cvii_tl ->k\or: k\or: k\or: k\or: \or: k\or: k\or: kk\or: {\or: k\or: 
k\or: k\or: k\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-n

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-n

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-n

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`n}{11}
#2<-n

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`n
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`n

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-110
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-110
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cx_tl ->n\or: n\or: n\or: n\or: \or: n\or: n\or: nn\or: {\or: n\or: n\
or: n\or: n\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<--

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<--

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<--

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`-}{11}
#2<--

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-p

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-p

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-p

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`p}{11}
#2<-p

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`p
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`p

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-112
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-112
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxii_tl ->p\or: p\or: p\or: p\or: \or: p\or: p\or: pp\or: {\or: p\or: 
p\or: p\or: p\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-f

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-f

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-f

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`f}{11}
#2<-f

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`f
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`f

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-102
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-102
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cii_tl ->f\or: f\or: f\or: f\or: \or: f\or: f\or: ff\or: {\or: f\or: f
\or: f\or: f\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-t

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-t

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-t

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`t}{11}
#2<-t

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`t
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`t

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-116
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-116
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxvi_tl ->t\or: t\or: t\or: t\or: \or: t\or: t\or: tt\or: {\or: t\or: 
t\or: t\or: t\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-x

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-x

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-x

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`x}{11}
#2<-x

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`x
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`x

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-120
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-120
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxx_tl ->x\or: x\or: x\or: x\or: \or: x\or: x\or: xx\or: {\or: x\or: x
\or: x\or: x\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-\q__str_recursion_tail 

\str_map_break: ->\prg_map_break:Nn \str_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\str_map_break: 
#2<-
#3<-\@string@makeletter \q__str_recursion_tail \__str_map_function:nn {\@string
@makeletter }?{ { }\__str_map_function:w }
#4<-\str_map_break: 
#5<-

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\str_map_break: 
#3<-

\__hook_make_name:w #1__hook ->
#1<-\

\l__exp_internal_tl ->\__hook_curr_name_push_aux:n {l3backend-pdftex}

\__hook_curr_name_push_aux:n #1->\tl_if_blank:nTF {#1}{\msg_error:nn {hooks}{no
-default-label}}{\str_if_eq:nnTF {#1}{top-level}{\msg_error:nnnnn {hooks}{set-t
op-level}{to}{PushDefaultHookLabel}{#1}}{\seq_gpush:NV \g__hook_name_stack_seq 
\g__hook_hook_curr_name_tl \tl_gset:Nn \g__hook_hook_curr_name_tl {#1}}}
#1<-l3backend-pdftex

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-l3backend-pdftex

\use_none:n #1->
#1<-l

\use_ii:nn #1#2->#2
#1<-\msg_error:nn {hooks}{no-default-label}
#2<-\str_if_eq:nnTF {l3backend-pdftex}{top-level}{\msg_error:nnnnn {hooks}{set-
top-level}{to}{PushDefaultHookLabel}{l3backend-pdftex}}{\seq_gpush:NV \g__hook_
name_stack_seq \g__hook_hook_curr_name_tl \tl_gset:Nn \g__hook_hook_curr_name_t
l {l3backend-pdftex}}

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-l3backend-pdftex
#2<-top-level

\use_ii:nn #1#2->#2
#1<-\msg_error:nnnnn {hooks}{set-top-level}{to}{PushDefaultHookLabel}{l3backend
-pdftex}
#2<-\seq_gpush:NV \g__hook_name_stack_seq \g__hook_hook_curr_name_tl \tl_gset:N
n \g__hook_hook_curr_name_tl {l3backend-pdftex}

\seq_gpush:NV ->\exp_args:NNV \seq_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\seq_gput_left:Nn 
#2<-\g__hook_name_stack_seq 
#3<-\g__hook_hook_curr_name_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\g__hook_hook_curr_name_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\g__hook_hook_curr_name_tl ->top-level

\seq_gput_left:Nn #1#2->\__kernel_tl_gset:Nx #1{\exp_not:n {\s__seq \__seq_item
:n {#2}}\exp_not:f {\exp_after:wN \__seq_put_left_aux:w #1}}
#1<-\g__hook_name_stack_seq 
#2<-top-level

\exp_not:f #1->\__kernel_exp_not:w \exp_after:wN {\exp:w \exp_end_continue_f:w 
#1}
#1<-\exp_after:wN \__seq_put_left_aux:w \g__hook_name_stack_seq 

\exp_end_continue_f:w ->`^^@

\g__hook_name_stack_seq ->\s__seq 

\__seq_put_left_aux:w \s__seq ->\exp_stop_f: 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_hook_curr_name_tl 
#2<-l3backend-pdftex

\str_gset:Nx ->\exp_args:NNx \str_gset:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\str_gset:Nn 
#2<-\g_file_curr_name_str 
#3<-\string@makeletter \reserved@a 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \str_gset:Nn \exp_not:N \g_file_curr_name_str {\string@makelette
r \reserved@a }

\string@makeletter #1->\@expl@str@map@function@@NN #1\@string@makeletter 
#1<-\reserved@a 

\@expl@str@map@function@@NN ->\exp_args:No \str_map_function:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\str_map_function:nN 
#2<-\reserved@a 

\reserved@a ->l3backend-pdftex

\str_map_function:nN #1#2->\exp_after:wN \__str_map_function:w \exp_after:wN \_
_str_map_function:nn \exp_after:wN #2\__kernel_tl_to_str:w {#1}\q__str_recursio
n_tail ? \prg_break_point:Nn \str_map_break: {}
#1<-l3backend-pdftex
#2<-\@string@makeletter 

\__str_map_function:w #1 ->#1{ { }\__str_map_function:w }
#1<-\__str_map_function:nn \@string@makeletter l3backend-pdftex\q__str_recursio
n_tail ?

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-l

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-l

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-l

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`l}{11}
#2<-l

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`l
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`l

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-108
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-108
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cviii_tl ->l\or: l\or: l\or: l\or: \or: l\or: l\or: ll\or: {\or: l\or:
 l\or: l\or: l\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-3

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-3

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-3

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`3}{11}
#2<-3

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-b

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-b

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-b

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`b}{11}
#2<-b

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`b
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`b

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-98
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-98
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcviii_tl ->b\or: b\or: b\or: b\or: \or: b\or: b\or: bb\or: {\or: b\or
: b\or: b\or: b\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-a

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-a

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-a

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`a}{11}
#2<-a

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`a
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`a

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-97
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-97
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcvii_tl ->a\or: a\or: a\or: a\or: \or: a\or: a\or: aa\or: {\or: a\or:
 a\or: a\or: a\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-c

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-c

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-c

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`c}{11}
#2<-c

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`c
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`c

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-99
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-99
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcix_tl ->c\or: c\or: c\or: c\or: \or: c\or: c\or: cc\or: {\or: c\or: 
c\or: c\or: c\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-k

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-k

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-k

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`k}{11}
#2<-k

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`k
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`k

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-107
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-107
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cvii_tl ->k\or: k\or: k\or: k\or: \or: k\or: k\or: kk\or: {\or: k\or: 
k\or: k\or: k\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-n

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-n

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-n

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`n}{11}
#2<-n

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`n
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`n

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-110
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-110
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cx_tl ->n\or: n\or: n\or: n\or: \or: n\or: n\or: nn\or: {\or: n\or: n\
or: n\or: n\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<--

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<--

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<--

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`-}{11}
#2<--

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-p

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-p

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-p

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`p}{11}
#2<-p

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`p
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`p

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-112
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-112
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxii_tl ->p\or: p\or: p\or: p\or: \or: p\or: p\or: pp\or: {\or: p\or: 
p\or: p\or: p\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-f

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-f

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-f

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`f}{11}
#2<-f

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`f
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`f

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-102
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-102
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cii_tl ->f\or: f\or: f\or: f\or: \or: f\or: f\or: ff\or: {\or: f\or: f
\or: f\or: f\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-t

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-t

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-t

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`t}{11}
#2<-t

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`t
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`t

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-116
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-116
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxvi_tl ->t\or: t\or: t\or: t\or: \or: t\or: t\or: tt\or: {\or: t\or: 
t\or: t\or: t\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-x

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-x

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-x

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`x}{11}
#2<-x

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`x
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`x

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-120
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-120
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxx_tl ->x\or: x\or: x\or: x\or: \or: x\or: x\or: xx\or: {\or: x\or: x
\or: x\or: x\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-\q__str_recursion_tail 

\str_map_break: ->\prg_map_break:Nn \str_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\str_map_break: 
#2<-
#3<-\@string@makeletter \q__str_recursion_tail \__str_map_function:nn {\@string
@makeletter }?{ { }\__str_map_function:w }
#4<-\str_map_break: 
#5<-

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\str_map_break: 
#3<-

\l__exp_internal_tl ->\str_gset:Nn \g_file_curr_name_str {l3backend-pdftex}

\str_gset:Nn #1#2->\tl_gset:Nx #1{\tl_to_str:n {#2}}
#1<-\g_file_curr_name_str 
#2<-l3backend-pdftex

\tl_gset:Nx #1#2->\__kernel_tl_gset:Nx #1{#2}
#1<-\g_file_curr_name_str 
#2<-\tl_to_str:n {l3backend-pdftex}

\string@makeletter #1->\@expl@str@map@function@@NN #1\@string@makeletter 
#1<-\reserved@a 

\@expl@str@map@function@@NN ->\exp_args:No \str_map_function:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\str_map_function:nN 
#2<-\reserved@a 

\reserved@a ->l3backend-pdftex

\str_map_function:nN #1#2->\exp_after:wN \__str_map_function:w \exp_after:wN \_
_str_map_function:nn \exp_after:wN #2\__kernel_tl_to_str:w {#1}\q__str_recursio
n_tail ? \prg_break_point:Nn \str_map_break: {}
#1<-l3backend-pdftex
#2<-\@string@makeletter 

\__str_map_function:w #1 ->#1{ { }\__str_map_function:w }
#1<-\__str_map_function:nn \@string@makeletter l3backend-pdftex\q__str_recursio
n_tail ?

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-l

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-l

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-l

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`l}{11}
#2<-l

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`l
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`l

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-108
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-108
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cviii_tl ->l\or: l\or: l\or: l\or: \or: l\or: l\or: ll\or: {\or: l\or:
 l\or: l\or: l\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-3

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-3

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-3

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`3}{11}
#2<-3

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-b

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-b

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-b

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`b}{11}
#2<-b

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`b
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`b

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-98
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-98
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcviii_tl ->b\or: b\or: b\or: b\or: \or: b\or: b\or: bb\or: {\or: b\or
: b\or: b\or: b\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-a

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-a

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-a

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`a}{11}
#2<-a

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`a
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`a

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-97
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-97
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcvii_tl ->a\or: a\or: a\or: a\or: \or: a\or: a\or: aa\or: {\or: a\or:
 a\or: a\or: a\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-c

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-c

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-c

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`c}{11}
#2<-c

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`c
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`c

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-99
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-99
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcix_tl ->c\or: c\or: c\or: c\or: \or: c\or: c\or: cc\or: {\or: c\or: 
c\or: c\or: c\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-k

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-k

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-k

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`k}{11}
#2<-k

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`k
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`k

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-107
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-107
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cvii_tl ->k\or: k\or: k\or: k\or: \or: k\or: k\or: kk\or: {\or: k\or: 
k\or: k\or: k\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-n

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-n

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-n

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`n}{11}
#2<-n

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`n
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`n

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-110
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-110
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cx_tl ->n\or: n\or: n\or: n\or: \or: n\or: n\or: nn\or: {\or: n\or: n\
or: n\or: n\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<--

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<--

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<--

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`-}{11}
#2<--

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-p

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-p

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-p

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`p}{11}
#2<-p

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`p
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`p

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-112
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-112
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxii_tl ->p\or: p\or: p\or: p\or: \or: p\or: p\or: pp\or: {\or: p\or: 
p\or: p\or: p\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-f

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-f

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-f

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`f}{11}
#2<-f

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`f
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`f

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-102
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-102
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cii_tl ->f\or: f\or: f\or: f\or: \or: f\or: f\or: ff\or: {\or: f\or: f
\or: f\or: f\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-t

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-t

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-t

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`t}{11}
#2<-t

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`t
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`t

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-116
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-116
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxvi_tl ->t\or: t\or: t\or: t\or: \or: t\or: t\or: tt\or: {\or: t\or: 
t\or: t\or: t\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-x

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-x

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-x

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`x}{11}
#2<-x

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`x
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`x

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-120
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-120
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxx_tl ->x\or: x\or: x\or: x\or: \or: x\or: x\or: xx\or: {\or: x\or: x
\or: x\or: x\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-\q__str_recursion_tail 

\str_map_break: ->\prg_map_break:Nn \str_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\str_map_break: 
#2<-
#3<-\@string@makeletter \q__str_recursion_tail \__str_map_function:nn {\@string
@makeletter }?{ { }\__str_map_function:w }
#4<-\str_map_break: 
#5<-

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\str_map_break: 
#3<-

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@currext 
#2<-\@currname 

\@currname ->l3backend-pdftex

\@currext ->def

\@secondoftwo #1#2->#2
#1<-\@ifundefined {opt@handler@\@currname .\@currext } {\@onefilewithoptions@cl
ashchk {}} {\expandafter \protected@edef \csname opt@\@currname .\@currext \end
csname {\zap@space  \@empty }\@namedef {@raw@opt@\@currname .\@currext }{}\@nam
euse {opt@handler@\@currname .\@currext }}
#2<-\makeatletter \@reset@ptions \IfFileExists {\@currpath \@currname .\@currex
t }{}{\@missing@onefilewithoptions {}}\ifx \@currname \@empty \expandafter \@go
bble \else \@disable@packageload@do {\@currname .\@currext }{\@expl@@@filehook@
file@push@@ \set@curr@file {\@currpath \@currname .\@currext }\@filehook@set@Cu
rrentFile \expandafter \@swaptwoargs \expandafter {\expandafter {\@currpkg@reqd
 }}{\edef \@currpkg@reqd {\@currname .\@currext }\ifx \CurrentFile \CurrentFile
Used \else \filename@parse \@curr@file \edef \@currpath {\string@makeletter \fi
lename@area }\edef \@currname {\string@makeletter \filename@base }\edef \@curre
xt {\string@makeletter \filename@ext }\fi \load@onefile@withoptions {}\def \@cu
rrpkg@reqd }\@expl@@@filehook@file@pop@@ }\expandafter \@firstofone \fi 

\makeatletter ->\protect \makeatletter  

\makeatletter  ->\catcode `\@11\relax 

\@reset@ptions ->\global \ifx \@currext \@clsextension \let \default@ds \Option
NotUsed \else \let \default@ds \@unknownoptionerror \fi \global \let \ds@ \@emp
ty \global \let \@declaredoptions \@empty 

\IfFileExists ->\protect \IfFileExists  

\IfFileExists  #1->\set@curr@file {#1}\expandafter \IfFileExists@ \expandafter 
{\@curr@file }
#1<-\@currpath \@currname .\@currext 

\set@curr@file ->\begingroup \set@curr@file@aux 

\set@curr@file@aux #1->\escapechar \m@ne \let \protect \string \edef ~{\string 
~}\expandafter \def \csname \expandafter \endcsname \expandafter {\csname \endc
sname }\@expl@@@filehook@if@no@extension@@nTF {#1}{\@tempswatrue }{\@tempswafal
se }\@kernel@make@file@csname \@curr@file \@expl@@@filehook@resolve@file@subst@
@w {#1}\@expl@@@filehook@if@file@replaced@@TF {\@kernel@make@file@csname \@curr
@file@reqd \@expl@@@filehook@normalize@file@name@@w {#1}\if@tempswa \@expl@@@fi
lehook@drop@extension@@N \@curr@file@reqd \fi }{\if@tempswa \@expl@@@filehook@d
rop@extension@@N \@curr@file \fi \global \let \@curr@file@reqd \@curr@file }\@e
xpl@@@filehook@clear@replacement@flag@@ \endgroup 
#1<-\@currpath \@currname .\@currext 

@expl@@@filehook@if@no@extension@@nTF #1->exp_args:Ne tl_if_empty:nTF {file_par
se_full_name_apply:nN {#1}use_iii:nnn }
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-tl_if_empty:nTF 
#2<-file_parse_full_name_apply:nN {@currpath @currname .@currext }use_iii:nnn 

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {@currpath @currname .@currext }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrname .@currext }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currname .@currext }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currname .@currext 

@currpath ->

@currname ->l3backend-pdftex

@currext ->def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-use_iii:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-use_iii:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

use_iii:nnn #1#2#3->#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.def

use_ii:nn #1#2->#2
#1<-@tempswatrue 
#2<-@tempswafalse 

@tempswafalse ->let if@tempswa iffalse 

@kernel@make@file@csname #1#2#3->xdef #1{expandafter @set@curr@file@aux csname 
expandafter #2@firstofone #3@nil endcsname }
#1<-@curr@file 
#2<-@expl@@@filehook@resolve@file@subst@@w 
#3<-@currpath @currname .@currext 

@firstofone #1->#1
#1<-@currpath 

@expl@@@filehook@resolve@file@subst@@w #1@nil ->__filehook_file_parse_full_name
:nN {#1}__filehook_file_subst_begin:nnn 
#1<-@currpath @currname .@currext 

__filehook_file_parse_full_name:nN #1->exp_args:Nf file_parse_full_name_apply:n
N {exp_args:Nf __filehook_full_name:nn {file_full_name:n {#1}}{#1}}
#1<-@currpath @currname .@currext 

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-file_parse_full_name_apply:nN 
#2<-exp_args:Nf __filehook_full_name:nn {file_full_name:n {@currpath @currname 
.@currext }}{@currpath @currname .@currext }

exp_end_continue_f:w ->`^^@

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-__filehook_full_name:nn 
#2<-file_full_name:n {@currpath @currname .@currext }

exp_end_continue_f:w ->`^^@

file_full_name:n #1->exp_args:Ne __file_full_name:n {__kernel_file_name_sanitiz
e:n {#1}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_full_name:n 
#2<-__kernel_file_name_sanitize:n {@currpath @currname .@currext }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrname .@currext }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currname .@currext }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currname .@currext 

@currpath ->

@currname ->l3backend-pdftex

@currext ->def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_full_name:n #1->tl_if_blank:nF {#1}{exp_args:Nne __file_full_name_aux:nn
 {#1}{__file_size:n {#1}}}
#1<-l3backend-pdftex.def

tl_if_blank:nF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none:
n #1?}scan_stop: __prg_F_true:w fi: use:n 
#1<-l3backend-pdftex.def

use_none:n #1->
#1<-l

use:n #1->#1
#1<-exp_args:Nne __file_full_name_aux:nn {l3backend-pdftex.def}{__file_size:n {
l3backend-pdftex.def}}

exp_args:Nne #1#2#3->tex_expanded:D {exp_not:N #1{exp_not:n {#2}}{__kernel_exp_
not:w tex_expanded:D {{#3}}}}
#1<-__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-__file_size:n {l3backend-pdftex.def}

__file_full_name_aux:nn #1#2->tl_if_blank:nTF {#2}{seq_map_tokens:Nn l_file_sea
rch_path_seq {__file_full_name_aux:Nnn seq_map_break:n {#1}}cs_if_exist:NT inpu
t@path {tl_map_tokens:Nn input@path {__file_full_name_aux:Nnn tl_map_break:n {#
1}}}__file_name_end: }{__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

tl_if_blank:nTF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none
:n #1?}scan_stop: __prg_TF_true:w fi: use_ii:nn 
#1<-30429

use_none:n #1->
#1<-3

use_ii:nn #1#2->#2
#1<-seq_map_tokens:Nn l_file_search_path_seq {__file_full_name_aux:Nnn seq_map_
break:n {l3backend-pdftex.def}}cs_if_exist:NT input@path {tl_map_tokens:Nn inpu
t@path {__file_full_name_aux:Nnn tl_map_break:n {l3backend-pdftex.def}}}__file_
name_end: 
#2<-__file_ext_check:nn {l3backend-pdftex.def}{30429}

__file_ext_check:nn #1#2->__file_ext_check:nnw {#2}{/}#1/q__file_nil /s__file_s
top 
#1<-l3backend-pdftex.def
#2<-30429

__file_ext_check:nnw #1#2#3/#4/#5s__file_stop ->__file_quark_if_nil:nTF {#4}{ex
p_args:No __file_ext_check:nnnw {use_none:n #2}{#1}{#3}#3.q__file_nil .s__file_
stop }{__file_ext_check:nnw {#1}{#2#3/}#4/#5s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-q__file_nil 
#5<-

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-q__file_nil 

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}q__file_nil {}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!q__file_nil ?

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-exp_args:No __file_ext_check:nnnw {use_none:n /}{30429}{l3backend-pdftex.de
f}l3backend-pdftex.def.q__file_nil .s__file_stop 
#2<-__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}q__file_nil /s__file_st
op 

exp_args:No #1#2->exp_after:wN #1exp_after:wN {#2}
#1<-__file_ext_check:nnnw 
#2<-use_none:n /

use_none:n #1->
#1<-/

__file_ext_check:nnnw #1#2#3#4.#5.#6s__file_stop ->__file_quark_if_nil:nTF {#5}
{__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{30429
}
#2<-l3backend-pdftex.def

__filehook_full_name:nn #1#2->tl_if_empty:nTF {#1}{tl_trim_spaces:n {#2}}{tl_tr
im_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-@currpath @currname .@currext 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-tl_trim_spaces:n {@currpath @currname .@currext }
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {l3backend-pdftex.def}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {l3backend-pdf
tex.def}}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {l3backend-pdftex.def}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-l3backend-pdftex.def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-__filehook_file_subst_begin:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-__filehook_file_subst_begin:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

__filehook_file_subst_begin:nnn #1#2#3->__filehook_file_subst_tortoise_hare:nn 
{#2#3}{#2#3}{__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-l3backend-pdftex
#3<-.def

__filehook_file_subst_tortoise_hare:nn #1#2#3->cs_if_exist:cTF {@file-subst@#2}
{flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_rep
laced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@#2}}{__filehook_file_sub
st_loop:cc {@file-subst@#1}{@file-subst@use:c {@file-subst@#2}}}{use:c {@file-s
ubst@#2}}}{#3}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def
#3<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

cs_if_exist:cTF #1->if_cs_exist:w #1cs_end: exp_after:wN use_i:nn else: exp_aft
er:wN use_ii:nn fi: {exp_after:wN if_meaning:w cs:w #1cs_end: scan_stop: prg_re
turn_false: else: prg_return_true: fi: }prg_return_false: exp_end: 
#1<-@file-subst@l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-exp_after:wN if_meaning:w cs:w @file-subst@l3backend-pdftex.defcs_end: scan
_stop: prg_return_false: else: prg_return_true: fi: 
#2<-prg_return_false: 

prg_return_false: ->exp_after:wN use_ii:nn exp:w 

use_ii:nn #1#2->#2
#1<-flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_
replaced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@l3backend-pdftex.def}
}{__filehook_file_subst_loop:cc {@file-subst@l3backend-pdftex.def}{@file-subst@
use:c {@file-subst@l3backend-pdftex.def}}}{use:c {@file-subst@l3backend-pdftex.
def}}
#2<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

__filehook_file_name_compose:nnn #1#2#3->tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-/

@set@curr@file@aux #1->expandafter ifx csname endcsname #1.texelse string #1fi 
#1<-l3backend-pdftex.def 

@expl@@@filehook@if@file@replaced@@TF #1#2->flag_if_raised:nTF {__filehook_file
_replaced}{#1}{#2}
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currname .@currext }if@tempswa @expl@@@filehook@drop@extensio
n@@N @curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

flag_if_raised:nTF #1->if_cs_exist:w flag #1 0cs_end: __prg_TF_true:w fi: use_i
i:nn 
#1<-__filehook_file_replaced

use_ii:nn #1#2->#2
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currname .@currext }if@tempswa @expl@@@filehook@drop@extensio
n@@N @curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

@expl@@@filehook@clear@replacement@flag@@ ->flag_clear:n {__filehook_file_repla
ced}

flag_clear:n #1->__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

__flag_clear:wn #1;#2->if_cs_exist:w flag #2 #1cs_end: cs_set_eq:cN {flag #2 #1
}tex_undefined:D exp_after:wN __flag_clear:wn int_value:w int_eval:w 1+#1else: 
use_i:nnn fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

use_i:nnn #1#2#3->#1
#1<-fi: 
#2<-;
#3<-__filehook_file_replaced

\@curr@file ->l3backend-pdftex.def

\IfFileExists@ #1#2#3->\openin \@inputcheck "#1" \ifeof \@inputcheck \ifx \inpu
t@path \@undefined \let \reserved@a \@secondoftwo \else \def \reserved@a {\@iff
ileonpath {#1}}\fi \else \closein \@inputcheck \edef \@filef@und {"#1" }\let \r
eserved@a \@firstoftwo \fi \expandafter \def \expandafter \reserved@a \expandaf
ter {\reserved@a {#2}{#3}}\reserved@a 
#1<-l3backend-pdftex.def
#2<-
#3<-\@missing@onefilewithoptions {}

\reserved@a #1#2->#1
#1<-
#2<-\@missing@onefilewithoptions {}

\reserved@a ->

\@disable@packageload@do #1#2->\@ifundefined {@pkg-disable@#1}{#2}{\@nameuse {@
pkg-disable@#1}\@latex@info {Package '#1' has been disabled.\MessageBreak Load 
request ignored}\expandafter \@gobbletwo }
#1<-\@currname .\@currext 
#2<-\@expl@@@filehook@file@push@@ \set@curr@file {\@currpath \@currname .\@curr
ext }\@filehook@set@CurrentFile \expandafter \@swaptwoargs \expandafter {\expan
dafter {\@currpkg@reqd }}{\edef \@currpkg@reqd {\@currname .\@currext }\ifx \Cu
rrentFile \CurrentFileUsed \else \filename@parse \@curr@file \edef \@currpath {
\string@makeletter \filename@area }\edef \@currname {\string@makeletter \filena
me@base }\edef \@currext {\string@makeletter \filename@ext }\fi \load@onefile@w
ithoptions {}\def \@currpkg@reqd }\@expl@@@filehook@file@pop@@ 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-@pkg-disable@\@currname .\@currext 

\@currname ->l3backend-pdftex

\@currext ->def

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-@pkg-disable@\@currname .\@currext 
#2<-\@expl@@@filehook@file@push@@ \set@curr@file {\@currpath \@currname .\@curr
ext }\@filehook@set@CurrentFile \expandafter \@swaptwoargs \expandafter {\expan
dafter {\@currpkg@reqd }}{\edef \@currpkg@reqd {\@currname .\@currext }\ifx \Cu
rrentFile \CurrentFileUsed \else \filename@parse \@curr@file \edef \@currpath {
\string@makeletter \filename@area }\edef \@currname {\string@makeletter \filena
me@base }\edef \@currext {\string@makeletter \filename@ext }\fi \load@onefile@w
ithoptions {}\def \@currpkg@reqd }\@expl@@@filehook@file@pop@@ 
#3<-\@nameuse {@pkg-disable@\@currname .\@currext }\@latex@info {Package '\@cur
rname .\@currext ' has been disabled.\MessageBreak Load request ignored}\expand
after \@gobbletwo 

\@expl@@@filehook@file@push@@ ->\seq_gpush:Nx \g__filehook_input_file_seq {{\Cu
rrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\seq_gpush:Nx ->\exp_args:NNx \seq_gput_left:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\seq_gput_left:Nn 
#2<-\g__filehook_input_file_seq 
#3<-{\CurrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile 
}

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \seq_gput_left:Nn \exp_not:N \g__filehook_input_file_seq {{\Curr
entFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\CurrentFilePathUsed ->

\CurrentFileUsed ->

\CurrentFilePath ->

\CurrentFile ->

\l__exp_internal_tl ->\seq_gput_left:Nn \g__filehook_input_file_seq {{}{}{}{}}

\seq_gput_left:Nn #1#2->\__kernel_tl_gset:Nx #1{\exp_not:n {\s__seq \__seq_item
:n {#2}}\exp_not:f {\exp_after:wN \__seq_put_left_aux:w #1}}
#1<-\g__filehook_input_file_seq 
#2<-{}{}{}{}

\exp_not:f #1->\__kernel_exp_not:w \exp_after:wN {\exp:w \exp_end_continue_f:w 
#1}
#1<-\exp_after:wN \__seq_put_left_aux:w \g__filehook_input_file_seq 

\exp_end_continue_f:w ->`^^@

\g__filehook_input_file_seq ->\s__seq 

\__seq_put_left_aux:w \s__seq ->\exp_stop_f: 

\set@curr@file ->\begingroup \set@curr@file@aux 

\set@curr@file@aux #1->\escapechar \m@ne \let \protect \string \edef ~{\string 
~}\expandafter \def \csname \expandafter \endcsname \expandafter {\csname \endc
sname }\@expl@@@filehook@if@no@extension@@nTF {#1}{\@tempswatrue }{\@tempswafal
se }\@kernel@make@file@csname \@curr@file \@expl@@@filehook@resolve@file@subst@
@w {#1}\@expl@@@filehook@if@file@replaced@@TF {\@kernel@make@file@csname \@curr
@file@reqd \@expl@@@filehook@normalize@file@name@@w {#1}\if@tempswa \@expl@@@fi
lehook@drop@extension@@N \@curr@file@reqd \fi }{\if@tempswa \@expl@@@filehook@d
rop@extension@@N \@curr@file \fi \global \let \@curr@file@reqd \@curr@file }\@e
xpl@@@filehook@clear@replacement@flag@@ \endgroup 
#1<-\@currpath \@currname .\@currext 

@expl@@@filehook@if@no@extension@@nTF #1->exp_args:Ne tl_if_empty:nTF {file_par
se_full_name_apply:nN {#1}use_iii:nnn }
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-tl_if_empty:nTF 
#2<-file_parse_full_name_apply:nN {@currpath @currname .@currext }use_iii:nnn 

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {@currpath @currname .@currext }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrname .@currext }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currname .@currext }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currname .@currext 

@currpath ->

@currname ->l3backend-pdftex

@currext ->def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-use_iii:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-use_iii:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

use_iii:nnn #1#2#3->#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.def

use_ii:nn #1#2->#2
#1<-@tempswatrue 
#2<-@tempswafalse 

@tempswafalse ->let if@tempswa iffalse 

@kernel@make@file@csname #1#2#3->xdef #1{expandafter @set@curr@file@aux csname 
expandafter #2@firstofone #3@nil endcsname }
#1<-@curr@file 
#2<-@expl@@@filehook@resolve@file@subst@@w 
#3<-@currpath @currname .@currext 

@firstofone #1->#1
#1<-@currpath 

@expl@@@filehook@resolve@file@subst@@w #1@nil ->__filehook_file_parse_full_name
:nN {#1}__filehook_file_subst_begin:nnn 
#1<-@currpath @currname .@currext 

__filehook_file_parse_full_name:nN #1->exp_args:Nf file_parse_full_name_apply:n
N {exp_args:Nf __filehook_full_name:nn {file_full_name:n {#1}}{#1}}
#1<-@currpath @currname .@currext 

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-file_parse_full_name_apply:nN 
#2<-exp_args:Nf __filehook_full_name:nn {file_full_name:n {@currpath @currname 
.@currext }}{@currpath @currname .@currext }

exp_end_continue_f:w ->`^^@

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-__filehook_full_name:nn 
#2<-file_full_name:n {@currpath @currname .@currext }

exp_end_continue_f:w ->`^^@

file_full_name:n #1->exp_args:Ne __file_full_name:n {__kernel_file_name_sanitiz
e:n {#1}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_full_name:n 
#2<-__kernel_file_name_sanitize:n {@currpath @currname .@currext }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currname .@currext 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrname .@currext }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currname .@currext }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currname .@currext 

@currpath ->

@currname ->l3backend-pdftex

@currext ->def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_full_name:n #1->tl_if_blank:nF {#1}{exp_args:Nne __file_full_name_aux:nn
 {#1}{__file_size:n {#1}}}
#1<-l3backend-pdftex.def

tl_if_blank:nF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none:
n #1?}scan_stop: __prg_F_true:w fi: use:n 
#1<-l3backend-pdftex.def

use_none:n #1->
#1<-l

use:n #1->#1
#1<-exp_args:Nne __file_full_name_aux:nn {l3backend-pdftex.def}{__file_size:n {
l3backend-pdftex.def}}

exp_args:Nne #1#2#3->tex_expanded:D {exp_not:N #1{exp_not:n {#2}}{__kernel_exp_
not:w tex_expanded:D {{#3}}}}
#1<-__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-__file_size:n {l3backend-pdftex.def}

__file_full_name_aux:nn #1#2->tl_if_blank:nTF {#2}{seq_map_tokens:Nn l_file_sea
rch_path_seq {__file_full_name_aux:Nnn seq_map_break:n {#1}}cs_if_exist:NT inpu
t@path {tl_map_tokens:Nn input@path {__file_full_name_aux:Nnn tl_map_break:n {#
1}}}__file_name_end: }{__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

tl_if_blank:nTF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none
:n #1?}scan_stop: __prg_TF_true:w fi: use_ii:nn 
#1<-30429

use_none:n #1->
#1<-3

use_ii:nn #1#2->#2
#1<-seq_map_tokens:Nn l_file_search_path_seq {__file_full_name_aux:Nnn seq_map_
break:n {l3backend-pdftex.def}}cs_if_exist:NT input@path {tl_map_tokens:Nn inpu
t@path {__file_full_name_aux:Nnn tl_map_break:n {l3backend-pdftex.def}}}__file_
name_end: 
#2<-__file_ext_check:nn {l3backend-pdftex.def}{30429}

__file_ext_check:nn #1#2->__file_ext_check:nnw {#2}{/}#1/q__file_nil /s__file_s
top 
#1<-l3backend-pdftex.def
#2<-30429

__file_ext_check:nnw #1#2#3/#4/#5s__file_stop ->__file_quark_if_nil:nTF {#4}{ex
p_args:No __file_ext_check:nnnw {use_none:n #2}{#1}{#3}#3.q__file_nil .s__file_
stop }{__file_ext_check:nnw {#1}{#2#3/}#4/#5s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-q__file_nil 
#5<-

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-q__file_nil 

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}q__file_nil {}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!q__file_nil ?

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-exp_args:No __file_ext_check:nnnw {use_none:n /}{30429}{l3backend-pdftex.de
f}l3backend-pdftex.def.q__file_nil .s__file_stop 
#2<-__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}q__file_nil /s__file_st
op 

exp_args:No #1#2->exp_after:wN #1exp_after:wN {#2}
#1<-__file_ext_check:nnnw 
#2<-use_none:n /

use_none:n #1->
#1<-/

__file_ext_check:nnnw #1#2#3#4.#5.#6s__file_stop ->__file_quark_if_nil:nTF {#5}
{__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{30429
}
#2<-l3backend-pdftex.def

__filehook_full_name:nn #1#2->tl_if_empty:nTF {#1}{tl_trim_spaces:n {#2}}{tl_tr
im_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-@currpath @currname .@currext 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-tl_trim_spaces:n {@currpath @currname .@currext }
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {l3backend-pdftex.def}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {l3backend-pdf
tex.def}}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {l3backend-pdftex.def}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-l3backend-pdftex.def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-__filehook_file_subst_begin:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-__filehook_file_subst_begin:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

__filehook_file_subst_begin:nnn #1#2#3->__filehook_file_subst_tortoise_hare:nn 
{#2#3}{#2#3}{__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-l3backend-pdftex
#3<-.def

__filehook_file_subst_tortoise_hare:nn #1#2#3->cs_if_exist:cTF {@file-subst@#2}
{flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_rep
laced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@#2}}{__filehook_file_sub
st_loop:cc {@file-subst@#1}{@file-subst@use:c {@file-subst@#2}}}{use:c {@file-s
ubst@#2}}}{#3}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def
#3<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

cs_if_exist:cTF #1->if_cs_exist:w #1cs_end: exp_after:wN use_i:nn else: exp_aft
er:wN use_ii:nn fi: {exp_after:wN if_meaning:w cs:w #1cs_end: scan_stop: prg_re
turn_false: else: prg_return_true: fi: }prg_return_false: exp_end: 
#1<-@file-subst@l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-exp_after:wN if_meaning:w cs:w @file-subst@l3backend-pdftex.defcs_end: scan
_stop: prg_return_false: else: prg_return_true: fi: 
#2<-prg_return_false: 

prg_return_false: ->exp_after:wN use_ii:nn exp:w 

use_ii:nn #1#2->#2
#1<-flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_
replaced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@l3backend-pdftex.def}
}{__filehook_file_subst_loop:cc {@file-subst@l3backend-pdftex.def}{@file-subst@
use:c {@file-subst@l3backend-pdftex.def}}}{use:c {@file-subst@l3backend-pdftex.
def}}
#2<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

__filehook_file_name_compose:nnn #1#2#3->tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-/

@set@curr@file@aux #1->expandafter ifx csname endcsname #1.texelse string #1fi 
#1<-l3backend-pdftex.def 

@expl@@@filehook@if@file@replaced@@TF #1#2->flag_if_raised:nTF {__filehook_file
_replaced}{#1}{#2}
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currname .@currext }if@tempswa @expl@@@filehook@drop@extensio
n@@N @curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

flag_if_raised:nTF #1->if_cs_exist:w flag #1 0cs_end: __prg_TF_true:w fi: use_i
i:nn 
#1<-__filehook_file_replaced

use_ii:nn #1#2->#2
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currname .@currext }if@tempswa @expl@@@filehook@drop@extensio
n@@N @curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

@expl@@@filehook@clear@replacement@flag@@ ->flag_clear:n {__filehook_file_repla
ced}

flag_clear:n #1->__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

__flag_clear:wn #1;#2->if_cs_exist:w flag #2 #1cs_end: cs_set_eq:cN {flag #2 #1
}tex_undefined:D exp_after:wN __flag_clear:wn int_value:w int_eval:w 1+#1else: 
use_i:nnn fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

use_i:nnn #1#2#3->#1
#1<-fi: 
#2<-;
#3<-__filehook_file_replaced

\@filehook@set@CurrentFile ->\@expl@@@filehook@set@curr@file@@nNN {\@curr@file 
}\CurrentFileUsed \CurrentFilePathUsed \ifx \@curr@file@reqd \@curr@file \let \
CurrentFile \CurrentFileUsed \let \CurrentFilePath \CurrentFilePathUsed \else \
@expl@@@filehook@set@curr@file@@nNN {\@curr@file@reqd }\CurrentFile \CurrentFil
ePath \fi 

\@expl@@@filehook@set@curr@file@@nNN #1->\exp_args:Nf \__filehook_file_parse_fu
ll_name:nN {#1}\__filehook_set_curr_file_assign:nnnNN 
#1<-\@curr@file 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_file_parse_full_name:nN 
#2<-\@curr@file 

\exp_end_continue_f:w ->`^^@

\@curr@file ->l3backend-pdftex.def

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-l3backend-pdftex.def

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {l3backend-pdftex.
def}}{l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-l3backend-pdftex.def

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-l3backend-pdftex.def

\use_none:n #1->
#1<-l

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {l3backend-pdftex.def}{\__file_size:
n {l3backend-pdftex.def}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-\__file_size:n {l3backend-pdftex.def}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-30429

\use_none:n #1->
#1<-3

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {l3backend-pdftex.def}}\cs_if_exist:NT \input@path {\tl_map_tokens:
Nn \input@path {\__file_full_name_aux:Nnn \tl_map_break:n {l3backend-pdftex.def
}}}\__file_name_end: 
#2<-\__file_ext_check:nn {l3backend-pdftex.def}{30429}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-l3backend-pdftex.def
#2<-30429

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{30429}{l3backend-pdftex
.def}l3backend-pdftex.def.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}\q__file_nil /\s__file
_stop 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{3042
9}
#2<-l3backend-pdftex.def

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {l3backend-pdftex.def}
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-l3backend-pdftex.def

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}l3backend-pdftex.def.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/l3backend-pdftex.def}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-def.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {l3backend-pdftex}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{
\__file_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex}def.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.l3backend-pdftex}{\tl_if_empty:nTF {def}{\__file_parse_f
ull_name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.def}{}}}{\__file_p
arse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex.def}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.l3backend-pdftex

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {def}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.def}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-\__filehook_set_curr_file_assign:nnnNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_set_curr_file_assign:nnnNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .l3backend-pdftex\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_set_curr_file_assign:nnnNN #1#2#3#4#5->\str_set:Nn #5{#1}\str_set:N
n #4{#2#3}
#1<-
#2<-l3backend-pdftex
#3<-.def
#4<-\CurrentFileUsed 
#5<-\CurrentFilePathUsed 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFilePathUsed 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFileUsed 
#2<-l3backend-pdftex.def

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFileUsed 
#2<-\tl_to_str:n {l3backend-pdftex.def}

\@currpkg@reqd ->

\@swaptwoargs #1#2->#2#1
#1<-{}
#2<-\edef \@currpkg@reqd {\@currname .\@currext }\ifx \CurrentFile \CurrentFile
Used \else \filename@parse \@curr@file \edef \@currpath {\string@makeletter \fi
lename@area }\edef \@currname {\string@makeletter \filename@base }\edef \@curre
xt {\string@makeletter \filename@ext }\fi \load@onefile@withoptions {}\def \@cu
rrpkg@reqd 

\@currname ->l3backend-pdftex

\@currext ->def

\load@onefile@withoptions #1->\let \CurrentOption \@empty \@reset@ptions \def \
reserved@a {\@pass@ptions \@currext {#1}{\@currname }\expandafter \let \csname 
opt@\@currpkg@reqd \expandafter \endcsname \csname opt@\@currname .\@currext \e
ndcsname \expandafter \let \csname @raw@opt@\@currpkg@reqd \expandafter \endcsn
ame \csname @raw@opt@\@currname .\@currext \endcsname \global \expandafter \let
 \csname ver@\@currname .\@currext \endcsname \@empty \expandafter \let \csname
 \@currname .\@currext -h@@k\endcsname \@empty \ifx \@currext \@pkgextension \U
seHook {package/before}\UseOneTimeHook {package/\@currname /before}\else \ifx \
@currext \@clsextension \UseHook {class/before}\UseOneTimeHook {class/\@currnam
e /before}\fi \fi \InputIfFileExists {\@currpath \@currpkg@reqd }{}{\@latex@err
or {The \@cls@pkg \space \@currpkg@reqd \space failed to load}\@ehd }\expandaft
er \let \csname unprocessedoptions-\@currname .\@currext \endcsname \@@unproces
sedoptions \csname \@currname .\@currext -h@@k\endcsname \expandafter \let \csn
ame \@currname .\@currext -h@@k\endcsname \@undefined \ifx \@unprocessedoptions
 \relax \let \@unprocessedoptions \@undefined \else \csname unprocessedoptions-
\@currname .\@currext \endcsname \fi \expandafter \let \csname unprocessedoptio
ns-\@currname .\@currext \endcsname \@undefined \ifx \@currext \@pkgextension \
UseOneTimeHook {package/\@currname /after}\UseHook {package/after}\else \ifx \@
currext \@clsextension \UseOneTimeHook {class/\@currname /after}\UseHook {class
/after}\fi \fi }\@ifl@aded \@currext \@currname {}{\reserved@a }
#1<-

\@reset@ptions ->\global \ifx \@currext \@clsextension \let \default@ds \Option
NotUsed \else \let \default@ds \@unknownoptionerror \fi \global \let \ds@ \@emp
ty \global \let \@declaredoptions \@empty 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@currext 
#2<-\@currname 

\@currname ->l3backend-pdftex

\@currext ->def

\@secondoftwo #1#2->#2
#1<-
#2<-\reserved@a 

\reserved@a ->\@pass@ptions \@currext {}{\@currname }\expandafter \let \csname 
opt@\@currpkg@reqd \expandafter \endcsname \csname opt@\@currname .\@currext \e
ndcsname \expandafter \let \csname @raw@opt@\@currpkg@reqd \expandafter \endcsn
ame \csname @raw@opt@\@currname .\@currext \endcsname \global \expandafter \let
 \csname ver@\@currname .\@currext \endcsname \@empty \expandafter \let \csname
 \@currname .\@currext -h@@k\endcsname \@empty \ifx \@currext \@pkgextension \U
seHook {package/before}\UseOneTimeHook {package/\@currname /before}\else \ifx \
@currext \@clsextension \UseHook {class/before}\UseOneTimeHook {class/\@currnam
e /before}\fi \fi \InputIfFileExists {\@currpath \@currpkg@reqd }{}{\@latex@err
or {The \@cls@pkg \space \@currpkg@reqd \space failed to load}\@ehd }\expandaft
er \let \csname unprocessedoptions-\@currname .\@currext \endcsname \@@unproces
sedoptions \csname \@currname .\@currext -h@@k\endcsname \expandafter \let \csn
ame \@currname .\@currext -h@@k\endcsname \@undefined \ifx \@unprocessedoptions
 \relax \let \@unprocessedoptions \@undefined \else \csname unprocessedoptions-
\@currname .\@currext \endcsname \fi \expandafter \let \csname unprocessedoptio
ns-\@currname .\@currext \endcsname \@undefined \ifx \@currext \@pkgextension \
UseOneTimeHook {package/\@currname /after}\UseHook {package/after}\else \ifx \@
currext \@clsextension \UseOneTimeHook {class/\@currname /after}\UseHook {class
/after}\fi \fi 

\@pass@ptions #1#2#3->\@expl@@@filehook@set@curr@file@@nNN {\@expl@@@filehook@r
esolve@file@subst@@w #3.#1\@nil }\reserved@a \reserved@b \@expl@@@filehook@clea
r@replacement@flag@@ \expandafter \protected@xdef \csname opt@\reserved@a \endc
sname {\@ifundefined {opt@\reserved@a }\@empty {\csname opt@\reserved@a \endcsn
ame ,}\zap@space #2 \@empty }\expandafter \let \csname opt@#3.#1\expandafter \e
ndcsname \csname opt@\reserved@a \endcsname \@ifundefined {@raw@opt@#3.#1}{\exp
andafter \gdef \csname @raw@opt@#3.#1\expandafter \endcsname \expandafter {#2}}
{\expandafter \g@addto@macro \csname @raw@opt@#3.#1\expandafter \endcsname \exp
andafter {\expandafter ,#2}}
#1<-\@currext 
#2<-
#3<-\@currname 

\@expl@@@filehook@set@curr@file@@nNN #1->\exp_args:Nf \__filehook_file_parse_fu
ll_name:nN {#1}\__filehook_set_curr_file_assign:nnnNN 
#1<-\@expl@@@filehook@resolve@file@subst@@w \@currname .\@currext \@nil 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_file_parse_full_name:nN 
#2<-\@expl@@@filehook@resolve@file@subst@@w \@currname .\@currext \@nil 

\exp_end_continue_f:w ->`^^@

\@expl@@@filehook@resolve@file@subst@@w #1\@nil ->\__filehook_file_parse_full_n
ame:nN {#1}\__filehook_file_subst_begin:nnn 
#1<-\@currname .\@currext 

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-\@currname .\@currext 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {\@currname .\@cur
rext }}{\@currname .\@currext }

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {\@currname .\@currext }

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-\@currname .\@currext 

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {\@currname .\@currext }

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-\@currname .\@currext 

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {\@currname
 .\@currext }}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {\@currname .\@currext }

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-\@currname .\@currext 

\@currname ->l3backend-pdftex

\@currext ->def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-l3backend-pdftex.def

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-l3backend-pdftex.def

\use_none:n #1->
#1<-l

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {l3backend-pdftex.def}{\__file_size:
n {l3backend-pdftex.def}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-\__file_size:n {l3backend-pdftex.def}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-30429

\use_none:n #1->
#1<-3

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {l3backend-pdftex.def}}\cs_if_exist:NT \input@path {\tl_map_tokens:
Nn \input@path {\__file_full_name_aux:Nnn \tl_map_break:n {l3backend-pdftex.def
}}}\__file_name_end: 
#2<-\__file_ext_check:nn {l3backend-pdftex.def}{30429}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-l3backend-pdftex.def
#2<-30429

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{30429}{l3backend-pdftex
.def}l3backend-pdftex.def.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}\q__file_nil /\s__file
_stop 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{3042
9}
#2<-l3backend-pdftex.def

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-\@currname .\@currext 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {\@currname .\@currext }
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-l3backend-pdftex.def

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}l3backend-pdftex.def.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/l3backend-pdftex.def}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-def.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {l3backend-pdftex}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{
\__file_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex}def.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.l3backend-pdftex}{\tl_if_empty:nTF {def}{\__file_parse_f
ull_name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.def}{}}}{\__file_p
arse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex.def}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.l3backend-pdftex

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {def}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.def}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-\__filehook_file_subst_begin:nnn 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_file_subst_begin:nnn 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .l3backend-pdftex\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_file_subst_begin:nnn #1#2#3->\__filehook_file_subst_tortoise_hare:n
n {#2#3}{#2#3}{\__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-l3backend-pdftex
#3<-.def

\__filehook_file_subst_tortoise_hare:nn #1#2#3->\cs_if_exist:cTF {@file-subst@#
2}{\flag_if_raised:nF {__filehook_file_replaced}{\flag_raise:n {__filehook_file
_replaced}}\cs_if_exist:cTF {@file-subst@\use:c {@file-subst@#2}}{\__filehook_f
ile_subst_loop:cc {@file-subst@#1}{@file-subst@\use:c {@file-subst@#2}}}{\use:c
 {@file-subst@#2}}}{#3}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def
#3<-\__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

\cs_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-@file-subst@l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file-subst@l3backend-pdftex.def\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\flag_if_raised:nF {__filehook_file_replaced}{\flag_raise:n {__filehook_fil
e_replaced}}\cs_if_exist:cTF {@file-subst@\use:c {@file-subst@l3backend-pdftex.
def}}{\__filehook_file_subst_loop:cc {@file-subst@l3backend-pdftex.def}{@file-s
ubst@\use:c {@file-subst@l3backend-pdftex.def}}}{\use:c {@file-subst@l3backend-
pdftex.def}}
#2<-\__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

\__filehook_file_name_compose:nnn #1#2#3->\tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-l3backend-pdftex
#3<-.def

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-/

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-l3backend-pdftex.def

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {l3backend-pdftex.
def}}{l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-l3backend-pdftex.def

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-l3backend-pdftex.def

\use_none:n #1->
#1<-l

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {l3backend-pdftex.def}{\__file_size:
n {l3backend-pdftex.def}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-\__file_size:n {l3backend-pdftex.def}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-30429

\use_none:n #1->
#1<-3

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {l3backend-pdftex.def}}\cs_if_exist:NT \input@path {\tl_map_tokens:
Nn \input@path {\__file_full_name_aux:Nnn \tl_map_break:n {l3backend-pdftex.def
}}}\__file_name_end: 
#2<-\__file_ext_check:nn {l3backend-pdftex.def}{30429}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-l3backend-pdftex.def
#2<-30429

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{30429}{l3backend-pdftex
.def}l3backend-pdftex.def.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}\q__file_nil /\s__file
_stop 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{3042
9}
#2<-l3backend-pdftex.def

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {l3backend-pdftex.def}
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-l3backend-pdftex.def

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}l3backend-pdftex.def.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/l3backend-pdftex.def}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-def.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {l3backend-pdftex}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{
\__file_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex}def.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.l3backend-pdftex}{\tl_if_empty:nTF {def}{\__file_parse_f
ull_name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.def}{}}}{\__file_p
arse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex.def}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.l3backend-pdftex

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {def}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.def}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-\__filehook_set_curr_file_assign:nnnNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_set_curr_file_assign:nnnNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .l3backend-pdftex\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_set_curr_file_assign:nnnNN #1#2#3#4#5->\str_set:Nn #5{#1}\str_set:N
n #4{#2#3}
#1<-
#2<-l3backend-pdftex
#3<-.def
#4<-\reserved@a 
#5<-\reserved@b 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\reserved@b 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\reserved@b 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\reserved@a 
#2<-l3backend-pdftex.def

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\reserved@a 
#2<-\tl_to_str:n {l3backend-pdftex.def}

\@expl@@@filehook@clear@replacement@flag@@ ->\flag_clear:n {__filehook_file_rep
laced}

\flag_clear:n #1->\__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

\__flag_clear:wn #1;#2->\if_cs_exist:w flag #2 #1\cs_end: \cs_set_eq:cN {flag #
2 #1}\tex_undefined:D \exp_after:wN \__flag_clear:wn \int_value:w \int_eval:w 1
+#1\else: \use_i:nnn \fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

\use_i:nnn #1#2#3->#1
#1<-\fi: 
#2<-;
#3<-__filehook_file_replaced

\reserved@a ->l3backend-pdftex.def

\protected@xdef ->\let \@@protect \protect \let \protect \@unexpandable@protect
 \afterassignment \restore@protect \xdef 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-opt@\reserved@a 

\reserved@a ->l3backend-pdftex.def

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-opt@\reserved@a 

\reserved@a ->l3backend-pdftex.def

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\@secondoftwo 
#2<-\@empty 
#3<-\csname opt@\reserved@a \endcsname ,

\@empty ->

\zap@space #1 #2->#1\ifx #2\@empty \else \expandafter \zap@space \fi #2
#1<-
#2<-\@empty 

\@empty ->

\restore@protect ->\let \protect \@@protect 

\@currname ->l3backend-pdftex

\@currext ->def

\reserved@a ->l3backend-pdftex.def

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-@raw@opt@\@currname .\@currext 

\@currname ->l3backend-pdftex

\@currext ->def

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-@raw@opt@\@currname .\@currext 
#2<-\expandafter \gdef \csname @raw@opt@\@currname .\@currext \expandafter \end
csname \expandafter {}
#3<-\expandafter \g@addto@macro \csname @raw@opt@\@currname .\@currext \expanda
fter \endcsname \expandafter {\expandafter ,}

\@currname ->l3backend-pdftex

\@currext ->def

\@currpkg@reqd ->l3backend-pdftex.def

\@currname ->l3backend-pdftex

\@currext ->def

\@currpkg@reqd ->l3backend-pdftex.def

\@currname ->l3backend-pdftex

\@currext ->def

\@currname ->l3backend-pdftex

\@currext ->def

\@currname ->l3backend-pdftex

\@currext ->def

\InputIfFileExists ->\protect \InputIfFileExists  

\InputIfFileExists  #1#2->\IfFileExists {#1}{\@expl@@@filehook@file@push@@ \@fi
lehook@set@CurrentFile \expandafter \@swaptwoargs \expandafter {\expandafter \@
input@file@exists@with@hooks \expandafter {\@filef@und }}{#2}\@expl@@@filehook@
file@pop@@ }
#1<-\@currpath \@currpkg@reqd 
#2<-

\IfFileExists ->\protect \IfFileExists  

\IfFileExists  #1->\set@curr@file {#1}\expandafter \IfFileExists@ \expandafter 
{\@curr@file }
#1<-\@currpath \@currpkg@reqd 

\set@curr@file ->\begingroup \set@curr@file@aux 

\set@curr@file@aux #1->\escapechar \m@ne \let \protect \string \edef ~{\string 
~}\expandafter \def \csname \expandafter \endcsname \expandafter {\csname \endc
sname }\@expl@@@filehook@if@no@extension@@nTF {#1}{\@tempswatrue }{\@tempswafal
se }\@kernel@make@file@csname \@curr@file \@expl@@@filehook@resolve@file@subst@
@w {#1}\@expl@@@filehook@if@file@replaced@@TF {\@kernel@make@file@csname \@curr
@file@reqd \@expl@@@filehook@normalize@file@name@@w {#1}\if@tempswa \@expl@@@fi
lehook@drop@extension@@N \@curr@file@reqd \fi }{\if@tempswa \@expl@@@filehook@d
rop@extension@@N \@curr@file \fi \global \let \@curr@file@reqd \@curr@file }\@e
xpl@@@filehook@clear@replacement@flag@@ \endgroup 
#1<-\@currpath \@currpkg@reqd 

@expl@@@filehook@if@no@extension@@nTF #1->exp_args:Ne tl_if_empty:nTF {file_par
se_full_name_apply:nN {#1}use_iii:nnn }
#1<-@currpath @currpkg@reqd 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-tl_if_empty:nTF 
#2<-file_parse_full_name_apply:nN {@currpath @currpkg@reqd }use_iii:nnn 

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-@currpath @currpkg@reqd 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {@currpath @currpkg@reqd }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currpkg@reqd 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrpkg@reqd }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currpkg@reqd }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currpkg@reqd 

@currpath ->

@currpkg@reqd ->l3backend-pdftex.def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-use_iii:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-use_iii:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

use_iii:nnn #1#2#3->#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.def

use_ii:nn #1#2->#2
#1<-@tempswatrue 
#2<-@tempswafalse 

@tempswafalse ->let if@tempswa iffalse 

@kernel@make@file@csname #1#2#3->xdef #1{expandafter @set@curr@file@aux csname 
expandafter #2@firstofone #3@nil endcsname }
#1<-@curr@file 
#2<-@expl@@@filehook@resolve@file@subst@@w 
#3<-@currpath @currpkg@reqd 

@firstofone #1->#1
#1<-@currpath 

@expl@@@filehook@resolve@file@subst@@w #1@nil ->__filehook_file_parse_full_name
:nN {#1}__filehook_file_subst_begin:nnn 
#1<-@currpath @currpkg@reqd 

__filehook_file_parse_full_name:nN #1->exp_args:Nf file_parse_full_name_apply:n
N {exp_args:Nf __filehook_full_name:nn {file_full_name:n {#1}}{#1}}
#1<-@currpath @currpkg@reqd 

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-file_parse_full_name_apply:nN 
#2<-exp_args:Nf __filehook_full_name:nn {file_full_name:n {@currpath @currpkg@r
eqd }}{@currpath @currpkg@reqd }

exp_end_continue_f:w ->`^^@

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-__filehook_full_name:nn 
#2<-file_full_name:n {@currpath @currpkg@reqd }

exp_end_continue_f:w ->`^^@

file_full_name:n #1->exp_args:Ne __file_full_name:n {__kernel_file_name_sanitiz
e:n {#1}}
#1<-@currpath @currpkg@reqd 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_full_name:n 
#2<-__kernel_file_name_sanitize:n {@currpath @currpkg@reqd }

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-@currpath @currpkg@reqd 

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {@currpath @cu
rrpkg@reqd }}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {@currpath @currpkg@reqd }

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-@currpath @currpkg@reqd 

@currpath ->

@currpkg@reqd ->l3backend-pdftex.def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_full_name:n #1->tl_if_blank:nF {#1}{exp_args:Nne __file_full_name_aux:nn
 {#1}{__file_size:n {#1}}}
#1<-l3backend-pdftex.def

tl_if_blank:nF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none:
n #1?}scan_stop: __prg_F_true:w fi: use:n 
#1<-l3backend-pdftex.def

use_none:n #1->
#1<-l

use:n #1->#1
#1<-exp_args:Nne __file_full_name_aux:nn {l3backend-pdftex.def}{__file_size:n {
l3backend-pdftex.def}}

exp_args:Nne #1#2#3->tex_expanded:D {exp_not:N #1{exp_not:n {#2}}{__kernel_exp_
not:w tex_expanded:D {{#3}}}}
#1<-__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-__file_size:n {l3backend-pdftex.def}

__file_full_name_aux:nn #1#2->tl_if_blank:nTF {#2}{seq_map_tokens:Nn l_file_sea
rch_path_seq {__file_full_name_aux:Nnn seq_map_break:n {#1}}cs_if_exist:NT inpu
t@path {tl_map_tokens:Nn input@path {__file_full_name_aux:Nnn tl_map_break:n {#
1}}}__file_name_end: }{__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

tl_if_blank:nTF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none
:n #1?}scan_stop: __prg_TF_true:w fi: use_ii:nn 
#1<-30429

use_none:n #1->
#1<-3

use_ii:nn #1#2->#2
#1<-seq_map_tokens:Nn l_file_search_path_seq {__file_full_name_aux:Nnn seq_map_
break:n {l3backend-pdftex.def}}cs_if_exist:NT input@path {tl_map_tokens:Nn inpu
t@path {__file_full_name_aux:Nnn tl_map_break:n {l3backend-pdftex.def}}}__file_
name_end: 
#2<-__file_ext_check:nn {l3backend-pdftex.def}{30429}

__file_ext_check:nn #1#2->__file_ext_check:nnw {#2}{/}#1/q__file_nil /s__file_s
top 
#1<-l3backend-pdftex.def
#2<-30429

__file_ext_check:nnw #1#2#3/#4/#5s__file_stop ->__file_quark_if_nil:nTF {#4}{ex
p_args:No __file_ext_check:nnnw {use_none:n #2}{#1}{#3}#3.q__file_nil .s__file_
stop }{__file_ext_check:nnw {#1}{#2#3/}#4/#5s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-q__file_nil 
#5<-

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-q__file_nil 

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}q__file_nil {}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!q__file_nil ?

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-exp_args:No __file_ext_check:nnnw {use_none:n /}{30429}{l3backend-pdftex.de
f}l3backend-pdftex.def.q__file_nil .s__file_stop 
#2<-__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}q__file_nil /s__file_st
op 

exp_args:No #1#2->exp_after:wN #1exp_after:wN {#2}
#1<-__file_ext_check:nnnw 
#2<-use_none:n /

use_none:n #1->
#1<-/

__file_ext_check:nnnw #1#2#3#4.#5.#6s__file_stop ->__file_quark_if_nil:nTF {#5}
{__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{30429
}
#2<-l3backend-pdftex.def

__filehook_full_name:nn #1#2->tl_if_empty:nTF {#1}{tl_trim_spaces:n {#2}}{tl_tr
im_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-@currpath @currpkg@reqd 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-tl_trim_spaces:n {@currpath @currpkg@reqd }
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {l3backend-pdftex.def}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {l3backend-pdf
tex.def}}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {l3backend-pdftex.def}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-l3backend-pdftex.def

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=l3backend-pdftex.def 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-p
dftex.def}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-l3backend-pdftex.def

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-def

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}def{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {l3backend-pdftex.defs__file_stop }__file_name_trim
_spaces_aux:n 
#2<-tl_trim_spaces:n {l3backend-pdftex.def}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-l3backend-pdftex.def

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: l3backend-pdftex.def

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: l3backend-pdftex.defs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: l3backend-pdftex.def
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-l3backend-pdftex.def

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}l3backend-pdftex.def.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/l3backend-pdftex.def}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-def.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {l3backend-pdftex}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{__fi
le_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex}def.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.l3backend-pdftex}{tl_if_empty:nTF {def}{__file_parse_full
_name_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.def}{}}}{__file_parse_
full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-__file_parse_full_name_base:nw {.l3backend-pdftex.def}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.l3backend-pdftex

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {def}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.def}{}}
#2<-__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-__filehook_file_subst_begin:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-__filehook_file_subst_begin:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .l3backend-pdftexprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

__filehook_file_subst_begin:nnn #1#2#3->__filehook_file_subst_tortoise_hare:nn 
{#2#3}{#2#3}{__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-l3backend-pdftex
#3<-.def

__filehook_file_subst_tortoise_hare:nn #1#2#3->cs_if_exist:cTF {@file-subst@#2}
{flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_rep
laced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@#2}}{__filehook_file_sub
st_loop:cc {@file-subst@#1}{@file-subst@use:c {@file-subst@#2}}}{use:c {@file-s
ubst@#2}}}{#3}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def
#3<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

cs_if_exist:cTF #1->if_cs_exist:w #1cs_end: exp_after:wN use_i:nn else: exp_aft
er:wN use_ii:nn fi: {exp_after:wN if_meaning:w cs:w #1cs_end: scan_stop: prg_re
turn_false: else: prg_return_true: fi: }prg_return_false: exp_end: 
#1<-@file-subst@l3backend-pdftex.def

use_ii:nn #1#2->#2
#1<-exp_after:wN if_meaning:w cs:w @file-subst@l3backend-pdftex.defcs_end: scan
_stop: prg_return_false: else: prg_return_true: fi: 
#2<-prg_return_false: 

prg_return_false: ->exp_after:wN use_ii:nn exp:w 

use_ii:nn #1#2->#2
#1<-flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_
replaced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@l3backend-pdftex.def}
}{__filehook_file_subst_loop:cc {@file-subst@l3backend-pdftex.def}{@file-subst@
use:c {@file-subst@l3backend-pdftex.def}}}{use:c {@file-subst@l3backend-pdftex.
def}}
#2<-__filehook_file_name_compose:nnn {}{l3backend-pdftex}{.def}

__filehook_file_name_compose:nnn #1#2#3->tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-l3backend-pdftex
#3<-.def

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-/

@set@curr@file@aux #1->expandafter ifx csname endcsname #1.texelse string #1fi 
#1<-l3backend-pdftex.def 

@expl@@@filehook@if@file@replaced@@TF #1#2->flag_if_raised:nTF {__filehook_file
_replaced}{#1}{#2}
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currpkg@reqd }if@tempswa @expl@@@filehook@drop@extension@@N @
curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

flag_if_raised:nTF #1->if_cs_exist:w flag #1 0cs_end: __prg_TF_true:w fi: use_i
i:nn 
#1<-__filehook_file_replaced

use_ii:nn #1#2->#2
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {@currpath @currpkg@reqd }if@tempswa @expl@@@filehook@drop@extension@@N @
curr@file@reqd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

@expl@@@filehook@clear@replacement@flag@@ ->flag_clear:n {__filehook_file_repla
ced}

flag_clear:n #1->__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

__flag_clear:wn #1;#2->if_cs_exist:w flag #2 #1cs_end: cs_set_eq:cN {flag #2 #1
}tex_undefined:D exp_after:wN __flag_clear:wn int_value:w int_eval:w 1+#1else: 
use_i:nnn fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

use_i:nnn #1#2#3->#1
#1<-fi: 
#2<-;
#3<-__filehook_file_replaced

\@curr@file ->l3backend-pdftex.def

\IfFileExists@ #1#2#3->\openin \@inputcheck "#1" \ifeof \@inputcheck \ifx \inpu
t@path \@undefined \let \reserved@a \@secondoftwo \else \def \reserved@a {\@iff
ileonpath {#1}}\fi \else \closein \@inputcheck \edef \@filef@und {"#1" }\let \r
eserved@a \@firstoftwo \fi \expandafter \def \expandafter \reserved@a \expandaf
ter {\reserved@a {#2}{#3}}\reserved@a 
#1<-l3backend-pdftex.def
#2<-\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expandafter \@swa
ptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \expandafter
 {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 
#3<-\@latex@error {The \@cls@pkg \space \@currpkg@reqd \space failed to load}\@
ehd 

\reserved@a #1#2->#1
#1<-\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expandafter \@swa
ptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \expandafter
 {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 
#2<-\@latex@error {The \@cls@pkg \space \@currpkg@reqd \space failed to load}\@
ehd 

\reserved@a ->\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expanda
fter \@swaptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \e
xpandafter {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 

\@expl@@@filehook@file@push@@ ->\seq_gpush:Nx \g__filehook_input_file_seq {{\Cu
rrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\seq_gpush:Nx ->\exp_args:NNx \seq_gput_left:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\seq_gput_left:Nn 
#2<-\g__filehook_input_file_seq 
#3<-{\CurrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile 
}

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \seq_gput_left:Nn \exp_not:N \g__filehook_input_file_seq {{\Curr
entFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\CurrentFilePathUsed ->

\CurrentFileUsed ->l3backend-pdftex.def

\CurrentFilePath ->

\CurrentFile ->l3backend-pdftex.def

\l__exp_internal_tl ->\seq_gput_left:Nn \g__filehook_input_file_seq {{}{l3backe
nd-pdftex.def}{}{l3backend-pdftex.def}}

\seq_gput_left:Nn #1#2->\__kernel_tl_gset:Nx #1{\exp_not:n {\s__seq \__seq_item
:n {#2}}\exp_not:f {\exp_after:wN \__seq_put_left_aux:w #1}}
#1<-\g__filehook_input_file_seq 
#2<-{}{l3backend-pdftex.def}{}{l3backend-pdftex.def}

\exp_not:f #1->\__kernel_exp_not:w \exp_after:wN {\exp:w \exp_end_continue_f:w 
#1}
#1<-\exp_after:wN \__seq_put_left_aux:w \g__filehook_input_file_seq 

\exp_end_continue_f:w ->`^^@

\g__filehook_input_file_seq ->\s__seq \__seq_item:n {{}{}{}{}}

\__seq_put_left_aux:w \s__seq ->\exp_stop_f: 

\@filehook@set@CurrentFile ->\@expl@@@filehook@set@curr@file@@nNN {\@curr@file 
}\CurrentFileUsed \CurrentFilePathUsed \ifx \@curr@file@reqd \@curr@file \let \
CurrentFile \CurrentFileUsed \let \CurrentFilePath \CurrentFilePathUsed \else \
@expl@@@filehook@set@curr@file@@nNN {\@curr@file@reqd }\CurrentFile \CurrentFil
ePath \fi 

\@expl@@@filehook@set@curr@file@@nNN #1->\exp_args:Nf \__filehook_file_parse_fu
ll_name:nN {#1}\__filehook_set_curr_file_assign:nnnNN 
#1<-\@curr@file 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_file_parse_full_name:nN 
#2<-\@curr@file 

\exp_end_continue_f:w ->`^^@

\@curr@file ->l3backend-pdftex.def

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-l3backend-pdftex.def

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {l3backend-pdftex.
def}}{l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {l3backend-pdftex.def}

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-l3backend-pdftex.def

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-l3backend-pdftex.def

\use_none:n #1->
#1<-l

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {l3backend-pdftex.def}{\__file_size:
n {l3backend-pdftex.def}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-l3backend-pdftex.def
#3<-\__file_size:n {l3backend-pdftex.def}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-l3backend-pdftex.def
#2<-30429

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-30429

\use_none:n #1->
#1<-3

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {l3backend-pdftex.def}}\cs_if_exist:NT \input@path {\tl_map_tokens:
Nn \input@path {\__file_full_name_aux:Nnn \tl_map_break:n {l3backend-pdftex.def
}}}\__file_name_end: 
#2<-\__file_ext_check:nn {l3backend-pdftex.def}{30429}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-l3backend-pdftex.def
#2<-30429

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-30429
#2<-/
#3<-l3backend-pdftex.def
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{30429}{l3backend-pdftex
.def}l3backend-pdftex.def.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {30429}{/l3backend-pdftex.def/}\q__file_nil /\s__file
_stop 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-30429
#3<-l3backend-pdftex.def
#4<-l3backend-pdftex
#5<-def
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {l3backend-pdftex.def.tex}{l3backend-pdftex.def}{3042
9}
#2<-l3backend-pdftex.def

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex.def

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-l3backend-pdftex.def

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {l3backend-pdftex.def}
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {l3backend-pdftex.def}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-l3backend-pdftex.def

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {l3backend-
pdftex.def}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {l3backend-pdftex.def}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-l3backend-pdftex.def

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=l3backend-pdftex.def 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-l3backend-pdftex.def

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-l3backend-pdftex.def

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{l3backend-
pdftex.def}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-l3backend-pdftex.def

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-l3backend-pdftex.def
#2<-l3backend-pdftex
#3<-def
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-def

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}def{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}def{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {l3backend-pdftex.def\s__file_stop }\__file_name_t
rim_spaces_aux:n 
#2<-\tl_trim_spaces:n {l3backend-pdftex.def}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-l3backend-pdftex.def

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: l3backend-pdftex.def

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: l3backend-pdftex.def\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: l3backend-pdftex.def
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-l3backend-pdftex.def

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex.def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}l3backend-pdftex.def.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/l3backend-pdftex.def}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-l3backend-pdftex
#3<-def.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-def.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {l3backend-pdftex}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{}}}{
\__file_parse_full_name_tidy:nnnN {}{.l3backend-pdftex}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex}def.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.l3backend-pdftex
#2<-def
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.l3backend-pdftex}{\tl_if_empty:nTF {def}{\__file_parse_f
ull_name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.def}{}}}{\__file_p
arse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}}
#2<-\__file_parse_full_name_base:nw {.l3backend-pdftex.def}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.l3backend-pdftex

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {def}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.def}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.l3backend-pdftex}{.def}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.l3backend-pdftex
#2<-.def
#3<-
#4<-\__filehook_set_curr_file_assign:nnnNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_set_curr_file_assign:nnnNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .l3backend-pdftex\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_set_curr_file_assign:nnnNN #1#2#3#4#5->\str_set:Nn #5{#1}\str_set:N
n #4{#2#3}
#1<-
#2<-l3backend-pdftex
#3<-.def
#4<-\CurrentFileUsed 
#5<-\CurrentFilePathUsed 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFilePathUsed 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFileUsed 
#2<-l3backend-pdftex.def

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFileUsed 
#2<-\tl_to_str:n {l3backend-pdftex.def}

\@filef@und ->"l3backend-pdftex.def" 

\@swaptwoargs #1#2->#2#1
#1<-\@input@file@exists@with@hooks {"l3backend-pdftex.def" }
#2<-

\@input@file@exists@with@hooks #1->\edef \reserved@a {\@expl@@@filehook@file@po
p@assign@@nnnn {\CurrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\C
urrentFile }}\expandafter \@swaptwoargs \expandafter {\reserved@a }{\edef \rese
rved@a {\unqu@tefilef@und #1\@nil }\@addtofilelist {\string@makeletter \reserve
d@a }\UseHook {file/before}\UseHook {file/\CurrentFile /before}\@@input #1}\Use
Hook {file/\CurrentFile /after}\UseHook {file/after}
#1<-"l3backend-pdftex.def" 

\CurrentFilePathUsed ->

\CurrentFileUsed ->l3backend-pdftex.def

\CurrentFilePath ->

\CurrentFile ->l3backend-pdftex.def

\reserved@a ->\@expl@@@filehook@file@pop@assign@@nnnn {}{l3backend-pdftex.def}{
}{l3backend-pdftex.def}

\@swaptwoargs #1#2->#2#1
#1<-\@expl@@@filehook@file@pop@assign@@nnnn {}{l3backend-pdftex.def}{}{l3backen
d-pdftex.def}
#2<-\edef \reserved@a {\unqu@tefilef@und "l3backend-pdftex.def" \@nil }\@addtof
ilelist {\string@makeletter \reserved@a }\UseHook {file/before}\UseHook {file/\
CurrentFile /before}\@@input "l3backend-pdftex.def" 

\unqu@tefilef@und "#1" \@nil ->#1
#1<-l3backend-pdftex.def

\@addtofilelist #1->\xdef \@filelist {\@filelist ,#1}
#1<-\string@makeletter \reserved@a 

\@filelist ->revtex4-2.cls,aps4-2.rtx,aps10pt4-2.rtx,textcase.sty,url.sty,natbi
b.sty,revsymb4-2.sty

\string@makeletter #1->\@expl@str@map@function@@NN #1\@string@makeletter 
#1<-\reserved@a 

\@expl@str@map@function@@NN ->\exp_args:No \str_map_function:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\str_map_function:nN 
#2<-\reserved@a 

\reserved@a ->l3backend-pdftex.def

\str_map_function:nN #1#2->\exp_after:wN \__str_map_function:w \exp_after:wN \_
_str_map_function:nn \exp_after:wN #2\__kernel_tl_to_str:w {#1}\q__str_recursio
n_tail ? \prg_break_point:Nn \str_map_break: {}
#1<-l3backend-pdftex.def
#2<-\@string@makeletter 

\__str_map_function:w #1 ->#1{ { }\__str_map_function:w }
#1<-\__str_map_function:nn \@string@makeletter l3backend-pdftex.def\q__str_recu
rsion_tail ?

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-l

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-l

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-l

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`l}{11}
#2<-l

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`l
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`l

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-108
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-108
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cviii_tl ->l\or: l\or: l\or: l\or: \or: l\or: l\or: ll\or: {\or: l\or:
 l\or: l\or: l\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-3

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-3

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-3

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`3}{11}
#2<-3

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-b

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-b

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-b

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`b}{11}
#2<-b

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`b
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`b

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-98
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-98
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcviii_tl ->b\or: b\or: b\or: b\or: \or: b\or: b\or: bb\or: {\or: b\or
: b\or: b\or: b\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-a

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-a

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-a

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`a}{11}
#2<-a

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`a
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`a

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-97
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-97
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcvii_tl ->a\or: a\or: a\or: a\or: \or: a\or: a\or: aa\or: {\or: a\or:
 a\or: a\or: a\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-c

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-c

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-c

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`c}{11}
#2<-c

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`c
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`c

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-99
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-99
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_xcix_tl ->c\or: c\or: c\or: c\or: \or: c\or: c\or: cc\or: {\or: c\or: 
c\or: c\or: c\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-k

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-k

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-k

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`k}{11}
#2<-k

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`k
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`k

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-107
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-107
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cvii_tl ->k\or: k\or: k\or: k\or: \or: k\or: k\or: kk\or: {\or: k\or: 
k\or: k\or: k\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-n

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-n

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-n

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`n}{11}
#2<-n

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`n
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`n

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-110
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-110
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cx_tl ->n\or: n\or: n\or: n\or: \or: n\or: n\or: nn\or: {\or: n\or: n\
or: n\or: n\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<--

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<--

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<--

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`-}{11}
#2<--

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-p

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-p

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-p

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`p}{11}
#2<-p

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`p
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`p

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-112
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-112
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxii_tl ->p\or: p\or: p\or: p\or: \or: p\or: p\or: pp\or: {\or: p\or: 
p\or: p\or: p\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-f

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-f

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-f

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`f}{11}
#2<-f

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`f
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`f

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-102
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-102
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cii_tl ->f\or: f\or: f\or: f\or: \or: f\or: f\or: ff\or: {\or: f\or: f
\or: f\or: f\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-t

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-t

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-t

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`t}{11}
#2<-t

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`t
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`t

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-116
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-116
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxvi_tl ->t\or: t\or: t\or: t\or: \or: t\or: t\or: tt\or: {\or: t\or: 
t\or: t\or: t\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-x

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-x

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-x

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`x}{11}
#2<-x

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`x
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`x

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-120
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-120
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cxx_tl ->x\or: x\or: x\or: x\or: \or: x\or: x\or: xx\or: {\or: x\or: x
\or: x\or: x\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-.

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-.

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-.

\@secondoftwo #1#2->#2
#1<-\@expl@char@generate@@nn {`.}{11}
#2<-.

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-d

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-d

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-d

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`d}{11}
#2<-d

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`d
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`d

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-100
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-100
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_c_tl ->d\or: d\or: d\or: d\or: \or: d\or: d\or: dd\or: {\or: d\or: d\o
r: d\or: d\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-e

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-e

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-e

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`e}{11}
#2<-e

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`e
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`e

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-101
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-101
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_ci_tl ->e\or: e\or: e\or: e\or: \or: e\or: e\or: ee\or: {\or: e\or: e\
or: e\or: e\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-f

\@string@makeletter #1->\char@if@alph {#1}{\@expl@char@generate@@nn {`#1}{11}}{
#1}
#1<-f

\char@if@alph #1->\ifnum 0\ifnum `#1<`A 1\fi \ifnum `#1>`z 1\fi \if \ifnum `#1>
`Z @\fi \ifnum `#1<`a @\fi 01\fi >0 \expandafter \@secondoftwo \else \expandaft
er \@firstoftwo \fi 
#1<-f

\@firstoftwo #1#2->#1
#1<-\@expl@char@generate@@nn {`f}{11}
#2<-f

\@expl@char@generate@@nn #1#2->\exp:w \exp_after:wN \__char_generate_aux:w \int
_value:w \int_eval:n {#1}\exp_after:wN ;\int_value:w \int_eval:n {#2};
#1<-`f
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-`f

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\__char_generate_aux:w #1;#2;->\if_int_odd:w 0\if_int_compare:w #2<1\exp_stop_f
: 1\fi: \if_int_compare:w #2=5\exp_stop_f: 1\fi: \if_int_compare:w #2=9\exp_sto
p_f: 1\fi: \if_int_compare:w #2>13\exp_stop_f: 1\fi: \exp_stop_f: \msg_expandab
le_error:nn {char}{invalid-catcode}\else: \if_int_odd:w 0\if_int_compare:w #1<\
c_zero_int 1\fi: \if_int_compare:w #1>\c_max_char_int 1\fi: \exp_stop_f: \msg_e
xpandable_error:nn {char}{out-of-range}\else: \if_int_compare:w #2#1=100\exp_st
op_f: \msg_expandable_error:nn {char}{null-space}\else: \__char_generate_aux:nn
w {#1}{#2}\fi: \fi: \fi: \exp_end: 
#1<-102
#2<-11

\__char_generate_aux:nnw #1#2#3\exp_end: ->#3\if_false: {\fi: \exp_after:wN \ex
p_after:wN \exp_after:wN \exp_end: \exp_after:wN \exp_after:wN \if_case:w \tex_
numexpr:D 13-#2\exp_after:wN \exp_after:wN \exp_after:wN \exp_after:wN \exp_aft
er:wN \exp_after:wN \exp_after:wN \scan_stop: \exp_after:wN \exp_after:wN \exp_
after:wN \exp_not:N \cs:w c__char_\__char_int_to_roman:w #1_tl\cs_end: }\fi: 
#1<-102
#2<-11
#3<-\fi: \fi: \fi: 

\c__char_cii_tl ->f\or: f\or: f\or: f\or: \or: f\or: f\or: ff\or: {\or: f\or: f
\or: f\or: f\or: }

\__str_map_function:nn #1#2->\if_meaning:w \q__str_recursion_tail #2\exp_after:
wN \str_map_break: \fi: #1#2\__str_map_function:nn {#1}
#1<-\@string@makeletter 
#2<-\q__str_recursion_tail 

\str_map_break: ->\prg_map_break:Nn \str_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\str_map_break: 
#2<-
#3<-\@string@makeletter \q__str_recursion_tail \__str_map_function:nn {\@string
@makeletter }?{ { }\__str_map_function:w }
#4<-\str_map_break: 
#5<-

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\str_map_break: 
#3<-

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/before

\__hook file/before ->\__hook_toplevel file/before \__hook_next file/before 

\__hook_toplevel file/before ->

\__hook_next file/before ->

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/\CurrentFile /before

\CurrentFile ->l3backend-pdftex.def

(/usr/local/texlive/2022/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def
\ProvidesExplFile ->\@expl@provides@file@@Nnnnnn \ProvidesFile {File}

\@expl@provides@file@@Nnnnnn #1#2#3#4#5#6->\ifnum 0\ifdefined #11\fi \ifx \rela
x #1\else 1\fi =11 \expandafter #1\else \@expl@provides@generic@@wnnw {#2}\fi {
#3}[{#4 \ifx \relax #5\relax \else v#5\space \fi #6}]\ExplSyntaxOn 
#1<-\ProvidesFile 
#2<-File
#3<-l3backend-pdftex.def
#4<-2023-01-16
#5<-
#6<-L3 backend support: PDF output (pdfTeX)

\ProvidesFile #1->\begingroup \catcode `\ 10 \ifnum \endlinechar <256 \ifnum \e
ndlinechar >\m@ne \catcode \endlinechar 10 \fi \fi \@makeother \/\@makeother \&
\kernel@ifnextchar [{\@providesfile {#1}}{\@providesfile {#1}[]}
#1<-l3backend-pdftex.def

\@makeother #1->\catcode `#112\relax 
#1<-\/

\@makeother #1->\catcode `#112\relax 
#1<-\&

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@providesfile {l3backend-pdftex.def}
#3<-\@providesfile {l3backend-pdftex.def}[]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@providesfile {l3backend-pdftex.def}

\@providesfile #1[#2]->\wlog {File: #1 #2}\expandafter \xdef \csname ver@#1\end
csname {#2}\endgroup 
#1<-l3backend-pdftex.def
#2<-2023-01-16 \ifx \relax \relax \else v\space \fi L3 backend support: PDF out
put (pdfTeX)

\wlog ->\immediate \write \m@ne 
File: l3backend-pdftex.def 2023-01-16 L3 backend support: PDF output (pdfTeX)

\ExplSyntaxOn ->\bool_if:NF \l__kernel_expl_bool {\cs_set_protected:Npx \ExplSy
ntaxOff {\char_set_catcode:nn {9}{\char_value_catcode:n {9}}\char_set_catcode:n
n {32}{\char_value_catcode:n {32}}\char_set_catcode:nn {34}{\char_value_catcode
:n {34}}\char_set_catcode:nn {58}{\char_value_catcode:n {58}}\char_set_catcode:
nn {94}{\char_value_catcode:n {94}}\char_set_catcode:nn {95}{\char_value_catcod
e:n {95}}\char_set_catcode:nn {124}{\char_value_catcode:n {124}}\char_set_catco
de:nn {126}{\char_value_catcode:n {126}}\tex_endlinechar:D =\tex_the:D \tex_end
linechar:D \scan_stop: \bool_set_false:N \l__kernel_expl_bool \cs_set_protected
:Npn \ExplSyntaxOff {}}}\char_set_catcode_ignore:n {9}\char_set_catcode_ignore:
n {32}\char_set_catcode_other:n {34}\char_set_catcode_letter:n {58}\char_set_ca
tcode_math_superscript:n {94}\char_set_catcode_letter:n {95}\char_set_catcode_o
ther:n {124}\char_set_catcode_space:n {126}\tex_endlinechar:D =32\scan_stop: \b
ool_set_true:N \l__kernel_expl_bool 

\bool_if:NF #1->\if_bool:N #1\__prg_F_true:w \fi: \use:n 
#1<-\l__kernel_expl_bool 

\use:n #1->#1
#1<-\cs_set_protected:Npx \ExplSyntaxOff {\char_set_catcode:nn {9}{\char_value_
catcode:n {9}}\char_set_catcode:nn {32}{\char_value_catcode:n {32}}\char_set_ca
tcode:nn {34}{\char_value_catcode:n {34}}\char_set_catcode:nn {58}{\char_value_
catcode:n {58}}\char_set_catcode:nn {94}{\char_value_catcode:n {94}}\char_set_c
atcode:nn {95}{\char_value_catcode:n {95}}\char_set_catcode:nn {124}{\char_valu
e_catcode:n {124}}\char_set_catcode:nn {126}{\char_value_catcode:n {126}}\tex_e
ndlinechar:D =\tex_the:D \tex_endlinechar:D \scan_stop: \bool_set_false:N \l__k
ernel_expl_bool \cs_set_protected:Npn \ExplSyntaxOff {}}

\cs_set_protected:Npx ->\tex_protected:D \tex_long:D \tex_edef:D 

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-9

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-9

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-32

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-32

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-34

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-34

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-58

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-58

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-94

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-94

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-95

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-95

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-124

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-124

\char_value_catcode:n #1->\tex_the:D \tex_catcode:D \int_eval:n {#1}\exp_stop_f
: 
#1<-126

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-126

\char_set_catcode_ignore:n #1->\char_set_catcode:nn {#1}{9}
#1<-9

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-9
#2<-9

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-9

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-9

\char_set_catcode_ignore:n #1->\char_set_catcode:nn {#1}{9}
#1<-32

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-32
#2<-9

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-32

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-9

\char_set_catcode_other:n #1->\char_set_catcode:nn {#1}{12}
#1<-34

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-34
#2<-12

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-34

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-12

\char_set_catcode_letter:n #1->\char_set_catcode:nn {#1}{11}
#1<-58

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-58
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-58

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\char_set_catcode_math_superscript:n #1->\char_set_catcode:nn {#1}{7}
#1<-94

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-94
#2<-7

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-94

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-7

\char_set_catcode_letter:n #1->\char_set_catcode:nn {#1}{11}
#1<-95

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-95
#2<-11

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-95

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-11

\char_set_catcode_other:n #1->\char_set_catcode:nn {#1}{12}
#1<-124

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-124
#2<-12

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-124

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-12

\char_set_catcode_space:n #1->\char_set_catcode:nn {#1}{10}
#1<-126

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-126
#2<-10

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-126

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-10

\bool_set_true:N #1->\cs_set_eq:NN #1\c_true_bool 
#1<-\l__kernel_expl_bool 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__kernel_expl_bool 

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\__kernel_dependency_version_check:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__kernel_dependency_version_check:nn {2021-02-18}{l3backend-pdftex.def}
#2<-\cs_if_exist_use:cF {@latex@error}{\errmessage }{Mismatched LaTeX support f
iles detected.\MessageBreak Loading aborted!}{\use:c {@ehd}}\tex_endinput:D 

\__kernel_dependency_version_check:nn #1->\cs_if_exist:NTF \c__kernel_expl_date
_tl {\exp_args:NV \__file_kernel_dependency_compare:nnn \c__kernel_expl_date_tl
 {#1}}{\__file_kernel_dependency_compare:nnn {0000-00-00}{#1}}
#1<-2021-02-18

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\c__kernel_expl_date_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_args:NV \__file_kernel_dependency_compare:nnn \c__kernel_expl_date_tl 
{2021-02-18}
#2<-\__file_kernel_dependency_compare:nnn {0000-00-00}{2021-02-18}

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\__file_kernel_dependency_compare:nnn 
#2<-\c__kernel_expl_date_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\c__kernel_expl_date_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\c__kernel_expl_date_tl ->2023-02-22

\__file_kernel_dependency_compare:nnn #1#2#3->\int_compare:nNnT {\__file_parse_
version:w #1\s__file_stop }<{\__file_parse_version:w #2\s__file_stop }{\__file_
mismatched_dependency_error:nn {#2}{#3}}
#1<-2023-02-22
#2<-2021-02-18
#3<-l3backend-pdftex.def

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\__file_parse_version:w 2023-02-22\s__file_stop 
#2<-<
#3<-\__file_parse_version:w 2021-02-18\s__file_stop 

\__file_parse_version:w #1-#2-#3\s__file_stop ->#1#2#3
#1<-2023
#2<-02
#3<-22

\__file_parse_version:w #1-#2-#3\s__file_stop ->#1#2#3
#1<-2021
#2<-02
#3<-18

\use_none:n #1->
#1<-\__file_mismatched_dependency_error:nn {2021-02-18}{l3backend-pdftex.def}

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__kernel_backend_literal:e 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal:e 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal:e 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal:e }{\token_to_meaning:N \__kernel_backend_literal:e }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__kernel_backend_literal:e 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_literal:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal:n }{\token_to_meaning:N \__kernel_backend_literal:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__kernel_backend_literal:n 
#2<-x

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__kernel_backend_literal:n 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1->\__kernel_backend_literal:e {\exp_not:n {#1}}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__kernel_backend_literal:
n \exp_not:N \__kernel_backend_literal:n \tl_to_str:n {x},\exp_not:N \scan_stop
: ,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__kernel_backend_literal:n 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__kernel_backend_literal
#2<-n
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__kernel_backend_literal
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__kernel_backend_literal}{n}
\c_true_bool \__kernel_backend_literal:n x,\scan_stop: ,\q__cs_recursion_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__kernel_backend_literal
#2<-n
#3<-\c_true_bool 
#4<-\__kernel_backend_literal:n 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_literal:n 
#2<-__kernel_backend_literal
#3<-n
#4<-x

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}x
\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\fi: \__cs_generate_
variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel_backend_literal:n 
{__kernel_backend_literal}{x}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__kernel_backend_literal:n 
#7<-__kernel_backend_literal
#8<-x

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__kernel_backend_literal:x

\l__exp_internal_tl ->\__cs_generate_variant:wwNN x\s__cs_mark \s__cs_stop \__k
ernel_backend_literal:n \__kernel_backend_literal:x 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-x
#2<-
#3<-\__kernel_backend_literal:n 
#4<-\__kernel_backend_literal:x 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__kernel_backend_literal:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {x}\__cs_tmp:w \__kernel_ba
ckend_literal:x {\exp_not:c {exp_args:Nx}\exp_not:N \__kernel_backend_literal:n
 }\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-x

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-x

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nx\cs_end: \scan_stop: \prg_retu
rn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {x}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__kernel_backend_literal:x 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal:x 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal:x }{\token_to_meaning:N \__kernel_backend_literal:x }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_literal:n 
#2<-__kernel_backend_literal
#3<-n
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\
fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel
_backend_literal:n {__kernel_backend_literal}{\scan_stop: }}\__cs_generate_vari
ant:Nnnw \__kernel_backend_literal:n {__kernel_backend_literal}{n}

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\@ifl@t@r 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\@ifl@t@r \fmtversion {2020-10-01}{\cs_new_protected:Npn \__kernel_backend_
first_shipout:n ##1{\hook_gput_code:nnn {shipout/firstpage}{l3backend}{##1}}}{\
cs_new_eq:NN \__kernel_backend_first_shipout:n \AtBeginDvi }
#2<-\cs_new_eq:NN \__kernel_backend_first_shipout:n \use:n 

\@ifl@t@r #1#2->\ifnum \expandafter \@parse@version@ #1//00\@nil <\expandafter 
\@parse@version@ #2//00\@nil \expandafter \@secondoftwo \else \expandafter \@fi
rstoftwo \fi 
#1<-\fmtversion 
#2<-2020-10-01

\fmtversion ->2022-11-01

\@parse@version@ #1->\@parse@version 0#1
#1<-2

\@parse@version #1/#2/#3#4#5\@nil ->\@parse@version@dash #1-#2-#3#4\@nil 
#1<-02022-11-01
#2<-
#3<-0
#4<-0
#5<-

\@parse@version@dash #1-#2-#3#4#5\@nil ->\if \relax #2\relax \else #1\fi #2#3#4
 
#1<-02022
#2<-11
#3<-0
#4<-1
#5<---00

\@parse@version@ #1->\@parse@version 0#1
#1<-2

\@parse@version #1/#2/#3#4#5\@nil ->\@parse@version@dash #1-#2-#3#4\@nil 
#1<-02020-10-01
#2<-
#3<-0
#4<-0
#5<-

\@parse@version@dash #1-#2-#3#4#5\@nil ->\if \relax #2\relax \else #1\fi #2#3#4
 
#1<-02020
#2<-10
#3<-0
#4<-1
#5<---00

\@firstoftwo #1#2->#1
#1<-\cs_new_protected:Npn \__kernel_backend_first_shipout:n ##1{\hook_gput_code
:nnn {shipout/firstpage}{l3backend}{##1}}
#2<-\cs_new_eq:NN \__kernel_backend_first_shipout:n \AtBeginDvi 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_first_shipout:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_first_shipout:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_first_shipout:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_first_shipout:n }{\token_to_meaning:N \__kernel_backend_first_shipout:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_literal_pdf:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal_pdf:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal_pdf:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal_pdf:n }{\token_to_meaning:N \__kernel_backend_literal_pdf:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__kernel_backend_literal_pdf:n 
#2<-x

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__kernel_backend_literal_pdf:n 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1->\tex_pdfliteral:D {\exp_not:n {#1}}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__kernel_backend_literal_
pdf:n \exp_not:N \__kernel_backend_literal_pdf:n \tl_to_str:n {x},\exp_not:N \s
can_stop: ,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__kernel_backend_literal_pdf:n 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__kernel_backend_literal_pdf
#2<-n
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__kernel_backend_literal_pdf
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__kernel_backend_literal_pdf
}{n}\c_true_bool \__kernel_backend_literal_pdf:n x,\scan_stop: ,\q__cs_recursio
n_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__kernel_backend_literal_pdf
#2<-n
#3<-\c_true_bool 
#4<-\__kernel_backend_literal_pdf:n 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_literal_pdf:n 
#2<-__kernel_backend_literal_pdf
#3<-n
#4<-x

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}x
\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\fi: \__cs_generate_
variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel_backend_literal_pd
f:n {__kernel_backend_literal_pdf}{x}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__kernel_backend_literal_pdf:n 
#7<-__kernel_backend_literal_pdf
#8<-x

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__kernel_backend_literal_pdf:x

\l__exp_internal_tl ->\__cs_generate_variant:wwNN x\s__cs_mark \s__cs_stop \__k
ernel_backend_literal_pdf:n \__kernel_backend_literal_pdf:x 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-x
#2<-
#3<-\__kernel_backend_literal_pdf:n 
#4<-\__kernel_backend_literal_pdf:x 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__kernel_backend_literal_pdf:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {x}\__cs_tmp:w \__kernel_ba
ckend_literal_pdf:x {\exp_not:c {exp_args:Nx}\exp_not:N \__kernel_backend_liter
al_pdf:n }\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-x

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-x

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nx\cs_end: \scan_stop: \prg_retu
rn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {x}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__kernel_backend_literal_pdf:x 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal_pdf:x 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal_pdf:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal_pdf:x }{\token_to_meaning:N \__kernel_backend_literal_pdf:x }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_literal_pdf:n 
#2<-__kernel_backend_literal_pdf
#3<-n
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\
fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel
_backend_literal_pdf:n {__kernel_backend_literal_pdf}{\scan_stop: }}\__cs_gener
ate_variant:Nnnw \__kernel_backend_literal_pdf:n {__kernel_backend_literal_pdf}
{n}

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_literal_page:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_literal_page:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_literal_page:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_literal_page:n }{\token_to_meaning:N \__kernel_backend_literal_page:n 
}

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_scope_begin: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_scope_begin: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_scope_begin: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_scope_begin: }{\token_to_meaning:N \__kernel_backend_scope_begin: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_scope_end: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_scope_end: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_scope_end: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_scope_end: }{\token_to_meaning:N \__kernel_backend_scope_end: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_backend_matrix:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_matrix:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_matrix:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_matrix:n }{\token_to_meaning:N \__kernel_backend_matrix:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__kernel_backend_matrix:n 
#2<-x

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__kernel_backend_matrix:n 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1->\tex_pdfsetmatrix:D {\exp_not:n {#1}}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__kernel_backend_matrix:n
 \exp_not:N \__kernel_backend_matrix:n \tl_to_str:n {x},\exp_not:N \scan_stop: 
,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__kernel_backend_matrix:n 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__kernel_backend_matrix
#2<-n
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__kernel_backend_matrix
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__kernel_backend_matrix}{n}\
c_true_bool \__kernel_backend_matrix:n x,\scan_stop: ,\q__cs_recursion_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__kernel_backend_matrix
#2<-n
#3<-\c_true_bool 
#4<-\__kernel_backend_matrix:n 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_matrix:n 
#2<-__kernel_backend_matrix
#3<-n
#4<-x

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}x
\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\fi: \__cs_generate_
variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel_backend_matrix:n {
__kernel_backend_matrix}{x}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__kernel_backend_matrix:n 
#7<-__kernel_backend_matrix
#8<-x

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__kernel_backend_matrix:x

\l__exp_internal_tl ->\__cs_generate_variant:wwNN x\s__cs_mark \s__cs_stop \__k
ernel_backend_matrix:n \__kernel_backend_matrix:x 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-x
#2<-
#3<-\__kernel_backend_matrix:n 
#4<-\__kernel_backend_matrix:x 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__kernel_backend_matrix:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {x}\__cs_tmp:w \__kernel_ba
ckend_matrix:x {\exp_not:c {exp_args:Nx}\exp_not:N \__kernel_backend_matrix:n }
\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-x

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-x

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nx\cs_end: \scan_stop: \prg_retu
rn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {x}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__kernel_backend_matrix:x 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_backend_matrix:x 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_backend_matrix:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_backend_matrix:x }{\token_to_meaning:N \__kernel_backend_matrix:x }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__kernel_backend_matrix:n 
#2<-__kernel_backend_matrix
#3<-n
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\
fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__kernel
_backend_matrix:n {__kernel_backend_matrix}{\scan_stop: }}\__cs_generate_varian
t:Nnnw \__kernel_backend_matrix:n {__kernel_backend_matrix}{n}

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_pickup:N 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_pickup:N 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_pickup:N 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_pickup:N }{\token_to_meaning:N \__color_backend_pickup:N }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_pickup:w 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_pickup:w 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_pickup:w 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_pickup:w }{\token_to_meaning:N \__color_backend_pickup:w }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\int_new:N #1->\__kernel_chk_if_free_cs:N #1\cs:w newcount\cs_end: #1
#1<-\l__color_backend_stack_int 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__color_backend_stack_int 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__color_backend_stack_int 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__color
_backend_stack_int }{\token_to_meaning:N \l__color_backend_stack_int }

\newcount ->\e@alloc \count \countdef {\count 10}\insc@unt \float@count 

\e@alloc #1#2#3#4#5#6->\global \advance #3\@ne \e@ch@ck {#3}{#4}{#5}#1\allocati
onnumber #3\relax \global #2#6\allocationnumber \wlog {\string #6=\string #1\th
e \allocationnumber }
#1<-\count 
#2<-\countdef 
#3<-\count 10
#4<-\insc@unt 
#5<-\float@count 
#6<-\l__color_backend_stack_int 

\e@ch@ck #1#2#3#4->\ifnum #1<#2\else \ifnum #1=#2\relax \global #1\@cclvi \ifx 
\count #4\global \advance #1 10 \fi \fi \ifnum #1<#3\relax \else \errmessage {N
o room for a new \string #4}\fi \fi 
#1<-\count 10
#2<-\insc@unt 
#3<-\float@count 
#4<-\count 

\wlog ->\immediate \write \m@ne 
\l__color_backend_stack_int=\count267

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_color_backend_stack_init:Nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_color_backend_stack_init:Nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_color_backend_stack_init:Nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_color_backend_stack_init:Nnn }{\token_to_meaning:N \__kernel_color_backend_sta
ck_init:Nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_color_backend_stack_push:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_color_backend_stack_push:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_color_backend_stack_push:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_color_backend_stack_push:nn }{\token_to_meaning:N \__kernel_color_backend_stac
k_push:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__kernel_color_backend_stack_pop:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__kernel_color_backend_stack_pop:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__kernel_color_backend_stack_pop:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__kernel
_color_backend_stack_pop:n }{\token_to_meaning:N \__kernel_color_backend_stack_
pop:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__color_backend_fill_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__color_backend_fill_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__color_backend_fill_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__color
_backend_fill_tl }{\token_to_meaning:N \l__color_backend_fill_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__color_backend_fill_tl 

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__color_backend_stroke_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__color_backend_stroke_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__color_backend_stroke_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__color
_backend_stroke_tl }{\token_to_meaning:N \l__color_backend_stroke_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__color_backend_stroke_tl 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_select_cmyk:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_cmyk:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_cmyk:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_cmyk:n }{\token_to_meaning:N \__color_backend_select_cmyk:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_select_gray:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_gray:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_gray:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_gray:n }{\token_to_meaning:N \__color_backend_select_gray:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_select_rgb:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_rgb:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_rgb:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_rgb:n }{\token_to_meaning:N \__color_backend_select_rgb:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_select:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select:nn }{\token_to_meaning:N \__color_backend_select:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_reset: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_reset: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_reset: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_reset: }{\token_to_meaning:N \__color_backend_reset: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\prop_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_prop 
#1<-\g__color_backend_colorant_prop 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__color_backend_colorant_prop 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__color_backend_colorant_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__color
_backend_colorant_prop }{\token_to_meaning:N \g__color_backend_colorant_prop }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__color_backend_colorant_prop 

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__color_backend_devicen_colorants:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_devicen_colorants:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_devicen_colorants:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_devicen_colorants:n }{\token_to_meaning:N \__color_backend_devicen_colo
rants:n }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\c_space_tl -> 

\c_space_tl -> 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__color_backend_devicen_colorants:w 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_devicen_colorants:w 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_devicen_colorants:w 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_devicen_colorants:w }{\token_to_meaning:N \__color_backend_devicen_colo
rants:w }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_select_separation:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_separation:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_separation:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_separation:nn }{\token_to_meaning:N \__color_backend_select_sepa
ration:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_select_devicen:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_devicen:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_devicen:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_devicen:nn }{\token_to_meaning:N \__color_backend_select_devicen
:nn }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_select_devicen:nn 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_select_iccbased:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_select_iccbased:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_select_iccbased:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_select_iccbased:nn }{\token_to_meaning:N \__color_backend_select_iccbas
ed:nn }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_select_iccbased:nn 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_init_resource:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_init_resource:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_init_resource:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_init_resource:n }{\token_to_meaning:N \__color_backend_init_resource:n 
}

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_separation_init:nnnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_separation_init:nnnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_separation_init:nnnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_separation_init:nnnnn }{\token_to_meaning:N \__color_backend_separation
_init:nnnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_separation_init:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_separation_init:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_separation_init:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_separation_init:nn }{\token_to_meaning:N \__color_backend_separation_in
it:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_separation_init_CIELAB:nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_separation_init_CIELAB:nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_separation_init_CIELAB:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_separation_init_CIELAB:nnn }{\token_to_meaning:N \__color_backend_separ
ation_init_CIELAB:nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_devicen_init:nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_devicen_init:nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_devicen_init:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_devicen_init:nnn }{\token_to_meaning:N \__color_backend_devicen_init:nn
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__color_backend_devicen_init:w 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_devicen_init:w 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_devicen_init:w 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_devicen_init:w }{\token_to_meaning:N \__color_backend_devicen_init:w }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_iccbased_init:nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_iccbased_init:nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_iccbased_init:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_iccbased_init:nnn }{\token_to_meaning:N \__color_backend_iccbased_init:
nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_iccbased_device:nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_iccbased_device:nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_iccbased_device:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_iccbased_device:nnn }{\token_to_meaning:N \__color_backend_iccbased_dev
ice:nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_fill_cmyk:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_cmyk:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_cmyk:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_cmyk:n }{\token_to_meaning:N \__color_backend_fill_cmyk:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_fill_gray:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_gray:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_gray:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_gray:n }{\token_to_meaning:N \__color_backend_fill_gray:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_fill_rgb:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_rgb:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_rgb:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_rgb:n }{\token_to_meaning:N \__color_backend_fill_rgb:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_fill:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill:n }{\token_to_meaning:N \__color_backend_fill:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_stroke_cmyk:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_cmyk:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_cmyk:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_cmyk:n }{\token_to_meaning:N \__color_backend_stroke_cmyk:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_stroke_gray:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_gray:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_gray:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_gray:n }{\token_to_meaning:N \__color_backend_stroke_gray:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_stroke_rgb:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_rgb:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_rgb:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_rgb:n }{\token_to_meaning:N \__color_backend_stroke_rgb:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_stroke:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke:n }{\token_to_meaning:N \__color_backend_stroke:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_fill_separation:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_separation:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_separation:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_separation:nn }{\token_to_meaning:N \__color_backend_fill_separati
on:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__color_backend_stroke_separation:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_separation:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_separation:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_separation:nn }{\token_to_meaning:N \__color_backend_stroke_sepa
ration:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_fill_devicen:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_devicen:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_devicen:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_devicen:nn }{\token_to_meaning:N \__color_backend_fill_devicen:nn 
}

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_fill_devicen:nn 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_stroke_devicen:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_devicen:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_devicen:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_devicen:nn }{\token_to_meaning:N \__color_backend_stroke_devicen
:nn }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_stroke_devicen:nn 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_fill_reset: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_fill_reset: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_fill_reset: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_fill_reset: }{\token_to_meaning:N \__color_backend_fill_reset: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_fill_reset: 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__color_backend_stroke_reset: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__color_backend_stroke_reset: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__color_backend_stroke_reset: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__color_
backend_stroke_reset: }{\token_to_meaning:N \__color_backend_stroke_reset: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__color_backend_stroke_reset: 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__box_backend_clip:N 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__box_backend_clip:N 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__box_backend_clip:N 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__box_ba
ckend_clip:N }{\token_to_meaning:N \__box_backend_clip:N }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__box_backend_rotate:Nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__box_backend_rotate:Nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__box_backend_rotate:Nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__box_ba
ckend_rotate:Nn }{\token_to_meaning:N \__box_backend_rotate:Nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__box_backend_rotate_aux:Nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__box_backend_rotate_aux:Nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__box_backend_rotate_aux:Nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__box_ba
ckend_rotate_aux:Nn }{\token_to_meaning:N \__box_backend_rotate_aux:Nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\fp_new:N #1->\cs_new_eq:NN #1\c_zero_fp 
#1<-\l__box_backend_cos_fp 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\l__box_backend_cos_fp 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__box_backend_cos_fp 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__box_backend_cos_fp 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__box_b
ackend_cos_fp }{\token_to_meaning:N \l__box_backend_cos_fp }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__box_backend_cos_fp 

\fp_new:N #1->\cs_new_eq:NN #1\c_zero_fp 
#1<-\l__box_backend_sin_fp 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\l__box_backend_sin_fp 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__box_backend_sin_fp 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__box_backend_sin_fp 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__box_b
ackend_sin_fp }{\token_to_meaning:N \l__box_backend_sin_fp }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__box_backend_sin_fp 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__box_backend_scale:Nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__box_backend_scale:Nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__box_backend_scale:Nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__box_ba
ckend_scale:Nnn }{\token_to_meaning:N \__box_backend_scale:Nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__draw_backend_literal:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_literal:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_literal:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_literal:n }{\token_to_meaning:N \__draw_backend_literal:n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__draw_backend_literal:n 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__draw_backend_literal:n 
#2<-x

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__draw_backend_literal:n 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1->\tex_pdfliteral:D {\exp_not:n {#1}}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__draw_backend_literal:n 
\exp_not:N \__draw_backend_literal:n \tl_to_str:n {x},\exp_not:N \scan_stop: ,\
exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__draw_backend_literal:n 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__draw_backend_literal
#2<-n
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__draw_backend_literal
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__draw_backend_literal}{n}\c
_true_bool \__draw_backend_literal:n x,\scan_stop: ,\q__cs_recursion_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__draw_backend_literal
#2<-n
#3<-\c_true_bool 
#4<-\__draw_backend_literal:n 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__draw_backend_literal:n 
#2<-__draw_backend_literal
#3<-n
#4<-x

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}x
\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\fi: \__cs_generate_
variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__draw_backend_literal:n {_
_draw_backend_literal}{x}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__draw_backend_literal:n 
#7<-__draw_backend_literal
#8<-x

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__draw_backend_literal:x

\l__exp_internal_tl ->\__cs_generate_variant:wwNN x\s__cs_mark \s__cs_stop \__d
raw_backend_literal:n \__draw_backend_literal:x 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-x
#2<-
#3<-\__draw_backend_literal:n 
#4<-\__draw_backend_literal:x 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__draw_backend_literal:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {x}\__cs_tmp:w \__draw_back
end_literal:x {\exp_not:c {exp_args:Nx}\exp_not:N \__draw_backend_literal:n }\g
roup_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-x

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-x

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nx\cs_end: \scan_stop: \prg_retu
rn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {x}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__draw_backend_literal:x 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_literal:x 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_literal:x 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_literal:x }{\token_to_meaning:N \__draw_backend_literal:x }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__draw_backend_literal:n 
#2<-__draw_backend_literal
#3<-n
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark n { {}\
fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__draw_b
ackend_literal:n {__draw_backend_literal}{\scan_stop: }}\__cs_generate_variant:
Nnnw \__draw_backend_literal:n {__draw_backend_literal}{n}

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_begin: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_begin: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_begin: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_begin: }{\token_to_meaning:N \__draw_backend_begin: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_end: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_end: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_end: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_end: }{\token_to_meaning:N \__draw_backend_end: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__draw_backend_scope_begin: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_scope_begin: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_scope_begin: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_scope_begin: }{\token_to_meaning:N \__draw_backend_scope_begin: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__draw_backend_scope_begin: 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__draw_backend_scope_end: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_scope_end: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_scope_end: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_scope_end: }{\token_to_meaning:N \__draw_backend_scope_end: }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__draw_backend_scope_end: 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_moveto:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_moveto:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_moveto:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_moveto:nn }{\token_to_meaning:N \__draw_backend_moveto:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_lineto:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_lineto:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_lineto:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_lineto:nn }{\token_to_meaning:N \__draw_backend_lineto:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_curveto:nnnnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_curveto:nnnnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_curveto:nnnnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_curveto:nnnnnn }{\token_to_meaning:N \__draw_backend_curveto:nnnnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_rectangle:nnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_rectangle:nnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_rectangle:nnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_rectangle:nnnn }{\token_to_meaning:N \__draw_backend_rectangle:nnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_evenodd_rule: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_evenodd_rule: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_evenodd_rule: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_evenodd_rule: }{\token_to_meaning:N \__draw_backend_evenodd_rule: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_nonzero_rule: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_nonzero_rule: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_nonzero_rule: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_nonzero_rule: }{\token_to_meaning:N \__draw_backend_nonzero_rule: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\bool_new:N #1->\cs_new_eq:NN #1\c_false_bool 
#1<-\g__draw_draw_eor_bool 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\g__draw_draw_eor_bool 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__draw_draw_eor_bool 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__draw_draw_eor_bool 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__draw_
draw_eor_bool }{\token_to_meaning:N \g__draw_draw_eor_bool }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__draw_draw_eor_bool 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_closepath: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_closepath: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_closepath: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_closepath: }{\token_to_meaning:N \__draw_backend_closepath: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_stroke: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_stroke: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_stroke: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_stroke: }{\token_to_meaning:N \__draw_backend_stroke: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_closestroke: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_closestroke: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_closestroke: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_closestroke: }{\token_to_meaning:N \__draw_backend_closestroke: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_fill: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_fill: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_fill: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_fill: }{\token_to_meaning:N \__draw_backend_fill: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_fillstroke: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_fillstroke: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_fillstroke: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_fillstroke: }{\token_to_meaning:N \__draw_backend_fillstroke: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_clip: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_clip: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_clip: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_clip: }{\token_to_meaning:N \__draw_backend_clip: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_discardpath: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_discardpath: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_discardpath: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_discardpath: }{\token_to_meaning:N \__draw_backend_discardpath: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_dash_pattern:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_dash_pattern:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_dash_pattern:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_dash_pattern:nn }{\token_to_meaning:N \__draw_backend_dash_pattern:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__draw_backend_dash:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_dash:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_dash:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_dash:n }{\token_to_meaning:N \__draw_backend_dash:n }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_linewidth:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_linewidth:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_linewidth:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_linewidth:n }{\token_to_meaning:N \__draw_backend_linewidth:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_miterlimit:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_miterlimit:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_miterlimit:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_miterlimit:n }{\token_to_meaning:N \__draw_backend_miterlimit:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_cap_butt: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_cap_butt: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_cap_butt: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_cap_butt: }{\token_to_meaning:N \__draw_backend_cap_butt: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_cap_round: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_cap_round: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_cap_round: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_cap_round: }{\token_to_meaning:N \__draw_backend_cap_round: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_cap_rectangle: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_cap_rectangle: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_cap_rectangle: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_cap_rectangle: }{\token_to_meaning:N \__draw_backend_cap_rectangle: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_join_miter: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_join_miter: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_join_miter: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_join_miter: }{\token_to_meaning:N \__draw_backend_join_miter: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_join_round: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_join_round: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_join_round: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_join_round: }{\token_to_meaning:N \__draw_backend_join_round: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_join_bevel: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_join_bevel: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_join_bevel: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_join_bevel: }{\token_to_meaning:N \__draw_backend_join_bevel: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_cm:nnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_cm:nnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_cm:nnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_cm:nnnn }{\token_to_meaning:N \__draw_backend_cm:nnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__draw_backend_box_use:Nnnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__draw_backend_box_use:Nnnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__draw_backend_box_use:Nnnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__draw_b
ackend_box_use:Nnnnn }{\token_to_meaning:N \__draw_backend_box_use:Nnnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_loaded:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_loaded:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_loaded:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_loaded:n }{\token_to_meaning:N \__graphics_backend_loaded:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\__graphics_backend_loaded:n #1->\cs_if_exist:NTF \hook_gput_code:nnn {\hook_gp
ut_code:nnn {file/l3graphics.sty/after}{backend}{#1}}{#1}
#1<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\hook_gput_code:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\hook_gput_code:nnn {file/l3graphics.sty/after}{backend}{\seq_set_from_clis
t:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\hook_gput_code:nnn #1#2->\__hook_normalize_hook_args:Nnn \__hook_gput_code:nnn
 {#1}{#2}
#1<-file/l3graphics.sty/after
#2<-backend

\__hook_normalize_hook_args:Nnn #1#2#3->\__hook_normalize_hook_args_aux:Nn #1{{
\__hook_parse_label_default:n {#2}}{\__hook_parse_label_default:n {#3}}}
#1<-\__hook_gput_code:nnn 
#2<-file/l3graphics.sty/after
#3<-backend

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_gput_code:nnn 
#2<-{\__hook_parse_label_default:n {file/l3graphics.sty/after}}{\__hook_parse_l
abel_default:n {backend}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_gput_code:nnn {\__hook_parse_label_default:n
 {file/l3graphics.sty/after}}{\__hook_parse_label_default:n {backend}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-file/l3graphics.sty/after

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}file/l3graphics.sty/after{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}file/l3graphics.sty/after{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {file/l3graphics.sty/after}\__hook_parse_dot_label
:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-file/l3graphics.sty/after
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: file/l3graphics.sty/after

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil \__tl_trim_spaces_auxi
ii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: file/l3graphics.sty/after
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: file/l3graphics.sty/after

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-file/l3graphics.sty/after

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {file/l3graphics.sty/after}{.}{\__hook_currname_or_default:
 }{\__hook_parse_dot_label:w file/l3graphics.sty/after./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w file/l3graphics.sty/after./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-file/l3graphics.sty/after
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {file/l3graphics.sty/after}}{\__hoo
k_parse_dot_label_cleanup:w file/l3graphics.sty/after./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {file/l3graphics.sty/after}
#2<-\__hook_parse_dot_label_cleanup:w file/l3graphics.sty/after./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-file/l3graphics.sty/after

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-backend

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}backend{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}backend{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {backend}\__hook_parse_dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-backend
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: backend

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: backend\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: backend\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: backend\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: backend
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: backend

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-backend

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-backend

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {backend}{.}{\__hook_currname_or_default: }{\__hook_parse_d
ot_label:w backend./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w backend./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-backend
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-backend

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {backend}}{\__hook_parse_dot_label_
cleanup:w backend./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {backend}
#2<-\__hook_parse_dot_label_cleanup:w backend./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-backend

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_gput_code:nnn #1#2#3->\__hook_if_execute_immediately:nTF {#1}{#3}{\__ho
ok_if_usable:nTF {#1}{\__hook_hook_gput_code_do:nnn {#1}{#2}{#3}\__hook_update_
hook_code:n {#1}}{\__hook_if_disabled:nTF {#1}{\msg_error:nnn {hooks}{hook-disa
bled}{#1}}{\__hook_try_declaring_generic_hook:nnn {#1}{#2}{#3}}}}
#1<-file/l3graphics.sty/after
#2<-backend
#3<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\__hook_if_execute_immediately:nTF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN
 \__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_m
ark \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_retur
n_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_file/l3graphics.
sty/after_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_m
ark \prg_return_false: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}
#2<-\__hook_if_usable:nTF {file/l3graphics.sty/after}{\__hook_hook_gput_code_do
:nnn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:Nn \l_graphics_se
arch_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}\__hook_update_hook_code:n {file/l
3graphics.sty/after}}{\__hook_if_disabled:nTF {file/l3graphics.sty/after}{\msg_
error:nnn {hooks}{hook-disabled}{file/l3graphics.sty/after}}{\__hook_try_declar
ing_generic_hook:nnn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:N
n \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}}}

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_hook_gput_code_do:nnn {file/l3graphics.sty/after}{backend}{\seq_set
_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}\__ho
ok_update_hook_code:n {file/l3graphics.sty/after}
#2<-\__hook_if_disabled:nTF {file/l3graphics.sty/after}{\msg_error:nnn {hooks}{
hook-disabled}{file/l3graphics.sty/after}}{\__hook_try_declaring_generic_hook:n
nn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:Nn \l_graphics_sear
ch_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}}

\__hook_if_disabled:nTF #1->\bool_lazy_and:nnTF {\tl_if_exist_p:c {g__hook_#1_d
eclared_tl}}{!\tl_if_exist_p:c {__hook #1}}{\prg_return_true: }{\prg_return_fal
se: }\exp_end: 
#1<-file/l3graphics.sty/after

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\tl_if_exist_p:c {g__hook_file/l3graphics.sty/after_declared_tl}
#2<-!\tl_if_exist_p:c {__hook file/l3graphics.sty/after}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_exist_p:c {g__hook_file/l3graphics.sty/after_declared_tl}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_exist_p:c {g__hook_file/l3graphics.sty/after_declared_tl}

\exp_end_continue_f:w ->`^^@

\tl_if_exist_p:c #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: \c_true_bool \c_false_bool 
#1<-g__hook_file/l3graphics.sty/after_declared_tl

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_file/l3graphics.sty/after_declare
d_tl\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\bool_if_p:n {!\tl_if_exist_p:c {__hook file/l3graphics.sty/after}}
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\msg_error:nnn {hooks}{hook-disabled}{file/l3graphics.sty/after}
#2<-\__hook_try_declaring_generic_hook:nnn {file/l3graphics.sty/after}{backend}
{\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jp
eg}}

\__hook_try_declaring_generic_hook:nnn #1->\__hook_try_declaring_generic_hook:w
nTF #1///\scan_stop: {#1}\hook_gput_code:nnn \__hook_gput_undeclared_hook:nnn {
#1}
#1<-file/l3graphics.sty/after

\__hook_try_declaring_generic_hook:wnTF #1/#2/#3/#4\scan_stop: #5->\__hook_if_g
eneric:nTF {#5}{\__hook_if_usable:nF {#5}{\str_if_eq:nnT {#1}{cmd}{\__hook_try_
put_cmd_hook:n {#5}}\__hook_make_usable:n {#5}}\__hook_if_generic_reversed:nT {
#5}{\tl_gset:cn {g__hook_#5_reversed_tl}{-}}\prg_return_true: }{\__hook_if_depr
ecated_generic:nTF {#5}{\__hook_deprecated_generic_warn:n {#5}\exp_after:wN \__
hook_declare_deprecated_generic:NNn \exp:w }{\prg_return_false: }}\exp_end: 
#1<-file
#2<-l3graphics.sty
#3<-after
#4<-//
#5<-file/l3graphics.sty/after

\__hook_if_generic:nTF #1->\__hook_if_generic:w #1///\s__hook_mark \exp_end: 
#1<-file/l3graphics.sty/after

\__hook_if_generic:w #1/#2/#3/#4\s__hook_mark ->\cs_if_exist:cTF {c__hook_gener
ic_#1/./#3_tl}{\prg_return_true: }{\prg_return_false: }
#1<-file
#2<-l3graphics.sty
#3<-after
#4<-//

\cs_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-c__hook_generic_file/./after_tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__hook_generic_file/./after_tl\cs_end: \
scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_if_usable:nF {file/l3graphics.sty/after}{\str_if_eq:nnT {file}{cmd}
{\__hook_try_put_cmd_hook:n {file/l3graphics.sty/after}}\__hook_make_usable:n {
file/l3graphics.sty/after}}\__hook_if_generic_reversed:nT {file/l3graphics.sty/
after}{\tl_gset:cn {g__hook_file/l3graphics.sty/after_reversed_tl}{-}}\prg_retu
rn_true: 
#2<-\__hook_if_deprecated_generic:nTF {file/l3graphics.sty/after}{\__hook_depre
cated_generic_warn:n {file/l3graphics.sty/after}\exp_after:wN \__hook_declare_d
eprecated_generic:NNn \exp:w }{\prg_return_false: }

\__hook_if_usable:nF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: {}
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\str_if_eq:nnT {file}{cmd}{\__hook_try_put_cmd_hook:n {file/l3graphics.sty/
after}}\__hook_make_usable:n {file/l3graphics.sty/after}

\str_if_eq:nnT #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_T_true:w \fi: \use_none:n 
#1<-file
#2<-cmd

\use_none:n #1->
#1<-\__hook_try_put_cmd_hook:n {file/l3graphics.sty/after}

\__hook_make_usable:n #1->\tl_if_exist:cF {__hook #1}{\seq_gput_right:Nn \g__ho
ok_all_seq {#1}\tl_new:c {__hook #1}\__hook_init_structure:n {#1}\clist_new:c {
g__hook_#1_labels_clist}\tl_new:c {g__hook_#1_reversed_tl}\__hook_include_legac
y_code_chunk:n {#1}}
#1<-file/l3graphics.sty/after

\tl_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-__hook file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\seq_gput_right:Nn \g__hook_all_seq {file/l3graphics.sty/after}\tl_new:c {_
_hook file/l3graphics.sty/after}\__hook_init_structure:n {file/l3graphics.sty/a
fter}\clist_new:c {g__hook_file/l3graphics.sty/after_labels_clist}\tl_new:c {g_
_hook_file/l3graphics.sty/after_reversed_tl}\__hook_include_legacy_code_chunk:n
 {file/l3graphics.sty/after}

\seq_gput_right:Nn #1#2->\tl_gput_right:Nn #1{\__seq_item:n {#2}}
#1<-\g__hook_all_seq 
#2<-file/l3graphics.sty/after

\tl_gput_right:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w \exp_after:
wN {#1#2}}
#1<-\g__hook_all_seq 
#2<-\__seq_item:n {file/l3graphics.sty/after}

\g__hook_all_seq ->\s__seq \__seq_item:n {para/before}\__seq_item:n {para/after
}\__seq_item:n {para/begin}\__seq_item:n {para/end}\__seq_item:n {begindocument
}\__seq_item:n {begindocument/before}\__seq_item:n {begindocument/end}\__seq_it
em:n {include/before}\__seq_item:n {include/end}\__seq_item:n {include/after}\_
_seq_item:n {include/excluded}\__seq_item:n {selectfont}\__seq_item:n {rmfamily
}\__seq_item:n {sffamily}\__seq_item:n {ttfamily}\__seq_item:n {normalfont}\__s
eq_item:n {expand@font@defaults}\__seq_item:n {bfseries}\__seq_item:n {bfseries
/defaults}\__seq_item:n {mdseries}\__seq_item:n {mdseries/defaults}\__seq_item:
n {enddocument}\__seq_item:n {enddocument/afterlastpage}\__seq_item:n {enddocum
ent/afteraux}\__seq_item:n {enddocument/info}\__seq_item:n {enddocument/end}\__
seq_item:n {insertmark}\__seq_item:n {package/before}\__seq_item:n {class/befor
e}\__seq_item:n {package/after}\__seq_item:n {class/after}\__seq_item:n {file/b
efore}\__seq_item:n {file/after}\__seq_item:n {shipout/before}\__seq_item:n {sh
ipout/after}\__seq_item:n {shipout/foreground}\__seq_item:n {shipout/background
}\__seq_item:n {shipout/firstpage}\__seq_item:n {shipout/lastpage}\__seq_item:n
 {file/dinbrief.cls/after}\__seq_item:n {file/pgfpages.sty/after}\__seq_item:n 
{file/pgfmorepages.sty/after}\__seq_item:n {file/babel.sty/before}\__seq_item:n
 {file/bigfoot.sty/after}\__seq_item:n {file/ulem.sty/after}\__seq_item:n {file
/varwidth.sty/after}\__seq_item:n {file/german.sty/after}\__seq_item:n {file/ng
erman.sty/after}\__seq_item:n {file/memoir.cls/before}\__seq_item:n {file/memoi
r.cls/after}

\tl_new:c ->\exp_args:Nc \tl_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_new:N 
#2<-__hook file/l3graphics.sty/after

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/l3graphics.sty/after 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__hook file/l3graphics.sty/after 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__hook file/l3graphics.sty/after 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__hook f
ile/l3graphics.sty/after }{\token_to_meaning:N \__hook file/l3graphics.sty/afte
r }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook file/l3graphics.sty/after 

\__hook_init_structure:n #1->\__hook_if_structure_exist:nF {#1}{\prop_new:c {g_
_hook_#1_code_prop}\tl_new:c {__hook_toplevel #1}\tl_new:c {__hook_next #1}}
#1<-file/l3graphics.sty/after

\__hook_if_structure_exist:nF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\pr
g_return_true: }{\prg_return_false: }\exp_end: {}
#1<-file/l3graphics.sty/after

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_file/l3graphics.sty/after_code_prop

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_file/l3graphics.sty/after_code_pr
op\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\prop_new:c {g__hook_file/l3graphics.sty/after_code_prop}\tl_new:c {__hook_
toplevel file/l3graphics.sty/after}\tl_new:c {__hook_next file/l3graphics.sty/a
fter}

\prop_new:c ->\exp_args:Nc \prop_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_new:N 
#2<-g__hook_file/l3graphics.sty/after_code_prop

\prop_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__hook_
file/l3graphics.sty/after_code_prop }{\token_to_meaning:N \g__hook_file/l3graph
ics.sty/after_code_prop }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\tl_new:c ->\exp_args:Nc \tl_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_new:N 
#2<-__hook_toplevel file/l3graphics.sty/after

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel file/l3graphics.sty/after 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__hook_toplevel file/l3graphics.sty/after 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__hook_toplevel file/l3graphics.sty/after 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__hook_t
oplevel file/l3graphics.sty/after }{\token_to_meaning:N \__hook_toplevel file/l
3graphics.sty/after }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_toplevel file/l3graphics.sty/after 

\tl_new:c ->\exp_args:Nc \tl_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_new:N 
#2<-__hook_next file/l3graphics.sty/after

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next file/l3graphics.sty/after 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__hook_next file/l3graphics.sty/after 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__hook_next file/l3graphics.sty/after 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__hook_n
ext file/l3graphics.sty/after }{\token_to_meaning:N \__hook_next file/l3graphic
s.sty/after }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_next file/l3graphics.sty/after 

\clist_new:c ->\exp_args:Nc \tl_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_new:N 
#2<-g__hook_file/l3graphics.sty/after_labels_clist

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__hook_
file/l3graphics.sty/after_labels_clist }{\token_to_meaning:N \g__hook_file/l3gr
aphics.sty/after_labels_clist }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\tl_new:c ->\exp_args:Nc \tl_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_new:N 
#2<-g__hook_file/l3graphics.sty/after_reversed_tl

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\g__hook_file/l3graphics.sty/after_reversed_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__hook_file/l3graphics.sty/after_reversed_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__hook_file/l3graphics.sty/after_reversed_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__hook_
file/l3graphics.sty/after_reversed_tl }{\token_to_meaning:N \g__hook_file/l3gra
phics.sty/after_reversed_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__hook_file/l3graphics.sty/after_reversed_tl 

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/l3graphics.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/l3graphics.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/l3graphics.sty/afterhook\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/l3graphics.sty/afterhook}{\exp_args:Nnnv \__hook_hoo
k_gput_code_do:nnn {file/l3graphics.sty/after}{legacy}{@file/l3graphics.sty/aft
erhook}\__hook_tl_gclear:c {@file/l3graphics.sty/afterhook}}

\__hook_if_generic_reversed:nT #1->\__hook_if_generic_reversed:w #1///\scan_sto
p: \exp_end: \use:n \use_none:n 
#1<-file/l3graphics.sty/after

\__hook_if_generic_reversed:w #1/#2/#3/#4\scan_stop: ->\if_charcode:w -\cs:w c_
_hook_generic_#1/./#3_tl\cs_end: \prg_return_true: \else: \prg_return_false: \f
i: 
#1<-file
#2<-l3graphics.sty
#3<-after
#4<-//

\c__hook_generic_file/./after_tl ->-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\tl_gset:cn {g__hook_file/l3graphics.sty/after_reversed_tl}{-}

\tl_gset:cn ->\exp_args:Nc \tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_gset:Nn 
#2<-g__hook_file/l3graphics.sty/after_reversed_tl

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_file/l3graphics.sty/after_reversed_tl 
#2<--

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\hook_gput_code:nnn 
#2<-\__hook_gput_undeclared_hook:nnn 

\hook_gput_code:nnn #1#2->\__hook_normalize_hook_args:Nnn \__hook_gput_code:nnn
 {#1}{#2}
#1<-file/l3graphics.sty/after
#2<-backend

\__hook_normalize_hook_args:Nnn #1#2#3->\__hook_normalize_hook_args_aux:Nn #1{{
\__hook_parse_label_default:n {#2}}{\__hook_parse_label_default:n {#3}}}
#1<-\__hook_gput_code:nnn 
#2<-file/l3graphics.sty/after
#3<-backend

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_gput_code:nnn 
#2<-{\__hook_parse_label_default:n {file/l3graphics.sty/after}}{\__hook_parse_l
abel_default:n {backend}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_gput_code:nnn {\__hook_parse_label_default:n
 {file/l3graphics.sty/after}}{\__hook_parse_label_default:n {backend}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-file/l3graphics.sty/after

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}file/l3graphics.sty/after{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}file/l3graphics.sty/after{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {file/l3graphics.sty/after}\__hook_parse_dot_label
:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-file/l3graphics.sty/after
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: file/l3graphics.sty/after

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: file/l3graphics.sty/after\s__tl_nil \__tl_trim_spaces_auxi
ii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: file/l3graphics.sty/after
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: file/l3graphics.sty/after

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-file/l3graphics.sty/after

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {file/l3graphics.sty/after}{.}{\__hook_currname_or_default:
 }{\__hook_parse_dot_label:w file/l3graphics.sty/after./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w file/l3graphics.sty/after./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-file/l3graphics.sty/after
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-file/l3graphics.sty/after

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {file/l3graphics.sty/after}}{\__hoo
k_parse_dot_label_cleanup:w file/l3graphics.sty/after./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {file/l3graphics.sty/after}
#2<-\__hook_parse_dot_label_cleanup:w file/l3graphics.sty/after./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-file/l3graphics.sty/after

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-backend

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}backend{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}backend{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {backend}\__hook_parse_dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-backend
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: backend

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: backend\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: backend\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: backend\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: backend
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: backend

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-backend

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-backend

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {backend}{.}{\__hook_currname_or_default: }{\__hook_parse_d
ot_label:w backend./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w backend./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-backend
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-backend

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {backend}}{\__hook_parse_dot_label_
cleanup:w backend./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {backend}
#2<-\__hook_parse_dot_label_cleanup:w backend./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-backend

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_gput_code:nnn #1#2#3->\__hook_if_execute_immediately:nTF {#1}{#3}{\__ho
ok_if_usable:nTF {#1}{\__hook_hook_gput_code_do:nnn {#1}{#2}{#3}\__hook_update_
hook_code:n {#1}}{\__hook_if_disabled:nTF {#1}{\msg_error:nnn {hooks}{hook-disa
bled}{#1}}{\__hook_try_declaring_generic_hook:nnn {#1}{#2}{#3}}}}
#1<-file/l3graphics.sty/after
#2<-backend
#3<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\__hook_if_execute_immediately:nTF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN
 \__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_m
ark \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_retur
n_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_file/l3graphics.
sty/after_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_m
ark \prg_return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_file/l3graphics.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}
#2<-\__hook_if_usable:nTF {file/l3graphics.sty/after}{\__hook_hook_gput_code_do
:nnn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:Nn \l_graphics_se
arch_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}\__hook_update_hook_code:n {file/l
3graphics.sty/after}}{\__hook_if_disabled:nTF {file/l3graphics.sty/after}{\msg_
error:nnn {hooks}{hook-disabled}{file/l3graphics.sty/after}}{\__hook_try_declar
ing_generic_hook:nnn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:N
n \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}}}

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\__hook_hook_gput_code_do:nnn {file/l3graphics.sty/after}{backend}{\seq_set
_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}\__ho
ok_update_hook_code:n {file/l3graphics.sty/after}
#2<-\__hook_if_disabled:nTF {file/l3graphics.sty/after}{\msg_error:nnn {hooks}{
hook-disabled}{file/l3graphics.sty/after}}{\__hook_try_declaring_generic_hook:n
nn {file/l3graphics.sty/after}{backend}{\seq_set_from_clist:Nn \l_graphics_sear
ch_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}}

\__hook_hook_gput_code_do:nnn #1#2#3->\__hook_debug:n {\iow_term:x {**** Add to
 \__hook_if_usable:nF {#1}{undeclared }hook #1 (#2)\on@line \space <- \tl_to_st
r:n {#3}}}\str_if_eq:nnTF {#2}{top-level}{\str_if_eq:eeTF {top-level}{\__hook_c
urrname_or_default: }{\__hook_init_structure:n {#1}\__hook_tl_gput_right:cn {__
hook_toplevel #1}{#3}}{\msg_error:nnn {hooks}{misused-top-level}{#1}}}{\prop_ge
t:cnNTF {g__hook_#1_code_prop}{#2}\l__hook_return_tl {\prop_gput:cno {g__hook_#
1_code_prop}{#2}{\l__hook_return_tl #3}}{\prop_gput:cnn {g__hook_#1_code_prop}{
#2}{#3}}}
#1<-file/l3graphics.sty/after
#2<-backend
#3<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\__hook_debug:n #1->
#1<-\iow_term:x {**** Add to \__hook_if_usable:nF {file/l3graphics.sty/after}{u
ndeclared }hook file/l3graphics.sty/after (backend)\on@line \space <- \tl_to_st
r:n {\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg
,.jpeg}}}

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend
#2<-top-level

\use_ii:nn #1#2->#2
#1<-\str_if_eq:eeTF {top-level}{\__hook_currname_or_default: }{\__hook_init_str
ucture:n {file/l3graphics.sty/after}\__hook_tl_gput_right:cn {__hook_toplevel f
ile/l3graphics.sty/after}{\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.p
df,.eps,.ps,.png,.jpg,.jpeg}}}{\msg_error:nnn {hooks}{misused-top-level}{file/l
3graphics.sty/after}}
#2<-\prop_get:cnNTF {g__hook_file/l3graphics.sty/after_code_prop}{backend}\l__h
ook_return_tl {\prop_gput:cno {g__hook_file/l3graphics.sty/after_code_prop}{bac
kend}{\l__hook_return_tl \seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pd
f,.eps,.ps,.png,.jpg,.jpeg}}}{\prop_gput:cnn {g__hook_file/l3graphics.sty/after
_code_prop}{backend}{\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.e
ps,.ps,.png,.jpg,.jpeg}}}

\prop_get:cnNTF ->\exp_args:Nc \prop_get:NnNTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_get:NnNTF 
#2<-g__hook_file/l3graphics.sty/after_code_prop

\prop_get:NnNTF #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}\prg_return
_true: }{\prg_return_false: }\exp_end: 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-backend
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-backend

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\g__hook_file/l3graphics.sty/after_code_prop 
#3<-\tl_to_str:n {backend}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-backend
#3<-\tl_set:Nn \l__hook_return_tl {##2}\prg_return_true: 
#4<-\prg_return_false: 

\cs_set:Npn ->\tex_long:D \tex_def:D 

\g__hook_file/l3graphics.sty/after_code_prop ->\s__prop 

\__prop_split_aux:w #1\__prop_pair:wn backend\s__prop #2#3\s__prop_mark #4#5\s_
_prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}\prg_return_true: }{\prg_retu
rn_false: }
#1<-\s__prop \s__prop_mark \use_i:nn 
#2<-
#3<-
#4<-\use_ii:nn 
#5<-

\use_ii:nn #1#2->#2
#1<-\tl_set:Nn \l__hook_return_tl {}\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prop_gput:cno {g__hook_file/l3graphics.sty/after_code_prop}{backend}{\l__h
ook_return_tl \seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,
.png,.jpg,.jpeg}}
#2<-\prop_gput:cnn {g__hook_file/l3graphics.sty/after_code_prop}{backend}{\seq_
set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}

\prop_gput:cnn ->\exp_args:Nc \prop_gput:Nnn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gput:Nnn 
#2<-g__hook_file/l3graphics.sty/after_code_prop

\prop_gput:Nnn ->\__prop_put:NNnn \__kernel_tl_gset:Nx 

\__prop_put:NNnn #1#2#3#4->\tl_set:Nn \l__prop_internal_tl {\exp_not:N \__prop_
pair:wn \tl_to_str:n {#3}\s__prop {\exp_not:n {#4}}}\__prop_split:NnTF #2{#3}{#
1#2{\exp_not:n {##1}\l__prop_internal_tl \exp_not:n {##3}}}{#1#2{\exp_not:o {#2
}\l__prop_internal_tl }}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/l3graphics.sty/after_code_prop 
#3<-backend
#4<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__prop_internal_tl 
#2<-\exp_not:N \__prop_pair:wn \tl_to_str:n {backend}\s__prop {\exp_not:n {\seq
_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}}

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-backend

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\g__hook_file/l3graphics.sty/after_code_prop 
#3<-\tl_to_str:n {backend}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-backend
#3<-\__kernel_tl_gset:Nx \g__hook_file/l3graphics.sty/after_code_prop {\exp_not
:n {##1}\l__prop_internal_tl \exp_not:n {##3}}
#4<-\__kernel_tl_gset:Nx \g__hook_file/l3graphics.sty/after_code_prop {\exp_not
:o {\g__hook_file/l3graphics.sty/after_code_prop }\l__prop_internal_tl }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\g__hook_file/l3graphics.sty/after_code_prop ->\s__prop 

\__prop_split_aux:w #1\__prop_pair:wn backend\s__prop #2#3\s__prop_mark #4#5\s_
_prop_stop ->#4{\__kernel_tl_gset:Nx \g__hook_file/l3graphics.sty/after_code_pr
op {\exp_not:n {#1}\l__prop_internal_tl \exp_not:n {#3}}}{\__kernel_tl_gset:Nx 
\g__hook_file/l3graphics.sty/after_code_prop {\exp_not:o {\g__hook_file/l3graph
ics.sty/after_code_prop }\l__prop_internal_tl }}
#1<-\s__prop \s__prop_mark \use_i:nn 
#2<-
#3<-
#4<-\use_ii:nn 
#5<-

\use_ii:nn #1#2->#2
#1<-\__kernel_tl_gset:Nx \g__hook_file/l3graphics.sty/after_code_prop {\exp_not
:n {\s__prop \s__prop_mark \use_i:nn }\l__prop_internal_tl \exp_not:n {}}
#2<-\__kernel_tl_gset:Nx \g__hook_file/l3graphics.sty/after_code_prop {\exp_not
:o {\g__hook_file/l3graphics.sty/after_code_prop }\l__prop_internal_tl }

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\g__hook_file/l3graphics.sty/after_code_prop ->\s__prop 

\l__prop_internal_tl ->\exp_not:N \__prop_pair:wn \tl_to_str:n {backend}\s__pro
p {\exp_not:n {\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps
,.png,.jpg,.jpeg}}}

\__hook_update_hook_code:n #1->\__hook_debug:n {\iow_term:x {
Update code for hook '#1'\on@line :
}}\__hook_include_legacy_code_chunk:n {#1}\__hook_if_usable:nT {#1}{\prop_if_em
pty:cTF {g__hook_#1_code_prop}{\__hook_tl_gset:co {__hook #1}{\cs:w __hook_topl
evel #1\exp_after:wN \cs_end: \cs:w __hook_next #1\cs_end: }}{\__hook_if_revers
ed:nTF {#1}{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq
:NN \__hook_clist_gput:NV \clist_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:N
n \__hook_tl_gput_right:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_righ
t:NV }\prop_set_eq:Nc \l__hook_work_prop {g__hook_#1_code_prop}\__hook_initiali
ze_single:ccn {__hook #1}{g__hook_#1_labels_clist}{#1}\__hook_debug:n {\exp_arg
s:NNx \prop_gput:Nnn \g__hook_used_prop {#1}{}}}}
#1<-file/l3graphics.sty/after

\__hook_debug:n #1->
#1<-\iow_term:x {
Update code for hook 'file/l3graphics.sty/after'\on@line :
}

\__hook_include_legacy_code_chunk:n #1->\tl_if_exist:cT {@#1hook}{\tl_if_empty:
cF {@#1hook}{\exp_args:Nnnv \__hook_hook_gput_code_do:nnn {#1}{legacy}{@#1hook}
\__hook_tl_gclear:c {@#1hook}}}
#1<-file/l3graphics.sty/after

\tl_if_exist:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: \use:n \use_none:n 
#1<-@file/l3graphics.sty/afterhook

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w @file/l3graphics.sty/afterhook\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\tl_if_empty:cF {@file/l3graphics.sty/afterhook}{\exp_args:Nnnv \__hook_hoo
k_gput_code_do:nnn {file/l3graphics.sty/after}{legacy}{@file/l3graphics.sty/aft
erhook}\__hook_tl_gclear:c {@file/l3graphics.sty/afterhook}}

\__hook_if_usable:nT #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg_
return_false: }\exp_end: \use:n \use_none:n 
#1<-file/l3graphics.sty/after

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook file/l3graphics.sty/after

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook file/l3graphics.sty/after\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\prop_if_empty:cTF {g__hook_file/l3graphics.sty/after_code_prop}{\__hook_tl
_gset:co {__hook file/l3graphics.sty/after}{\cs:w __hook_toplevel file/l3graphi
cs.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/l3graphics.sty/after\
cs_end: }}{\__hook_if_reversed:nTF {file/l3graphics.sty/after}{\cs_set_eq:NN \_
_hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \c
list_gput_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \
cs_set_eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__ho
ok_work_prop {g__hook_file/l3graphics.sty/after_code_prop}\__hook_initialize_si
ngle:ccn {__hook file/l3graphics.sty/after}{g__hook_file/l3graphics.sty/after_l
abels_clist}{file/l3graphics.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gpu
t:Nnn \g__hook_used_prop {file/l3graphics.sty/after}{}}}

\prop_if_empty:cTF ->\exp_args:Nc \prop_if_empty:NTF 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty:NTF 
#2<-g__hook_file/l3graphics.sty/after_code_prop

\prop_if_empty:NTF #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_file/l3graphics.sty/after_code_prop 
#2<-\c_empty_prop 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\__hook_tl_gset:co {__hook file/l3graphics.sty/after}{\cs:w __hook_toplevel
 file/l3graphics.sty/after\exp_after:wN \cs_end: \cs:w __hook_next file/l3graph
ics.sty/after\cs_end: }
#2<-\__hook_if_reversed:nTF {file/l3graphics.sty/after}{\cs_set_eq:NN \__hook_t
l_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__hook_clist_gput:NV \clist_gp
ut_left:NV }{\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_
eq:NN \__hook_clist_gput:NV \clist_gput_right:NV }\prop_set_eq:Nc \l__hook_work
_prop {g__hook_file/l3graphics.sty/after_code_prop}\__hook_initialize_single:cc
n {__hook file/l3graphics.sty/after}{g__hook_file/l3graphics.sty/after_labels_c
list}{file/l3graphics.sty/after}\__hook_debug:n {\exp_args:NNx \prop_gput:Nnn \
g__hook_used_prop {file/l3graphics.sty/after}{}}

\__hook_if_reversed:nTF #1->\exp_after:wN \__hook_clean_to_scan:w \if:w -\cs:w 
g__hook_#1_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_
mark \prg_return_false: \fi: \exp_end: 
#1<-file/l3graphics.sty/after

\g__hook_file/l3graphics.sty/after_reversed_tl ->-

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_left:Nn \cs_set_eq:NN \__h
ook_clist_gput:NV \clist_gput_left:NV 
#2<-\cs_set_eq:NN \__hook_tl_gput:Nn \__hook_tl_gput_right:Nn \cs_set_eq:NN \__
hook_clist_gput:NV \clist_gput_right:NV 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_tl_gput:Nn 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_clist_gput:NV 

\prop_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_work_prop 
#3<-g__hook_file/l3graphics.sty/after_code_prop

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_work_prop 
#2<-\g__hook_file/l3graphics.sty/after_code_prop 

\__hook_initialize_single:ccn ->\exp_args:Ncc \__hook_initialize_single:NNn 

\exp_args:Ncc #1#2#3->\exp_after:wN #1\cs:w #2\exp_after:wN \cs_end: \cs:w #3\c
s_end: 
#1<-\__hook_initialize_single:NNn 
#2<-__hook file/l3graphics.sty/after
#3<-g__hook_file/l3graphics.sty/after_labels_clist

\__hook_initialize_single:NNn #1#2#3->\seq_clear:N \l__hook_labels_seq \int_zer
o:N \l__hook_labels_int \tl_set:Nn \l__hook_cur_hook_tl {#3}\prop_map_inline:Nn
 \l__hook_work_prop {\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook
_labels_seq {##1}\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new
:c {\__hook_seq_csname:n {##1}}}\prop_map_inline:Nn \l__hook_work_prop {\prop_m
ap_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{####1}{\prop
_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_apply_label_pa
ir:nnn {####1}{##1}}{#3}}}\__hook_debug:n {\__hook_debug_label_data:N \l__hook_
work_prop }\tl_set:Nn \l__hook_rear_tl {0}\tl_set:cn {\__hook_tl_csname:n {0}}{
0}\seq_map_inline:Nn \l__hook_labels_seq {\int_compare:nNnT {\cs:w \__hook_tl_c
sname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{
##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook
_tl_csname:n {0}}\__hook_tl_gclear:N #1\clist_gclear:N #2\bool_while_do:nn {!\s
tr_if_eq_p:Vn \l__hook_front_tl {0}}{\int_decr:N \l__hook_labels_int \prop_get:
NVN \l__hook_work_prop \l__hook_front_tl \l__hook_return_tl \exp_args:NNV \__ho
ok_tl_gput:Nn #1\l__hook_return_tl \__hook_clist_gput:NV #2\l__hook_front_tl \_
_hook_debug:n {\iow_term:x {Handled code for \l__hook_front_tl }}\seq_map_inlin
e:cn {\__hook_seq_csname:n {\l__hook_front_tl }}{\tl_set:cx {\__hook_tl_csname:
n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname:n {##1}\cs_end: -1}}\int_compare:
nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname
:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l
__hook_front_tl {\__hook_tl_csname:n {\l__hook_front_tl }}}\int_compare:nNnF \l
__hook_labels_int =0{\iow_term:x {====================}\iow_term:x {Error: labe
l rules are incompatible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_te
rm:x {====================}}\exp_args:NNo \__hook_tl_gput:Nn #1{\cs:w __hook_to
plevel #3\cs_end: }\__hook_tl_gput_right:No #1{\cs:w __hook_next #3\cs_end: }
#1<-\__hook file/l3graphics.sty/after 
#2<-\g__hook_file/l3graphics.sty/after_labels_clist 
#3<-file/l3graphics.sty/after

\seq_clear:N #1->\seq_set_eq:NN #1\c_empty_seq 
#1<-\l__hook_labels_seq 

\seq_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_labels_seq 
#2<-\c_empty_seq 

\int_zero:N #1->#1=\c_zero_int 
#1<-\l__hook_labels_int 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_cur_hook_tl 
#2<-file/l3graphics.sty/after

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\int_incr:N \l__hook_labels_int \seq_put_right:Nn \l__hook_labels_seq {##1}
\__hook_tl_set:cn {\__hook_tl_csname:n {##1}}{0}\seq_clear_new:c {\__hook_seq_c
sname:n {##1}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_0:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn backend\s__prop {\seq_set_from_cl
ist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}

\__prop_pair:wn #1\s__prop #2->\int_incr:N \l__hook_labels_int \seq_put_right:N
n \l__hook_labels_seq {#1}\__hook_tl_set:cn {\__hook_tl_csname:n {#1}}{0}\seq_c
lear_new:c {\__hook_seq_csname:n {#1}}
#1<-backend
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\int_incr:N #1->\tex_advance:D #1\c_one_int 
#1<-\l__hook_labels_int 

\seq_put_right:Nn #1#2->\tl_put_right:Nn #1{\__seq_item:n {#2}}
#1<-\l__hook_labels_seq 
#2<-backend

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l__hook_labels_seq 
#2<-\__seq_item:n {backend}

\l__hook_labels_seq ->\s__seq 

\__hook_tl_set:cn ->\exp_args:Nc \__hook_tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_set:Nn 
#2<-\__hook_tl_csname:n {backend}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-backend

\__hook_tl_set:Nn #1#2->\cs_set_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_backend_tl 
#2<-0

\seq_clear_new:c ->\exp_args:Nc \seq_clear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_clear_new:N 
#2<-\__hook_seq_csname:n {backend}

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-backend

\seq_clear_new:N #1->\seq_if_exist:NTF #1{\seq_clear:N #1}{\seq_new:N #1}
#1<-\l__hook_label_backend_seq 

\seq_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if
_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\l__hook_label_backend_seq 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\seq_clear:N \l__hook_label_backend_seq 
#2<-\seq_new:N \l__hook_label_backend_seq 

\seq_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_seq 
#1<-\l__hook_label_backend_seq 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__hook_label_backend_seq 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__hook_label_backend_seq 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__hook_
label_backend_seq }{\token_to_meaning:N \l__hook_label_backend_seq }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__hook_label_backend_seq 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\prop_map_inline:Nn \l__hook_work_prop {\__hook_if_label_case:nnnnn {##1}{#
###1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {##1}{####1}}{\__hook_app
ly_label_pair:nnn {####1}{##1}}{file/l3graphics.sty/after}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_0:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn backend\s__prop {\seq_set_from_cl
ist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}

\__prop_pair:wn #1\s__prop #2->\prop_map_inline:Nn \l__hook_work_prop {\__hook_
if_label_case:nnnnn {#1}{##1}{\prop_map_break: }{\__hook_apply_label_pair:nnn {
#1}{##1}}{\__hook_apply_label_pair:nnn {##1}{#1}}{file/l3graphics.sty/after}}
#1<-backend
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l__hook_work_prop 
#2<-\__hook_if_label_case:nnnnn {backend}{##1}{\prop_map_break: }{\__hook_apply
_label_pair:nnn {backend}{##1}}{\__hook_apply_label_pair:nnn {##1}{backend}}{fi
le/l3graphics.sty/after}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_1:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn backend\s__prop {\seq_set_from_cl
ist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}

\__prop_pair:wn #1\s__prop #2->\__hook_if_label_case:nnnnn {backend}{#1}{\prop_
map_break: }{\__hook_apply_label_pair:nnn {backend}{#1}}{\__hook_apply_label_pa
ir:nnn {#1}{backend}}{file/l3graphics.sty/after}
#1<-backend
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\__hook_if_label_case:nnnnn #1#2->\cs:w use_\if_case:w \__hook_str_compare:nn {
#1}{#2}i\or: ii\else: iii\fi: :nnn\cs_end: 
#1<-backend
#2<-backend

\use_i:nnn #1#2#3->#1
#1<-\prop_map_break: 
#2<-\__hook_apply_label_pair:nnn {backend}{backend}
#3<-\__hook_apply_label_pair:nnn {backend}{backend}

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-file/l3graphics.sty/after
#4<-\prop_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_debug:n #1->
#1<-\__hook_debug_label_data:N \l__hook_work_prop 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-0

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-0

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_labels_seq 
#2<-\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end: }=0{\tl_set:cn {
\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__hook_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_labels_seq ->\s__seq \__seq_item:n {backend}

\__seq_item:n #1->\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#1}\cs_end: }=0
{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{#1}\tl_set:Nn \l__hook_re
ar_tl {#1}}
#1<-backend

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\cs:w \__hook_tl_csname:n {backend}\cs_end: 
#2<-=
#3<-0

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-backend

\l__hook_label_backend_tl ->0

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{backend}\tl_set:Nn \l_
_hook_rear_tl {backend}

\tl_set:cn ->\exp_args:Nc \tl_set:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_set:Nn 
#2<-\__hook_tl_csname:n {\l__hook_rear_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_rear_tl 

\l__hook_rear_tl ->0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_label_0_tl 
#2<-backend

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_rear_tl 
#2<-backend

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {0}

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-0

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_0_tl 

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook file/l3graphics.sty/after 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook file/l3graphics.sty/after 
#2<-\c_empty_tl 

\clist_gclear:N #1->\tex_global:D \tex_let:D #1 \c_empty_tl 
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/l3graphic
s.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handle
d code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__ho
ok_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hoo
k_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#
#1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_se
t:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname
:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->backend

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-backend
#2<-0

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-0
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 0{\if_meaning:w 001\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-0
#2<-\if_meaning:w 001\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_1: ->\c_true_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/l3graphic
s.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handle
d code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__ho
ok_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hoo
k_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#
#1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_se
t:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname
:n {\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {
0}}{\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \ETC.

\int_decr:N #1->\tex_advance:D #1-\c_one_int 
#1<-\l__hook_labels_int 

\prop_get:NVN ->\exp_args:NNV \prop_get:NnN 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\prop_get:NnN 
#2<-\l__hook_work_prop 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->backend

\prop_get:NnN #1#2#3->\__prop_split:NnTF #1{#2}{\tl_set:Nn #3{##2}}{\tl_set:Nn 
#3{\q_no_value }}
#1<-\l__hook_work_prop 
#2<-backend
#3<-\l__hook_return_tl 

\__prop_split:NnTF #1#2->\exp_args:NNo \__prop_split_aux:NnTF #1{\tl_to_str:n {
#2}}
#1<-\l__hook_work_prop 
#2<-backend

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__prop_split_aux:NnTF 
#2<-\l__hook_work_prop 
#3<-\tl_to_str:n {backend}

\__prop_split_aux:NnTF #1#2#3#4->\cs_set:Npn \__prop_split_aux:w ##1\__prop_pai
r:wn #2\s__prop ##2##3\s__prop_mark ##4##5\s__prop_stop {##4{#3}{#4}}\exp_after
:wN \__prop_split_aux:w #1\s__prop_mark \use_i:nn \__prop_pair:wn #2\s__prop {}
\s__prop_mark \use_ii:nn \s__prop_stop 
#1<-\l__hook_work_prop 
#2<-backend
#3<-\tl_set:Nn \l__hook_return_tl {##2}
#4<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\cs_set:Npn ->\tex_long:D \tex_def:D 

\l__hook_work_prop ->\s__prop \__prop_pair:wn backend\s__prop {\seq_set_from_cl
ist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}

\__prop_split_aux:w #1\__prop_pair:wn backend\s__prop #2#3\s__prop_mark #4#5\s_
_prop_stop ->#4{\tl_set:Nn \l__hook_return_tl {#2}}{\tl_set:Nn \l__hook_return_
tl {\q_no_value }}
#1<-\s__prop 
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}
#3<-
#4<-\use_i:nn 
#5<-\__prop_pair:wn backend\s__prop {}\s__prop_mark \use_ii:nn 

\use_i:nn #1#2->#1
#1<-\tl_set:Nn \l__hook_return_tl {\seq_set_from_clist:Nn \l_graphics_search_ex
t_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}}
#2<-\tl_set:Nn \l__hook_return_tl {\q_no_value }

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/l3graphics.sty/after 
#3<-\l__hook_return_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_return_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_return_tl ->\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.e
ps,.ps,.png,.jpg,.jpeg}

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/l3graphics.sty/after 
#2<-\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,
.jpeg}

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/l3graphics.sty/after 
#2<-\__kernel_exp_not:w {\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pd
f,.eps,.ps,.png,.jpg,.jpeg}}\__kernel_exp_not:w \exp_after:wN {\__hook file/l3g
raphics.sty/after }

\__hook file/l3graphics.sty/after ->

\__hook_clist_gput:NV ->\exp_args:NNV \clist_gput_left:Nn 

\exp_args:NNV #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {\exp:w \__
exp_eval_register:N #3}
#1<-\clist_gput_left:Nn 
#2<-\g__hook_file/l3graphics.sty/after_labels_clist 
#3<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->backend

\clist_gput_left:Nn ->\__clist_put_left:NNNn \clist_gconcat:NNN \clist_set:Nn 

\__clist_put_left:NNNn #1#2#3#4->#2\l__clist_internal_clist {#4}#1#3\l__clist_i
nternal_clist #3
#1<-\clist_gconcat:NNN 
#2<-\clist_set:Nn 
#3<-\g__hook_file/l3graphics.sty/after_labels_clist 
#4<-backend

\clist_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__clist_sanitize:n {#2}}
#1<-\l__clist_internal_clist 
#2<-backend

\__clist_sanitize:n #1->\exp_after:wN \__clist_sanitize:Nn \exp_after:wN \c_emp
ty_tl \exp:w \__clist_trim_next:w \prg_do_nothing: #1,\s__clist_stop \prg_break
: ,\prg_break_point: 
#1<-backend

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: backend

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: backend?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-b

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: backend}\exp_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: backend

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-backend
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: backend

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: backend\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: backend\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: backend\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: backend
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: backend

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-\c_empty_tl 
#2<-backend

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-backend

\c_empty_tl ->

\__clist_wrap_item:w #1,->\__clist_if_wrap:nTF {#1}{\exp_not:n {{#1}}}{\exp_not
:n {#1}}
#1<-backend

\__clist_if_wrap:nTF #1->\tl_if_empty:oTF {\__clist_if_wrap:w \s__clist_mark ?#
1 \s__clist_mark ? #1\s__clist_mark , \s__clist_mark #1,}{\tl_if_head_is_group:
nTF {#1{}}{\tl_if_empty:nTF {#1}{\prg_return_true: }{\tl_if_empty:oTF {\use_non
e:n #1}{\prg_return_true: }{\prg_return_false: }}}{\prg_return_false: }}{\prg_r
eturn_true: }\exp_end: 
#1<-backend

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__clist_if_wrap:w \s__clist_mark ?backend \s__clist_mark ? backend\s__clis
t_mark , \s__clist_mark backend,

\__clist_if_wrap:w #1\s__clist_mark ? #2 \s__clist_mark #3,->
#1<-\s__clist_mark ?backend 
#2<-backend\s__clist_mark ,
#3<-backend

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_head_is_group:nTF {backend{}}{\tl_if_empty:nTF {backend}{\prg_return
_true: }{\tl_if_empty:oTF {\use_none:n backend}{\prg_return_true: }{\prg_return
_false: }}}{\prg_return_false: }
#2<-\prg_return_true: 

\tl_if_head_is_group:nTF #1->\if:w \exp_after:wN \use_none:n \exp_after:wN {\ex
p_after:wN {\token_to_str:N #1?}}\scan_stop: \scan_stop: \__tl_if_head_is_group
_fi_false:w \fi: \if_true: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-backend{}

\use_none:n #1->
#1<-{backend{}?}

\__tl_if_head_is_group_fi_false:w \fi: \if_true: ->\fi: \if_false: 

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {backend}{\prg_return_true: }{\tl_if_empty:oTF {\use_none:
n backend}{\prg_return_true: }{\prg_return_false: }}
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\exp_not:n {{backend}}
#2<-\exp_not:n {backend}

\__clist_trim_next:w #1,->\tl_if_empty:oTF {\use_none:nn #1?}{\__clist_trim_nex
t:w \prg_do_nothing: }{\tl_trim_spaces_apply:oN {#1}\exp_end: }
#1<-\prg_do_nothing: \s__clist_stop \prg_break: 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use_none:nn \prg_do_nothing: \s__clist_stop \prg_break: ?

\use_none:nn #1#2->
#1<-\prg_do_nothing: 
#2<-\s__clist_stop 

\use_ii:nn #1#2->#2
#1<-\__clist_trim_next:w \prg_do_nothing: 
#2<-\tl_trim_spaces_apply:oN {\prg_do_nothing: \s__clist_stop \prg_break: }\exp
_end: 

\tl_trim_spaces_apply:oN ->\exp_args:No \tl_trim_spaces_apply:nN 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\tl_trim_spaces_apply:nN 
#2<-\prg_do_nothing: \s__clist_stop \prg_break: 

\prg_do_nothing: ->

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\s__clist_stop \prg_break: 
#2<-\exp_end: 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: \s__tl_nil \__tl_trim_spaces_au
xiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \s__clist_stop \prg_break: 
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \exp_end: 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\exp_end: 
#2<-\__tl_trim_mark: \s__clist_stop \prg_break: 

\__tl_trim_mark: ->

\__clist_sanitize:Nn #1#2->\__clist_use_none_delimit_by_s_stop:w #2\s__clist_st
op #1\__clist_wrap_item:w #2,\exp_after:wN \__clist_sanitize:Nn \exp_after:wN ,
\exp:w \__clist_trim_next:w \prg_do_nothing: 
#1<-,
#2<-\s__clist_stop \prg_break: 

\__clist_use_none_delimit_by_s_stop:w #1\s__clist_stop ->
#1<-

\prg_break: #1\prg_break_point: ->
#1<-\s__clist_stop ,\__clist_wrap_item:w \s__clist_stop \prg_break: ,\exp_after
:wN \__clist_sanitize:Nn \exp_after:wN ,\exp:w \__clist_trim_next:w \prg_do_not
hing: 

\clist_gconcat:NNN ->\__clist_concat:NNNN \__kernel_tl_gset:Nx 

\__clist_concat:NNNN #1#2#3#4->#1#2{\exp_not:o #3\clist_if_empty:NF #3{\clist_i
f_empty:NF #4{,}}\exp_not:o #4}
#1<-\__kernel_tl_gset:Nx 
#2<-\g__hook_file/l3graphics.sty/after_labels_clist 
#3<-\l__clist_internal_clist 
#4<-\g__hook_file/l3graphics.sty/after_labels_clist 

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\l__clist_internal_clist 

\l__clist_internal_clist ->backend

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\l__clist_internal_clist 

\use:n #1->#1
#1<-\clist_if_empty:NF \g__hook_file/l3graphics.sty/after_labels_clist {,}

\clist_if_empty:NF #1->\if_meaning:w #1\c_empty_tl \__prg_F_true:w \fi: \use:n 
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-,

\exp_not:o #1->\__kernel_exp_not:w \exp_after:wN {#1}
#1<-\g__hook_file/l3graphics.sty/after_labels_clist 

\g__hook_file/l3graphics.sty/after_labels_clist ->

\__hook_debug:n #1->
#1<-\iow_term:x {Handled code for \l__hook_front_tl }

\seq_map_inline:cn ->\exp_args:Nc \seq_map_inline:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\seq_map_inline:Nn 
#2<-\__hook_seq_csname:n {\l__hook_front_tl }

\__hook_seq_csname:n #1->l__hook_label_#1_seq
#1<-\l__hook_front_tl 

\l__hook_front_tl ->backend

\seq_map_inline:Nn #1#2->\__seq_push_item_def:n {#2}#1\prg_break_point:Nn \seq_
map_break: {\__seq_pop_item_def: }
#1<-\l__hook_label_backend_seq 
#2<-\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hook_tl_csname
:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {##1}\cs_end:
 }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_set:Nn \l__ho
ok_rear_tl {##1}}

\__seq_push_item_def:n ->\__seq_push_item_def: \cs_gset:Npn \__seq_item:n ##1

\__seq_push_item_def: ->\int_gincr:N \g__kernel_prg_map_int \cs_gset_eq:cN {__s
eq_map_\int_use:N \g__kernel_prg_map_int :w}\__seq_item:n 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_map_1:w 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\l__hook_label_backend_seq ->\s__seq 

\prg_break_point:Nn #1#2->#2
#1<-\seq_map_break: 
#2<-\__seq_pop_item_def: 

\__seq_pop_item_def: ->\cs_gset_eq:Nc \__seq_item:n {__seq_map_\int_use:N \g__k
ernel_prg_map_int :w}\int_gdecr:N \g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__seq_item:n 
#3<-__seq_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__seq_item:n 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\tl_set_eq:Nc ->\exp_args:NNc \tl_set_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\tl_set_eq:NN 
#2<-\l__hook_front_tl 
#3<-\__hook_tl_csname:n {\l__hook_front_tl }

\__hook_tl_csname:n #1->l__hook_label_#1_tl
#1<-\l__hook_front_tl 

\l__hook_front_tl ->backend

\tl_set_eq:NN #1#2->\tex_let:D #1= #2
#1<-\l__hook_front_tl 
#2<-\l__hook_label_backend_tl 

\bool_while_do:nn #1#2->\bool_if:nT {#1}{#2\bool_while_do:nn {#1}{#2}}
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}
#2<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/l3graphic
s.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handle
d code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__ho
ok_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hoo
k_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#
#1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_se
t:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname
:n {\l__hook_front_tl }}

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\exp_end_continue_f:w ->`^^@

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-!\str_if_eq_p:Vn \l__hook_front_tl {0}

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn !\str_if_eq_p:Vn \l__hook_front_tl {0}.

\use_none:nn #1#2->
#1<-!
#2<-\str_if_eq_p:Vn 

\use_none:n #1->
#1<-\__bool_if_p_aux:w 

\group_align_safe_begin: ->\exp:w \if_false: {\fi: `^^@\exp_stop_f: 

\exp_end_continue_f:w ->`^^@

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_i:nnnn 
#2<-!

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !!!\else: \if_meaning:w (!(\else: p\fi: \fi: :Nw

\__bool_!:Nw #1#2->\exp_after:wN \__bool_get_next:NN #1\use_ii:nnnn \use_i:nnnn
 \use_iii:nnnn \use_iv:nnnn 
#1<-\use_i:nnnn 
#2<-!

\use_i:nnnn #1#2#3#4->#1
#1<-\use_ii:nnnn 
#2<-\use_i:nnnn 
#3<-\use_iii:nnnn 
#4<-\use_iv:nnnn 

\__bool_get_next:NN #1#2->\use:c {__bool_\if_meaning:w !#2!\else: \if_meaning:w
 (#2(\else: p\fi: \fi: :Nw}#1#2
#1<-\use_ii:nnnn 
#2<-\str_if_eq_p:Vn 

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\if_meaning:w !\str_if_eq_p:Vn !\else: \if_meaning:w (\str_if_eq_p:V
n (\else: p\fi: \fi: :Nw

\__bool_p:Nw #1->\exp_after:wN \__bool_choose:NNN \exp_after:wN #1\int_value:w 
#1<-\use_ii:nnnn 

\str_if_eq_p:Vn ->\exp_args:NV \str_if_eq_p:nn 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\str_if_eq_p:nn 
#2<-\l__hook_front_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l__hook_front_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l__hook_front_tl ->0

\str_if_eq_p:nn #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_p_true:w \fi: \c_false_bool 
#1<-0
#2<-0

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_choose:NNN #1#2#3->\use:c {__bool_\token_to_str:N #3_#1#2{\if_meaning:w
 0#21\else: 0\fi: }20:}
#1<-\use_ii:nnnn 
#2<-1
#3<-)

\use:c #1->\cs:w #1\cs_end: 
#1<-__bool_\token_to_str:N )_\use_ii:nnnn 1{\if_meaning:w 011\else: 0\fi: }20:

\use_ii:nnnn #1#2#3#4->#2
#1<-1
#2<-\if_meaning:w 011\else: 0\fi: 
#3<-2
#4<-0

\__bool_)_0: ->\c_false_bool 

\group_align_safe_end: ->\if_int_compare:w `{=\c_zero_int }\fi: 

\use_none:n #1->
#1<-\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \g__hook_file/l3graphic
s.sty/after_labels_clist \l__hook_front_tl \__hook_debug:n {\iow_term:x {Handle
d code for \l__hook_front_tl }}\seq_map_inline:cn {\__hook_seq_csname:n {\l__ho
ok_front_tl }}{\tl_set:cx {\__hook_tl_csname:n {##1}}{\int_eval:n {\cs:w \__hoo
k_tl_csname:n {##1}\cs_end: -1}}\int_compare:nNnT {\cs:w \__hook_tl_csname:n {#
#1}\cs_end: }=0{\tl_set:cn {\__hook_tl_csname:n {\l__hook_rear_tl }}{##1}\tl_se
t:Nn \l__hook_rear_tl {##1}}}\tl_set_eq:Nc \l__hook_front_tl {\__hook_tl_csname
:n {\l__hook_front_tl }}\bool_while_do:nn {!\str_if_eq_p:Vn \l__hook_front_tl {
0}}{\int_decr:N \l__hook_labels_int \prop_get:NVN \l__hook_work_prop \l__hook_f
ront_tl \l__hook_return_tl \exp_args:NNV \__hook_tl_gput:Nn \__hook file/l3grap
hics.sty/after \l__hook_return_tl \__hook_clist_gput:NV \ETC.

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\l__hook_labels_int 
#2<-=
#3<-0

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\iow_term:x {====================}\iow_term:x {Error: label rules are incom
patible:}\__hook_debug_label_data:N \l__hook_work_prop \iow_term:x {===========
=========}

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput:Nn 
#2<-\__hook file/l3graphics.sty/after 
#3<-\cs:w __hook_toplevel file/l3graphics.sty/after\cs_end: 

\__hook_tl_gput:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w {#2}\__kerne
l_exp_not:w \exp_after:wN {#1}}
#1<-\__hook file/l3graphics.sty/after 
#2<-\__hook_toplevel file/l3graphics.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/l3graphics.sty/after 
#2<-\__kernel_exp_not:w {\__hook_toplevel file/l3graphics.sty/after }\__kernel_
exp_not:w \exp_after:wN {\__hook file/l3graphics.sty/after }

\__hook file/l3graphics.sty/after ->\seq_set_from_clist:Nn \l_graphics_search_e
xt_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}

\__hook_tl_gput_right:No ->\exp_args:NNo \__hook_tl_gput_right:Nn 

\exp_args:NNo #1#2#3->\exp_after:wN #1\exp_after:wN #2\exp_after:wN {#3}
#1<-\__hook_tl_gput_right:Nn 
#2<-\__hook file/l3graphics.sty/after 
#3<-\cs:w __hook_next file/l3graphics.sty/after\cs_end: 

\__hook_tl_gput_right:Nn #1#2->\__hook_tl_gset:Nx #1{\__kernel_exp_not:w \exp_a
fter:wN {#1#2}}
#1<-\__hook file/l3graphics.sty/after 
#2<-\__hook_next file/l3graphics.sty/after 

\__hook_tl_gset:Nx #1#2->\cs_gset_nopar:Npx #1{#2}
#1<-\__hook file/l3graphics.sty/after 
#2<-\__kernel_exp_not:w \exp_after:wN {\__hook file/l3graphics.sty/after \__hoo
k_next file/l3graphics.sty/after }

\__hook file/l3graphics.sty/after ->\__hook_toplevel file/l3graphics.sty/after 
\seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpe
g}

\__hook_debug:n #1->
#1<-\exp_args:NNx \prop_gput:Nnn \g__hook_used_prop {file/l3graphics.sty/after}
{}

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__graphics_graphics_attr_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__graphics_graphics_attr_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__graphics_graphics_attr_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__graph
ics_graphics_attr_tl }{\token_to_meaning:N \l__graphics_graphics_attr_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__graphics_graphics_attr_tl 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_jpg:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_jpg:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_jpg:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_jpg:n }{\token_to_meaning:N \__graphics_backend_getbb_jpg:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_getbb_jpeg:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_jpeg:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_jpeg:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_jpeg:n }{\token_to_meaning:N \__graphics_backend_getbb_jpeg:n 
}

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_getbb_jpeg:n 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_getbb_png:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_png:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_png:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_png:n }{\token_to_meaning:N \__graphics_backend_getbb_png:n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_getbb_png:n 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_pdf:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_pdf:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_pdf:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_pdf:n }{\token_to_meaning:N \__graphics_backend_getbb_pdf:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_auxi:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_auxi:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_auxi:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_auxi:n }{\token_to_meaning:N \__graphics_backend_getbb_auxi:n 
}

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_auxii:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_auxii:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_auxii:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_auxii:n }{\token_to_meaning:N \__graphics_backend_getbb_auxii:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_auxiii:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_auxiii:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_auxiii:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_auxiii:n }{\token_to_meaning:N \__graphics_backend_getbb_auxii
i:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__graphics_backend_dequote:w 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_dequote:w 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_dequote:w 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_dequote:w }{\token_to_meaning:N \__graphics_backend_dequote:w }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_include_jpg:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_jpg:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_jpg:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_jpg:n }{\token_to_meaning:N \__graphics_backend_include_jpg:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_include_jpeg:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_jpeg:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_jpeg:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_jpeg:n }{\token_to_meaning:N \__graphics_backend_include_jpe
g:n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_include_jpeg:n 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_include_pdf:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_pdf:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_pdf:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_pdf:n }{\token_to_meaning:N \__graphics_backend_include_pdf:
n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_include_pdf:n 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_include_png:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_png:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_png:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_png:n }{\token_to_meaning:N \__graphics_backend_include_png:
n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_include_png:n 

\sys_if_shell:T #1->#1
#1<-\str_new:N \l__graphics_backend_dir_str \str_new:N \l__graphics_backend_nam
e_str \str_new:N \l__graphics_backend_ext_str \cs_new_protected:Npn \__graphics
_backend_getbb_eps:n ##1{\file_parse_full_name:nNNN {##1}\l__graphics_backend_d
ir_str \l__graphics_backend_name_str \l__graphics_backend_ext_str \exp_args:Nx 
\__graphics_backend_getbb_eps:nn {\exp_args:Ne \__kernel_file_name_quote:n {\l_
_graphics_backend_name_str -\str_tail:N \l__graphics_backend_ext_str -converted
-to.pdf}}{##1}}\cs_new_eq:NN \__graphics_backend_getbb_ps:n \__graphics_backend
_getbb_eps:n \cs_new_protected:Npn \__graphics_backend_getbb_eps:nn ##1##2{\fil
e_compare_timestamp:nNnT {##2}>{##1}{\sys_shell_now:n {repstopdf ##2 ##1}}\tl_s
et:Nn \l__graphics_final_name_str {##1}\__graphics_backend_getbb_pdf:n {##1}}\c
s_new_protected:Npn \__graphics_backend_include_eps:n ##1{\file_parse_full_name
:nNNN {##1}\l__graphics_backend_dir_str \l__graphics_backend_name_str \l__graph
ics_backend_ext_str \exp_args:Nx \__graphics_backend_include_pdf:n \ETC.

\str_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__graphics_backend_dir_str 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__graphics_backend_dir_str 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__graphics_backend_dir_str 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__graph
ics_backend_dir_str }{\token_to_meaning:N \l__graphics_backend_dir_str }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__graphics_backend_dir_str 

\str_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__graphics_backend_name_str 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__graphics_backend_name_str 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__graphics_backend_name_str 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__graph
ics_backend_name_str }{\token_to_meaning:N \l__graphics_backend_name_str }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__graphics_backend_name_str 

\str_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__graphics_backend_ext_str 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__graphics_backend_ext_str 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__graphics_backend_ext_str 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__graph
ics_backend_ext_str }{\token_to_meaning:N \l__graphics_backend_ext_str }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__graphics_backend_ext_str 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_eps:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_eps:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_eps:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_eps:n }{\token_to_meaning:N \__graphics_backend_getbb_eps:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_getbb_ps:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_ps:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_ps:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_ps:n }{\token_to_meaning:N \__graphics_backend_getbb_ps:n }

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_getbb_ps:n 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_getbb_eps:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_getbb_eps:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_getbb_eps:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_getbb_eps:nn }{\token_to_meaning:N \__graphics_backend_getbb_eps:nn 
}

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_include_eps:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_eps:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_eps:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_eps:n }{\token_to_meaning:N \__graphics_backend_include_eps:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_eq:NN #1->\__kernel_chk_if_free_cs:N #1\tex_global:D \cs_set_eq:NN #1
#1<-\__graphics_backend_include_ps:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_include_ps:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_include_ps:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_include_ps:n }{\token_to_meaning:N \__graphics_backend_include_ps:n 
}

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__graphics_backend_include_ps:n 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__graphics_backend_get_pagecount:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__graphics_backend_get_pagecount:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__graphics_backend_get_pagecount:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__graphi
cs_backend_get_pagecount:n }{\token_to_meaning:N \__graphics_backend_get_pageco
unt:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\box_new:N #1->\__kernel_chk_if_free_cs:N #1\cs:w newbox\cs_end: #1
#1<-\l__pdf_internal_box 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__pdf_internal_box 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__pdf_internal_box 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__pdf_i
nternal_box }{\token_to_meaning:N \l__pdf_internal_box }

\newbox ->\e@alloc \box {\ifnum \allocationnumber <\@cclvi \expandafter \charde
f \else \expandafter \e@alloc@chardef \fi } {\count 14}\insc@unt \float@count 

\e@alloc #1#2#3#4#5#6->\global \advance #3\@ne \e@ch@ck {#3}{#4}{#5}#1\allocati
onnumber #3\relax \global #2#6\allocationnumber \wlog {\string #6=\string #1\th
e \allocationnumber }
#1<-\box 
#2<-\ifnum \allocationnumber <\@cclvi \expandafter \chardef \else \expandafter 
\e@alloc@chardef \fi 
#3<-\count 14
#4<-\insc@unt 
#5<-\float@count 
#6<-\l__pdf_internal_box 

\e@ch@ck #1#2#3#4->\ifnum #1<#2\else \ifnum #1=#2\relax \global #1\@cclvi \ifx 
\count #4\global \advance #1 10 \fi \fi \ifnum #1<#3\relax \else \errmessage {N
o room for a new \string #4}\fi \fi 
#1<-\count 14
#2<-\insc@unt 
#3<-\float@count 
#4<-\box 

\wlog ->\immediate \write \m@ne 
\l__pdf_internal_box=\box66

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_annotation:nnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_annotation:nnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_annotation:nnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_annotation:nnnn }{\token_to_meaning:N \__pdf_backend_annotation:nnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__pdf_backend_annotation_last: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_annotation_last: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_annotation_last: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_annotation_last: }{\token_to_meaning:N \__pdf_backend_annotation_last: }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\c_space_tl -> 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_link_begin_goto:nnw 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_begin_goto:nnw 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_begin_goto:nnw 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_begin_goto:nnw }{\token_to_meaning:N \__pdf_backend_link_begin_goto:
nnw }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_link_begin_user:nnw 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_begin_user:nnw 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_begin_user:nnw 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_begin_user:nnw }{\token_to_meaning:N \__pdf_backend_link_begin_user:
nnw }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_link_begin:nnnw 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_begin:nnnw 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_begin:nnnw 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_begin:nnnw }{\token_to_meaning:N \__pdf_backend_link_begin:nnnw }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_link_end: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_end: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_end: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_end: }{\token_to_meaning:N \__pdf_backend_link_end: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__pdf_backend_link_last: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_last: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_last: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_last: }{\token_to_meaning:N \__pdf_backend_link_last: }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\c_space_tl -> 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_link_margin:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_link_margin:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_link_margin:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_link_margin:n }{\token_to_meaning:N \__pdf_backend_link_margin:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_destination:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_destination:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_destination:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_destination:nn }{\token_to_meaning:N \__pdf_backend_destination:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_destination:nnnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_destination:nnnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_destination:nnnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_destination:nnnn }{\token_to_meaning:N \__pdf_backend_destination:nnnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_catalog_gput:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_catalog_gput:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_catalog_gput:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_catalog_gput:nn }{\token_to_meaning:N \__pdf_backend_catalog_gput:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_info_gput:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_info_gput:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_info_gput:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_info_gput:nn }{\token_to_meaning:N \__pdf_backend_info_gput:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\prop_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_prop 
#1<-\g__pdf_backend_object_prop 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\g__pdf_backend_object_prop 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\g__pdf_backend_object_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \g__pdf_b
ackend_object_prop }{\token_to_meaning:N \g__pdf_backend_object_prop }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__pdf_backend_object_prop 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_object_new:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_new:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_new:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_new:n }{\token_to_meaning:N \__pdf_backend_object_new:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__pdf_backend_object_ref:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_ref:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_ref:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_ref:n }{\token_to_meaning:N \__pdf_backend_object_ref:n }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_object_write:nnn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_write:nnn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_write:nnn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_write:nnn }{\token_to_meaning:N \__pdf_backend_object_write:nnn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__pdf_backend_object_write:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_write:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_write:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_write:nn }{\token_to_meaning:N \__pdf_backend_object_write:nn }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__pdf_backend_object_write:nnn 
#2<-nnx

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__pdf_backend_object_write:nnn 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1#2#3->\tex_immediate:D \tex_pdfobj:D useobjnum \int_use:c {c__pdf_obj
ect_\tl_to_str:n {#1}_int}\__pdf_backend_object_write:nn {#2}{#3}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__pdf_backend_object_writ
e:nnn \exp_not:N \__pdf_backend_object_write:nnn \tl_to_str:n {nnx},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__pdf_backend_object_write:nnn 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__pdf_backend_object_write
#2<-nnn
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__pdf_backend_object_write
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__pdf_backend_object_write}{
nnn}\c_true_bool \__pdf_backend_object_write:nnn nnx,\scan_stop: ,\q__cs_recurs
ion_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__pdf_backend_object_write
#2<-nnn
#3<-\c_true_bool 
#4<-\__pdf_backend_object_write:nnn 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__pdf_backend_object_write:nnn 
#2<-__pdf_backend_object_write
#3<-nnn
#4<-nnx

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}n
nx\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nnn { {}\fi: \__cs_gener
ate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__pdf_backend_object_wr
ite:nnn {__pdf_backend_object_write}{nnx}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-n
#3<-nx\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_same:w #1\prg_do_nothing: #2#3#4->#3{#1\__cs_genera
te_variant_same:N #2}
#1<-
#2<-n
#3<-\__cs_generate_variant_loop:nNwN 
#4<-

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-\__cs_generate_variant_same:N n
#2<-n
#3<-x\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_same:w #1\prg_do_nothing: #2#3#4->#3{#1\__cs_genera
te_variant_same:N #2}
#1<-\__cs_generate_variant_same:N n
#2<-n
#3<-\__cs_generate_variant_loop:nNwN 
#4<-

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-\__cs_generate_variant_same:N n\__cs_generate_variant_same:N n
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\__cs_generate_variant_same:N #1->\if:w N#1#1\else: \if:w p#1#1\else: \token_to
_str:N n\if:w n#1\else: \__cs_generate_variant_loop_special:NNwNNnn #1#1\fi: \f
i: \fi: 
#1<-n

\__cs_generate_variant_same:N #1->\if:w N#1#1\else: \if:w p#1#1\else: \token_to
_str:N n\if:w n#1\else: \__cs_generate_variant_loop_special:NNwNNnn #1#1\fi: \f
i: \fi: 
#1<-n

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__pdf_backend_object_write:nnn 
#7<-__pdf_backend_object_write
#8<-nnx

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__pdf_backend_object_write:nnx

\l__exp_internal_tl ->\__cs_generate_variant:wwNN nnx\s__cs_mark \s__cs_stop \_
_pdf_backend_object_write:nnn \__pdf_backend_object_write:nnx 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-nnx
#2<-
#3<-\__pdf_backend_object_write:nnn 
#4<-\__pdf_backend_object_write:nnx 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__pdf_backend_object_write:nnx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {nnx}\__cs_tmp:w \__pdf_bac
kend_object_write:nnx {\exp_not:c {exp_args:Nnnx}\exp_not:N \__pdf_backend_obje
ct_write:nnn }\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-nnx

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-nn
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-nnx

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nnnx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nnnx\cs_end: \scan_stop: \prg_re
turn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {nnx}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__pdf_backend_object_write:nnx 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_write:nnx 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_write:nnx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_write:nnx }{\token_to_meaning:N \__pdf_backend_object_write:nnx }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nnnx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__pdf_backend_object_write:nnn 
#2<-__pdf_backend_object_write
#3<-nnn
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nnn { {
}\fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__pdf_
backend_object_write:nnn {__pdf_backend_object_write}{\scan_stop: }}\__cs_gener
ate_variant:Nnnw \__pdf_backend_object_write:nnn {__pdf_backend_object_write}{n
nn}

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__pdf_exp_not_i:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_exp_not_i:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_exp_not_i:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ex
p_not_i:nn }{\token_to_meaning:N \__pdf_exp_not_i:nn }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__pdf_exp_not_ii:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_exp_not_ii:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_exp_not_ii:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ex
p_not_ii:nn }{\token_to_meaning:N \__pdf_exp_not_ii:nn }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_object_now:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_now:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_now:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_now:nn }{\token_to_meaning:N \__pdf_backend_object_now:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__pdf_backend_object_now:nn 
#2<-nx

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__pdf_backend_object_now:nn 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1#2->\tex_immediate:D \tex_pdfobj:D \__pdf_backend_object_write:nn {#1
}{#2}ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__pdf_backend_object_now:
nn \exp_not:N \__pdf_backend_object_now:nn \tl_to_str:n {nx},\exp_not:N \scan_s
top: ,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__pdf_backend_object_now:nn 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__pdf_backend_object_now
#2<-nn
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__pdf_backend_object_now
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__pdf_backend_object_now}{nn
}\c_true_bool \__pdf_backend_object_now:nn nx,\scan_stop: ,\q__cs_recursion_sto
p 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__pdf_backend_object_now
#2<-nn
#3<-\c_true_bool 
#4<-\__pdf_backend_object_now:nn 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__pdf_backend_object_now:nn 
#2<-__pdf_backend_object_now
#3<-nn
#4<-nx

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}n
x\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nn { {}\fi: \__cs_generat
e_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__pdf_backend_object_now:
nn {__pdf_backend_object_now}{nx}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-n
#3<-x\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_same:w #1\prg_do_nothing: #2#3#4->#3{#1\__cs_genera
te_variant_same:N #2}
#1<-
#2<-n
#3<-\__cs_generate_variant_loop:nNwN 
#4<-

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-\__cs_generate_variant_same:N n
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\__cs_generate_variant_same:N #1->\if:w N#1#1\else: \if:w p#1#1\else: \token_to
_str:N n\if:w n#1\else: \__cs_generate_variant_loop_special:NNwNNnn #1#1\fi: \f
i: \fi: 
#1<-n

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__pdf_backend_object_now:nn 
#7<-__pdf_backend_object_now
#8<-nx

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__pdf_backend_object_now:nx

\l__exp_internal_tl ->\__cs_generate_variant:wwNN nx\s__cs_mark \s__cs_stop \__
pdf_backend_object_now:nn \__pdf_backend_object_now:nx 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-nx
#2<-
#3<-\__pdf_backend_object_now:nn 
#4<-\__pdf_backend_object_now:nx 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__pdf_backend_object_now:nx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {nx}\__cs_tmp:w \__pdf_back
end_object_now:nx {\exp_not:c {exp_args:Nnx}\exp_not:N \__pdf_backend_object_no
w:nn }\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-nx

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-n
#2<-
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-nx

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nnx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nnx\cs_end: \scan_stop: \prg_ret
urn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {nx}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__pdf_backend_object_now:nx 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_now:nx 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_now:nx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_now:nx }{\token_to_meaning:N \__pdf_backend_object_now:nx }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nnx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__pdf_backend_object_now:nn 
#2<-__pdf_backend_object_now
#3<-nn
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nn { {}
\fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__pdf_b
ackend_object_now:nn {__pdf_backend_object_now}{\scan_stop: }}\__cs_generate_va
riant:Nnnw \__pdf_backend_object_now:nn {__pdf_backend_object_now}{nn}

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__pdf_backend_object_last: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_object_last: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_object_last: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_object_last: }{\token_to_meaning:N \__pdf_backend_object_last: }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\c_space_tl -> 

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__pdf_backend_pageobject_ref:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_pageobject_ref:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_pageobject_ref:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_pageobject_ref:n }{\token_to_meaning:N \__pdf_backend_pageobject_ref:n }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\c_space_tl -> 

\c_space_tl -> 

\c_space_tl -> 

\c_space_tl -> 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_compresslevel:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_compresslevel:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_compresslevel:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_compresslevel:n }{\token_to_meaning:N \__pdf_backend_compresslevel:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_compress_objects:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_compress_objects:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_compress_objects:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_compress_objects:n }{\token_to_meaning:N \__pdf_backend_compress_objects:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_objcompresslevel:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_objcompresslevel:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_objcompresslevel:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_objcompresslevel:n }{\token_to_meaning:N \__pdf_backend_objcompresslevel:
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #
1
#1<-\__pdf_backend_version_major_gset:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_version_major_gset:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_version_major_gset:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_version_major_gset:n }{\token_to_meaning:N \__pdf_backend_version_major_g
set:n }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\cs_if_exist:NT #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_c
s_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \us
e:n \use_none:n 
#1<-\tex_pdfmajorversion:D 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\exp_not:N \tex_global:D \tex_pdfmajorversion:D \exp_not:N \int_eval:n {##1
}\scan_stop: 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_version_minor_gset:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_version_minor_gset:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_version_minor_gset:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_version_minor_gset:n }{\token_to_meaning:N \__pdf_backend_version_minor_g
set:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new:Npx #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npx #1
#1<-\__pdf_backend_version_major: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_version_major: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_version_major: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_version_major: }{\token_to_meaning:N \__pdf_backend_version_major: }

\cs_gset:Npx ->\tex_long:D \tex_xdef:D 

\cs_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\tex_pdfmajorversion:D 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_not:N \tex_the:D \tex_pdfmajorversion:D 
#2<-1

\cs_new:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset:Npn #1
#1<-\__pdf_backend_version_minor: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_version_minor: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_version_minor: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_version_minor: }{\token_to_meaning:N \__pdf_backend_version_minor: }

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_bdc:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_bdc:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_bdc:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_bdc:nn }{\token_to_meaning:N \__pdf_backend_bdc:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_emc: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_emc: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_emc: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_emc: }{\token_to_meaning:N \__pdf_backend_emc: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__pdf_backend_pagesize_gset:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__pdf_backend_pagesize_gset:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__pdf_backend_pagesize_gset:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__pdf_ba
ckend_pagesize_gset:nn }{\token_to_meaning:N \__pdf_backend_pagesize_gset:nn }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\bool_lazy_and:nnT #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{\
c_false_bool }\__prg_T_true:w \fi: \use_none:n 
#1<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 
#2<-\pdfmanagement_if_active_p: 

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 

\exp_end_continue_f:w ->`^^@

\cs_if_exist_p:N #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \c
_true_bool \c_false_bool 
#1<-\pdfmanagement_if_active_p: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\bool_if_p:n {\pdfmanagement_if_active_p: }
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__kernel_color_backend_stack_init:Nnn \c__opacity_backend_stack_int {page 
direct}{/opacity1 gs}\pdfmanagement_add:nnn {Page/Resources/ExtGState}{opacity1
}{<</ca 1/CA 1>>}

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__opacity_backend_fill_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__opacity_backend_fill_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__opacity_backend_fill_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__opaci
ty_backend_fill_tl }{\token_to_meaning:N \l__opacity_backend_fill_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__opacity_backend_fill_tl 

\tl_new:N #1->\__kernel_chk_if_free_cs:N #1\cs_gset_eq:NN #1\c_empty_tl 
#1<-\l__opacity_backend_stroke_tl 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\l__opacity_backend_stroke_tl 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\l__opacity_backend_stroke_tl 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \l__opaci
ty_backend_stroke_tl }{\token_to_meaning:N \l__opacity_backend_stroke_tl }

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__opacity_backend_stroke_tl 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_select:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_select:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_select:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_select:n }{\token_to_meaning:N \__opacity_backend_select:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_select_aux:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_select_aux:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_select_aux:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_select_aux:n }{\token_to_meaning:N \__opacity_backend_select_aux:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\bool_lazy_and:nnF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{\
c_false_bool }\__prg_F_true:w \fi: \use:n 
#1<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 
#2<-\pdfmanagement_if_active_p: 

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\cs_if_exist_p:N \pdfmanagement_if_active_p: 

\exp_end_continue_f:w ->`^^@

\cs_if_exist_p:N #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \c
_true_bool \c_false_bool 
#1<-\pdfmanagement_if_active_p: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\bool_if_p:n {\pdfmanagement_if_active_p: }
#2<-\c_false_bool 

\use:n #1->#1
#1<-\cs_gset_protected:Npn \__opacity_backend_select_aux:n ##1{}

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_reset: 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_reset: 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_reset: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_reset: }{\token_to_meaning:N \__opacity_backend_reset: }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_fill:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_fill:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_fill:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_fill:n }{\token_to_meaning:N \__opacity_backend_fill:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_stroke:n 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_stroke:n 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_stroke:n 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_stroke:n }{\token_to_meaning:N \__opacity_backend_stroke:n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_new_protected:Npn #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npn #
1
#1<-\__opacity_backend_fill_stroke:nn 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_fill_stroke:nn 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_fill_stroke:nn 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_fill_stroke:nn }{\token_to_meaning:N \__opacity_backend_fill_stroke:n
n }

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\cs_generate_variant:Nn #1#2->\__cs_generate_variant:N #1\use:x {\__cs_generate
_variant:nnNN \cs_split_function:N #1\exp_not:N #1\tl_to_str:n {#2},\exp_not:N 
\scan_stop: ,\exp_not:N \q__cs_recursion_stop }
#1<-\__opacity_backend_fill_stroke:nn 
#2<-xx

\__cs_generate_variant:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\cs_set
_eq:NN \__cs_tmp:w \cs_new_protected:Npx \else: \exp_after:wN \__cs_generate_va
riant:ww \token_to_meaning:N #1ma\s__cs_mark \s__cs_mark \cs_new_protected:Npx 
pr\s__cs_mark \cs_new:Npx \s__cs_stop \fi: 
#1<-\__opacity_backend_fill_stroke:nn 

\__cs_generate_variant:ww #1ma#2\s__cs_mark ->\__cs_generate_variant:wwNw #1
#1<-\protected\long 
#2<-cro:#1#2->\str_if_eq:nnTF {#1}{#2}{\__opacity_backend_select_aux:n {#1}}{\t
l_set:Nn \l__opacity_backend_fill_tl {#1}\tl_set:Nn \l__opacity_backend_stroke_
tl {#2}\pdfmanagement_add:nnn {Page/Resources/ExtGState}{opacity.fill#1}{<</ca 
#1>>}\pdfmanagement_add:nnn {Page/Resources/ExtGState}{opacity.stroke#1}{<</CA 
#2>>}\__kernel_color_backend_stack_push:nn \c__opacity_backend_stack_int {/opac
ity.fill#1 gs/opacity.stroke#2 gs}\group_insert_after:N \__opacity_backend_rese
t: }ma

\__cs_generate_variant:wwNw #1pr#2\s__cs_mark #3#4\s__cs_stop ->\cs_set_eq:NN \
__cs_tmp:w #3
#1<-\
#2<-otected\long 
#3<-\cs_new_protected:Npx 
#4<-pr\s__cs_mark \cs_new:Npx 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\__cs_generate_variant:nnNN \cs_split_function:N \__opacity_backend_fill_st
roke:nn \exp_not:N \__opacity_backend_fill_stroke:nn \tl_to_str:n {xx},\exp_not
:N \scan_stop: ,\exp_not:N \q__cs_recursion_stop 

\cs_split_function:N #1->\exp_after:wN \exp_after:wN \exp_after:wN \__cs_split_
function_auxi:w \cs_to_str:N #1\s__cs_mark \c_true_bool :\s__cs_mark \c_false_b
ool \s__cs_stop 
#1<-\__opacity_backend_fill_stroke:nn 

\cs_to_str:N ->\tex_romannumeral:D \if:w \token_to_str:N \ \__cs_to_str:w \fi: 
\exp_after:wN \__cs_to_str:N \token_to_str:N 

\__cs_to_str:N #1->\c_zero_int 
#1<-\

\__cs_split_function_auxi:w #1:#2\s__cs_mark #3#4\s__cs_stop ->\__cs_split_func
tion_auxii:w #1\s__cs_mark \s__cs_stop {#2}#3
#1<-__opacity_backend_fill_stroke
#2<-nn
#3<-\c_true_bool 
#4<-:\s__cs_mark \c_false_bool 

\__cs_split_function_auxii:w #1\s__cs_mark #2\s__cs_stop ->{#1}
#1<-__opacity_backend_fill_stroke
#2<-

\l__exp_internal_tl ->\__cs_generate_variant:nnNN {__opacity_backend_fill_strok
e}{nn}\c_true_bool \__opacity_backend_fill_stroke:nn xx,\scan_stop: ,\q__cs_rec
ursion_stop 

\__cs_generate_variant:nnNN #1#2#3#4->\if_meaning:w \c_false_bool #3\msg_error:
nnx {kernel}{missing-colon}{\token_to_str:c {#1}}\exp_after:wN \__cs_use_none_d
elimit_by_q_recursion_stop:w \fi: \__cs_generate_variant:Nnnw #4{#1}{#2}
#1<-__opacity_backend_fill_stroke
#2<-nn
#3<-\c_true_bool 
#4<-\__opacity_backend_fill_stroke:nn 

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__opacity_backend_fill_stroke:nn 
#2<-__opacity_backend_fill_stroke
#3<-nn
#4<-xx

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:nNwN {}x
x\__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nn { {}\fi: \__cs_generat
e_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__opacity_backend_fill_st
roke:nn {__opacity_backend_fill_stroke}{xx}

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-x\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-x
#3<-\__cs_generate_variant_loop_end:nwwwNNnn 
#4<-n

\__cs_generate_variant_loop_base:N #1->\if:w c#1N\else: \if:w o#1n\else: \if:w 
V#1n\else: \if:w v#1n\else: \if:w f#1n\else: \if:w e#1n\else: \if:w x#1n\else: 
\if:w n#1n\else: \if:w N#1N\else: \scan_stop: \fi: \fi: \fi: \fi: \fi: \fi: \fi
: \fi: \fi: 
#1<-x

\prg_do_nothing: ->

\__cs_generate_variant_loop:nNwN #1#2#3\s__cs_mark #4->\if:w #2#4\exp_after:wN 
\__cs_generate_variant_loop_same:w \else: \if:w #4\__cs_generate_variant_loop_b
ase:N #2\else: \if:w 0\if:w N#4\else: \if:w n#4\else: 1\fi: \fi: \if:w \scan_st
op: \__cs_generate_variant_loop_base:N #21\fi: 0\__cs_generate_variant_loop_spe
cial:NNwNNnn #4#2\else: \__cs_generate_variant_loop_invalid:NNwNNnn #4#2\fi: \f
i: \fi: #1\prg_do_nothing: #2\__cs_generate_variant_loop:nNwN {}#3\s__cs_mark 
#1<-
#2<-\__cs_generate_variant_loop_end:nwwwNNnn 
#3<-
#4<- {}\fi: \__cs_generate_variant_loop_long:wNNnn 

\__cs_generate_variant_loop_end:nwwwNNnn #1#2\s__cs_mark #3 #4\s__cs_stop #5#6#
7#8->\scan_stop: \scan_stop: \fi: \s__cs_mark \s__cs_stop \exp_not:N #6\exp_not
:c {#7:#8#1#3}
#1<-
#2<-\fi: \__cs_generate_variant_loop_long:wNNnn \exp_after:wN \__cs_generate_va
riant_loop_same:w \else: \if:w  {}\fi: \__cs_generate_variant_loop_long:wNNnn \
__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn \els
e: \if:w 0\if:w N {}\fi: \__cs_generate_variant_loop_long:wNNnn \else: \if:w n 
{}\fi: \__cs_generate_variant_loop_long:wNNnn \else: 1\fi: \fi: \if:w \scan_sto
p: \__cs_generate_variant_loop_base:N \__cs_generate_variant_loop_end:nwwwNNnn 
1\fi: 0\__cs_generate_variant_loop_special:NNwNNnn  {}\fi: \__cs_generate_varia
nt_loop_long:wNNnn \__cs_generate_variant_loop_end:nwwwNNnn \else: \__cs_genera
te_variant_loop_invalid:NNwNNnn  {}\fi: \__cs_generate_variant_loop_long:wNNnn 
\__cs_generate_variant_loop_end:nwwwNNnn \fi: \fi: \fi: \prg_do_nothing: \__cs_
generate_variant_loop_end:nwwwNNnn \__cs_generate_variant_loop:nNwN {}
#3<-
#4<-
#5<-\exp_not:N 
#6<-\__opacity_backend_fill_stroke:nn 
#7<-__opacity_backend_fill_stroke
#8<-xx

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-__opacity_backend_fill_stroke:xx

\l__exp_internal_tl ->\__cs_generate_variant:wwNN xx\s__cs_mark \s__cs_stop \__
opacity_backend_fill_stroke:nn \__opacity_backend_fill_stroke:xx 

\__cs_generate_variant:wwNN #1\s__cs_mark #2\s__cs_stop #3#4->#2\cs_if_free:NT 
#4{\group_begin: \__cs_generate_internal_variant:n {#1}\__cs_tmp:w #4{\exp_not:
c {exp_args:N#1}\exp_not:N #3}\group_end: }
#1<-xx
#2<-
#3<-\__opacity_backend_fill_stroke:nn 
#4<-\__opacity_backend_fill_stroke:xx 

\cs_if_free:NT #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: \use:
n \use_none:n 
#1<-\__opacity_backend_fill_stroke:xx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\use_none:n 

\use:n #1->#1
#1<-\group_begin: \__cs_generate_internal_variant:n {xx}\__cs_tmp:w \__opacity_
backend_fill_stroke:xx {\exp_not:c {exp_args:Nxx}\exp_not:N \__opacity_backend_
fill_stroke:nn }\group_end: 

\__cs_generate_internal_variant:n #1->\__cs_generate_internal_variant:wwnNwn #1
\s__cs_mark {\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx }\cs_new_protected
:cpn \use:x x\s__cs_mark {}\cs_new:cpn \tex_expanded:D \s__cs_stop {#1}
#1<-xx

\__cs_generate_internal_variant:wwnNwn #1x#2\s__cs_mark #3#4#5#6\s__cs_stop #7-
>#3\cs_if_free:cT {exp_args:N#7}{\__cs_generate_internal_variant:NNn #4#5{#7}}
#1<-
#2<-x
#3<-\cs_set_eq:NN \__cs_tmp:w \cs_new_protected:Npx 
#4<-\cs_new_protected:cpn 
#5<-\use:x 
#6<-x\s__cs_mark {}\cs_new:cpn \tex_expanded:D 
#7<-xx

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__cs_tmp:w 

\cs_if_free:cT #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \ex
p_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan_
stop: \prg_return_true: \else: \prg_return_false: \fi: }{\prg_return_true: }\ex
p_end: \use:n \use_none:n 
#1<-exp_args:Nxx

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w exp_args:Nxx\cs_end: \scan_stop: \prg_ret
urn_true: \else: \prg_return_false: \fi: 
#2<-\prg_return_true: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\__cs_generate_internal_variant:NNn \cs_new_protected:cpn \use:x {xx}

\__cs_tmp:w #1->\__kernel_chk_if_free_cs:N #1\cs_gset_protected:Npx #1
#1<-\__opacity_backend_fill_stroke:xx 

\__kernel_chk_if_free_cs:N #1->\cs_if_free:NF #1{\msg_error:nnxx {kernel}{comma
nd-already-defined}{\token_to_str:N #1}{\token_to_meaning:N #1}}
#1<-\__opacity_backend_fill_stroke:xx 

\cs_if_free:NF #1->\if_meaning:w #1\scan_stop: \prg_return_true: \else: \if_cs_
exist:N #1\prg_return_false: \else: \prg_return_true: \fi: \fi: \exp_end: {}
#1<-\__opacity_backend_fill_stroke:xx 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\msg_error:nnxx {kernel}{command-already-defined}{\token_to_str:N \__opacit
y_backend_fill_stroke:xx }{\token_to_meaning:N \__opacity_backend_fill_stroke:x
x }

\cs_gset_protected:Npx ->\tex_protected:D \tex_long:D \tex_xdef:D 

\exp_not:c #1->\exp_after:wN \exp_not:N \cs:w #1\cs_end: 
#1<-exp_args:Nxx

\__cs_generate_variant:Nnnw #1#2#3#4,->\if_meaning:w \scan_stop: #4\exp_after:w
N \__cs_use_none_delimit_by_q_recursion_stop:w \fi: \use:x {\exp_not:N \__cs_ge
nerate_variant:wwNN \__cs_generate_variant_loop:nNwN {}#4\__cs_generate_variant
_loop_end:nwwwNNnn \s__cs_mark #3 { {}\fi: \__cs_generate_variant_loop_long:wNN
nn } {}\s__cs_stop \exp_not:N #1{#2}{#4}}\__cs_generate_variant:Nnnw #1{#2}{#3}
#1<-\__opacity_backend_fill_stroke:nn 
#2<-__opacity_backend_fill_stroke
#3<-nn
#4<-\scan_stop: 

\__cs_use_none_delimit_by_q_recursion_stop:w #1\q__cs_recursion_stop ->
#1<-\use:x {\exp_not:N \__cs_generate_variant:wwNN \__cs_generate_variant_loop:
nNwN {}\scan_stop: \__cs_generate_variant_loop_end:nwwwNNnn \s__cs_mark nn { {}
\fi: \__cs_generate_variant_loop_long:wNNnn } {}\s__cs_stop \exp_not:N \__opaci
ty_backend_fill_stroke:nn {__opacity_backend_fill_stroke}{\scan_stop: }}\__cs_g
enerate_variant:Nnnw \__opacity_backend_fill_stroke:nn {__opacity_backend_fill_
stroke}{nn}
)
\@expl@@@filehook@file@pop@assign@@nnnn #1#2#3#4->\tl_set:Nn \CurrentFilePathUs
ed {#1}\tl_set:Nn \CurrentFileUsed {#2}\tl_set:Nn \CurrentFilePath {#3}\tl_set:
Nn \CurrentFile {#4}
#1<-
#2<-l3backend-pdftex.def
#3<-
#4<-l3backend-pdftex.def

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFileUsed 
#2<-l3backend-pdftex.def

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePath 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFile 
#2<-l3backend-pdftex.def

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/\CurrentFile /after

\CurrentFile ->l3backend-pdftex.def

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/after

\__hook file/after ->\__hook_toplevel file/after \__hook_next file/after 

\__hook_toplevel file/after ->

\__hook_next file/after ->

\@expl@@@filehook@file@pop@@ ->\seq_gpop:NNTF \g__filehook_input_file_seq \l__f
ilehook_internal_tl {\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehoo
k_internal_tl }{\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from a
n empty file name stack.}}

\seq_gpop:NNTF #1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \tl_gset:Nn #1#2\ex
p_end: 
#1<-\g__filehook_input_file_seq 
#2<-\l__filehook_internal_tl 

\__seq_pop_TF:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \prg_return_false: \e
lse: #1#2#3#4\prg_return_true: \fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__filehook_input_file_seq 
#4<-\l__filehook_internal_tl 

\__seq_pop_left:NNN #1#2#3->\exp_after:wN \__seq_pop_left:wnwNNN #2\s__seq_stop
 #1#2#3
#1<-\tl_gset:Nn 
#2<-\g__filehook_input_file_seq 
#3<-\l__filehook_internal_tl 

\g__filehook_input_file_seq ->\s__seq \__seq_item:n {{}{l3backend-pdftex.def}{}
{l3backend-pdftex.def}}\__seq_item:n {{}{}{}{}}

\__seq_pop_left:wnwNNN #1\__seq_item:n #2#3\s__seq_stop #4#5#6->#4#5{#1#3}\tl_s
et:Nn #6{#2}
#1<-\s__seq 
#2<-{}{l3backend-pdftex.def}{}{l3backend-pdftex.def}
#3<-\__seq_item:n {{}{}{}{}}
#4<-\tl_gset:Nn 
#5<-\g__filehook_input_file_seq 
#6<-\l__filehook_internal_tl 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__filehook_input_file_seq 
#2<-\s__seq \__seq_item:n {{}{}{}{}}

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__filehook_internal_tl 
#2<-{}{l3backend-pdftex.def}{}{l3backend-pdftex.def}

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehook_internal_tl 
#2<-\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from an empty file
 name stack.}

\l__filehook_internal_tl ->{}{l3backend-pdftex.def}{}{l3backend-pdftex.def}

\__filehook_file_pop_assign:nnnn #1#2#3#4->\tl_set:Nn \CurrentFilePathUsed {#1}
\tl_set:Nn \CurrentFileUsed {#2}\tl_set:Nn \CurrentFilePath {#3}\tl_set:Nn \Cur
rentFile {#4}
#1<-
#2<-l3backend-pdftex.def
#3<-
#4<-l3backend-pdftex.def

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFileUsed 
#2<-l3backend-pdftex.def

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePath 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFile 
#2<-l3backend-pdftex.def

\@currname ->l3backend-pdftex

\@currext ->def

\@currname ->l3backend-pdftex

\@currext ->def

\l3backend-pdftex.def-h@@k ->

\@currname ->l3backend-pdftex

\@currext ->def

\@currname ->l3backend-pdftex

\@currext ->def

\unprocessedoptions-l3backend-pdftex.def ->\ifx \@currext \@pkgextension \prote
cted@edef \@curroptions {\@ptionlist {\@currname .\@currext }}\@for \CurrentOpt
ion :=\@curroptions \do {\ifx \CurrentOption \@empty \else \@unknownoptionerror
 \fi }\fi 

\@currname ->l3backend-pdftex

\@currext ->def

\@expl@@@filehook@file@pop@@ ->\seq_gpop:NNTF \g__filehook_input_file_seq \l__f
ilehook_internal_tl {\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehoo
k_internal_tl }{\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from a
n empty file name stack.}}

\seq_gpop:NNTF #1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \tl_gset:Nn #1#2\ex
p_end: 
#1<-\g__filehook_input_file_seq 
#2<-\l__filehook_internal_tl 

\__seq_pop_TF:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \prg_return_false: \e
lse: #1#2#3#4\prg_return_true: \fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__filehook_input_file_seq 
#4<-\l__filehook_internal_tl 

\__seq_pop_left:NNN #1#2#3->\exp_after:wN \__seq_pop_left:wnwNNN #2\s__seq_stop
 #1#2#3
#1<-\tl_gset:Nn 
#2<-\g__filehook_input_file_seq 
#3<-\l__filehook_internal_tl 

\g__filehook_input_file_seq ->\s__seq \__seq_item:n {{}{}{}{}}

\__seq_pop_left:wnwNNN #1\__seq_item:n #2#3\s__seq_stop #4#5#6->#4#5{#1#3}\tl_s
et:Nn #6{#2}
#1<-\s__seq 
#2<-{}{}{}{}
#3<-
#4<-\tl_gset:Nn 
#5<-\g__filehook_input_file_seq 
#6<-\l__filehook_internal_tl 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__filehook_input_file_seq 
#2<-\s__seq 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__filehook_internal_tl 
#2<-{}{}{}{}

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehook_internal_tl 
#2<-\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from an empty file
 name stack.}

\l__filehook_internal_tl ->{}{}{}{}

\__filehook_file_pop_assign:nnnn #1#2#3#4->\tl_set:Nn \CurrentFilePathUsed {#1}
\tl_set:Nn \CurrentFileUsed {#2}\tl_set:Nn \CurrentFilePath {#3}\tl_set:Nn \Cur
rentFile {#4}
#1<-
#2<-
#3<-
#4<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFileUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePath 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFile 
#2<-

\@firstofone #1->#1
#1<-\@ifl@ter \@currext {\@currname }{}{}{\@latex@warning@no@line {You have req
uested,\on@line , version\MessageBreak `' of \@cls@pkg \space \@currname ,\Mess
ageBreak but only version\MessageBreak `\csname ver@\@currname .\@currext \endc
sname '\MessageBreak is available}}\ifx \@currext \@clsextension \let \LoadClas
s \@twoloadclasserror \fi 

\@ifl@ter #1#2->\expandafter \@ifl@t@r \csname ver@#2.#1\endcsname 
#1<-\@currext 
#2<-\@currname 

\@currname ->l3backend-pdftex

\@currext ->def

\@ifl@t@r #1#2->\ifnum \expandafter \@parse@version@ #1//00\@nil <\expandafter 
\@parse@version@ #2//00\@nil \expandafter \@secondoftwo \else \expandafter \@fi
rstoftwo \fi 
#1<-\ver@l3backend-pdftex.def 
#2<-

\ver@l3backend-pdftex.def ->2023-01-16 L3 backend support: PDF output (pdfTeX)

\@parse@version@ #1->\@parse@version 0#1
#1<-2

\@parse@version #1/#2/#3#4#5\@nil ->\@parse@version@dash #1-#2-#3#4\@nil 
#1<-02023-01-16 L3 backend support: PDF output (pdfTeX)
#2<-
#3<-0
#4<-0
#5<-

\@parse@version@dash #1-#2-#3#4#5\@nil ->\if \relax #2\relax \else #1\fi #2#3#4
 
#1<-02023
#2<-01
#3<-1
#4<-6
#5<- L3 backend support: PDF output (pdfTeX)--00

\@parse@version@ #1->\@parse@version 0#1
#1<-/

\@parse@version #1/#2/#3#4#5\@nil ->\@parse@version@dash #1-#2-#3#4\@nil 
#1<-0
#2<-
#3<-0
#4<-0
#5<-

\@parse@version@dash #1-#2-#3#4#5\@nil ->\if \relax #2\relax \else #1\fi #2#3#4
 
#1<-0
#2<-
#3<-0
#4<-0
#5<-

\@firstoftwo #1#2->#1
#1<-
#2<-\@latex@warning@no@line {You have requested,\on@line , version\MessageBreak
 `' of \@cls@pkg \space \@currname ,\MessageBreak but only version\MessageBreak
 `\csname ver@\@currname .\@currext \endcsname '\MessageBreak is available}

\@popfilename ->\@expl@@@hook@curr@name@pop@@ \expandafter \@p@pfilename \@curr
namestack \@nil \expandafter \@p@pfilepath \@kernel@currpathstack \@nil \@expl@
pop@filename@@ 

\@expl@@@hook@curr@name@pop@@ ->\seq_gpop:NNTF \g__hook_name_stack_seq \l__hook
_return_tl {\tl_gset_eq:NN \g__hook_hook_curr_name_tl \l__hook_return_tl }{\msg
_error:nn {hooks}{extra-pop-label}}

\seq_gpop:NNTF #1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \tl_gset:Nn #1#2\ex
p_end: 
#1<-\g__hook_name_stack_seq 
#2<-\l__hook_return_tl 

\__seq_pop_TF:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \prg_return_false: \e
lse: #1#2#3#4\prg_return_true: \fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__hook_name_stack_seq 
#4<-\l__hook_return_tl 

\__seq_pop_left:NNN #1#2#3->\exp_after:wN \__seq_pop_left:wnwNNN #2\s__seq_stop
 #1#2#3
#1<-\tl_gset:Nn 
#2<-\g__hook_name_stack_seq 
#3<-\l__hook_return_tl 

\g__hook_name_stack_seq ->\s__seq \__seq_item:n {top-level}

\__seq_pop_left:wnwNNN #1\__seq_item:n #2#3\s__seq_stop #4#5#6->#4#5{#1#3}\tl_s
et:Nn #6{#2}
#1<-\s__seq 
#2<-top-level
#3<-
#4<-\tl_gset:Nn 
#5<-\g__hook_name_stack_seq 
#6<-\l__hook_return_tl 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_name_stack_seq 
#2<-\s__seq 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__hook_return_tl 
#2<-top-level

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\tl_gset_eq:NN \g__hook_hook_curr_name_tl \l__hook_return_tl 
#2<-\msg_error:nn {hooks}{extra-pop-label}

\tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_hook_curr_name_tl 
#2<-\l__hook_return_tl 

\@currnamestack ->{}{}{12}

\@p@pfilename #1#2#3#4\@nil ->\gdef \@currname {#1}\gdef \@currext {#2}\catcode
 `\@ #3\relax \gdef \@currnamestack {#4}
#1<-
#2<-
#3<-12
#4<-

\@kernel@currpathstack ->{}

\@p@pfilepath #1->\gdef \@currpath {#1}\@p@pfilepath@aux \@empty 
#1<-

\@p@pfilepath@aux #1\@nil ->\xdef \@kernel@currpathstack {#1}
#1<-\@empty 

\@empty ->

\@expl@pop@filename@@ ->\__kernel_file_input_pop: \tl_if_empty:NTF \l__expl_sta
tus_stack_tl {\ExplSyntaxOff }{\exp_after:wN \__expl_status_pop:w \l__expl_stat
us_stack_tl \s__expl_stop }

\__kernel_file_input_pop: ->\seq_gpop:NN \g__file_stack_seq \l__file_internal_t
l \exp_after:wN \__file_input_pop:nnn \l__file_internal_tl 

\seq_gpop:NN ->\__seq_pop:NNNN \__seq_pop_left:NNN \tl_gset:Nn 

\__seq_pop:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \tl_set:Nn #4{\q_no_valu
e }\else: #1#2#3#4\fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__file_stack_seq 
#4<-\l__file_internal_tl 

\__seq_pop_left:NNN #1#2#3->\exp_after:wN \__seq_pop_left:wnwNNN #2\s__seq_stop
 #1#2#3
#1<-\tl_gset:Nn 
#2<-\g__file_stack_seq 
#3<-\l__file_internal_tl 

\g__file_stack_seq ->\s__seq \__seq_item:n {{}{tl2022_rerun}{}}

\__seq_pop_left:wnwNNN #1\__seq_item:n #2#3\s__seq_stop #4#5#6->#4#5{#1#3}\tl_s
et:Nn #6{#2}
#1<-\s__seq 
#2<-{}{tl2022_rerun}{}
#3<-
#4<-\tl_gset:Nn 
#5<-\g__file_stack_seq 
#6<-\l__file_internal_tl 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__file_stack_seq 
#2<-\s__seq 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__file_internal_tl 
#2<-{}{tl2022_rerun}{}

\l__file_internal_tl ->{}{tl2022_rerun}{}

\__file_input_pop:nnn #1#2#3->\str_gset:Nn \g_file_curr_dir_str {#1}\str_gset:N
n \g_file_curr_name_str {#2}\str_gset:Nn \g_file_curr_ext_str {#3}
#1<-
#2<-tl2022_rerun
#3<-

\str_gset:Nn #1#2->\tl_gset:Nx #1{\tl_to_str:n {#2}}
#1<-\g_file_curr_dir_str 
#2<-

\tl_gset:Nx #1#2->\__kernel_tl_gset:Nx #1{#2}
#1<-\g_file_curr_dir_str 
#2<-\tl_to_str:n {}

\str_gset:Nn #1#2->\tl_gset:Nx #1{\tl_to_str:n {#2}}
#1<-\g_file_curr_name_str 
#2<-tl2022_rerun

\tl_gset:Nx #1#2->\__kernel_tl_gset:Nx #1{#2}
#1<-\g_file_curr_name_str 
#2<-\tl_to_str:n {tl2022_rerun}

\str_gset:Nn #1#2->\tl_gset:Nx #1{\tl_to_str:n {#2}}
#1<-\g_file_curr_ext_str 
#2<-

\tl_gset:Nx #1#2->\__kernel_tl_gset:Nx #1{#2}
#1<-\g_file_curr_ext_str 
#2<-\tl_to_str:n {}

\tl_if_empty:NTF #1->\if_meaning:w #1\c_empty_tl \__prg_TF_true:w \fi: \use_ii:
nn 
#1<-\l__expl_status_stack_tl 

\use_ii:nn #1#2->#2
#1<-\ExplSyntaxOff 
#2<-\exp_after:wN \__expl_status_pop:w \l__expl_status_stack_tl \s__expl_stop 

\l__expl_status_stack_tl ->00

\__expl_status_pop:w #1#2\s__expl_stop ->\tl_set:Nn \l__expl_status_stack_tl {#
2}\int_if_odd:nTF {#1}{\ExplSyntaxOn }{\ExplSyntaxOff }
#1<-0
#2<-0

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__expl_status_stack_tl 
#2<-0

\int_if_odd:nTF #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_TF_tr
ue:w \fi: \use_ii:nn 
#1<-0

\use_ii:nn #1#2->#2
#1<-\ExplSyntaxOn 
#2<-\ExplSyntaxOff 

\ExplSyntaxOff ->\char_set_catcode:nn {9}{10}\char_set_catcode:nn {32}{10}\char
_set_catcode:nn {34}{12}\char_set_catcode:nn {58}{12}\char_set_catcode:nn {94}{
7}\char_set_catcode:nn {95}{8}\char_set_catcode:nn {124}{12}\char_set_catcode:n
n {126}{13}\tex_endlinechar:D =13\scan_stop: \bool_set_false:N \l__kernel_expl_
bool \cs_set_protected:Npn \ExplSyntaxOff {}

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-9
#2<-10

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-9

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-10

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-32
#2<-10

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-32

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-10

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-34
#2<-12

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-34

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-12

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-58
#2<-12

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-58

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-12

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-94
#2<-7

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-94

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-7

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-95
#2<-8

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-95

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-8

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-124
#2<-12

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-124

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-12

\char_set_catcode:nn #1#2->\tex_catcode:D \int_eval:n {#1}=\int_eval:n {#2}\exp
_stop_f: 
#1<-126
#2<-13

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-126

\int_eval:n #1->\tex_the:D \__int_eval:w #1\__int_eval_end: 
#1<-13

\bool_set_false:N #1->\cs_set_eq:NN #1\c_false_bool 
#1<-\l__kernel_expl_bool 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\l__kernel_expl_bool 

\cs_set_protected:Npn ->\tex_protected:D \tex_long:D \tex_def:D 

\@reset@ptions ->\global \ifx \@currext \@clsextension \let \default@ds \Option
NotUsed \else \let \default@ds \@unknownoptionerror \fi \global \let \ds@ \@emp
ty \global \let \@declaredoptions \@empty 

\@floatplacement ->\global \@topnum \c@topnumber \global \@toproom \topfraction
 \@colht \global \@botnum \c@bottomnumber \global \@botroom \bottomfraction \@c
olht \global \@colnum \c@totalnumber \@fpmin \floatpagefraction \@colht \global
 \@fpmin \@fpmin 

\topfraction ->.9

\bottomfraction ->.9

\floatpagefraction ->.9

\@dblfloatplacement ->\global \@dbltopnum \c@dbltopnumber \global \@dbltoproom 
\dbltopfraction \@colht \@textmin \@colht \advance \@textmin -\@dbltoproom \@fp
min \dblfloatpagefraction \textheight \@fptop \@dblfptop \@fpsep \@dblfpsep \@f
pbot \@dblfpbot \def \f@depth {1sp}

\dbltopfraction ->.9

\dblfloatpagefraction ->.9

\makeatletter ->\protect \makeatletter  

\makeatletter  ->\catcode `\@11\relax 

\@input #1->\IfFileExists {#1}{\@@input \@filef@und }{\typeout {No file #1.}}
#1<-\jobname .aux

\IfFileExists ->\protect \IfFileExists  

\IfFileExists  #1->\set@curr@file {#1}\expandafter \IfFileExists@ \expandafter 
{\@curr@file }
#1<-\jobname .aux

\set@curr@file ->\begingroup \set@curr@file@aux 

\set@curr@file@aux #1->\escapechar \m@ne \let \protect \string \edef ~{\string 
~}\expandafter \def \csname \expandafter \endcsname \expandafter {\csname \endc
sname }\@expl@@@filehook@if@no@extension@@nTF {#1}{\@tempswatrue }{\@tempswafal
se }\@kernel@make@file@csname \@curr@file \@expl@@@filehook@resolve@file@subst@
@w {#1}\@expl@@@filehook@if@file@replaced@@TF {\@kernel@make@file@csname \@curr
@file@reqd \@expl@@@filehook@normalize@file@name@@w {#1}\if@tempswa \@expl@@@fi
lehook@drop@extension@@N \@curr@file@reqd \fi }{\if@tempswa \@expl@@@filehook@d
rop@extension@@N \@curr@file \fi \global \let \@curr@file@reqd \@curr@file }\@e
xpl@@@filehook@clear@replacement@flag@@ \endgroup 
#1<-\jobname .aux

@expl@@@filehook@if@no@extension@@nTF #1->exp_args:Ne tl_if_empty:nTF {file_par
se_full_name_apply:nN {#1}use_iii:nnn }
#1<-jobname .aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-tl_if_empty:nTF 
#2<-file_parse_full_name_apply:nN {jobname .aux}use_iii:nnn 

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-jobname .aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {jobname .aux}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-jobname .aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {jobname .aux}
}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {jobname .aux}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-jobname .aux

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.aux 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.aux

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.aux}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.aux

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.aux
#2<-tl2022_rerun
#3<-aux
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-aux

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}aux{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}aux{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.auxs__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.aux}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.aux

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.aux

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.aux
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-tl2022_rerun.aux

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun.aux
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}tl2022_rerun.aux.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/tl2022_rerun.aux}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun
#3<-aux.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-aux.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {tl2022_rerun}{__file_parse_full_name_ti
dy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{}}}{__file_parse
_full_name_tidy:nnnN {}{.tl2022_rerun}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun}aux.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.tl2022_rerun
#2<-aux
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.tl2022_rerun}{tl_if_empty:nTF {aux}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.aux}{}}}{__file_parse_full
_name_tidy:nnnN {.tl2022_rerun}{.aux}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun.aux}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.tl2022_rerun

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {aux}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.aux}{}}
#2<-__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{.aux}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.tl2022_rerun
#2<-.aux
#3<-
#4<-use_iii:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-use_iii:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .tl2022_rerunprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

use_iii:nnn #1#2#3->#3
#1<-
#2<-tl2022_rerun
#3<-.aux

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.aux

use_ii:nn #1#2->#2
#1<-@tempswatrue 
#2<-@tempswafalse 

@tempswafalse ->let if@tempswa iffalse 

@kernel@make@file@csname #1#2#3->xdef #1{expandafter @set@curr@file@aux csname 
expandafter #2@firstofone #3@nil endcsname }
#1<-@curr@file 
#2<-@expl@@@filehook@resolve@file@subst@@w 
#3<-jobname .aux

@firstofone #1->#1
#1<-jobname 

@expl@@@filehook@resolve@file@subst@@w #1@nil ->__filehook_file_parse_full_name
:nN {#1}__filehook_file_subst_begin:nnn 
#1<-jobname .aux

__filehook_file_parse_full_name:nN #1->exp_args:Nf file_parse_full_name_apply:n
N {exp_args:Nf __filehook_full_name:nn {file_full_name:n {#1}}{#1}}
#1<-jobname .aux

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-file_parse_full_name_apply:nN 
#2<-exp_args:Nf __filehook_full_name:nn {file_full_name:n {jobname .aux}}{jobna
me .aux}

exp_end_continue_f:w ->`^^@

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-__filehook_full_name:nn 
#2<-file_full_name:n {jobname .aux}

exp_end_continue_f:w ->`^^@

file_full_name:n #1->exp_args:Ne __file_full_name:n {__kernel_file_name_sanitiz
e:n {#1}}
#1<-jobname .aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_full_name:n 
#2<-__kernel_file_name_sanitize:n {jobname .aux}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-jobname .aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {jobname .aux}
}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {jobname .aux}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-jobname .aux

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.aux 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.aux

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.aux}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.aux

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.aux
#2<-tl2022_rerun
#3<-aux
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-aux

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}aux{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}aux{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.auxs__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.aux}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.aux

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.aux

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.aux
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_full_name:n #1->tl_if_blank:nF {#1}{exp_args:Nne __file_full_name_aux:nn
 {#1}{__file_size:n {#1}}}
#1<-tl2022_rerun.aux

tl_if_blank:nF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none:
n #1?}scan_stop: __prg_F_true:w fi: use:n 
#1<-tl2022_rerun.aux

use_none:n #1->
#1<-t

use:n #1->#1
#1<-exp_args:Nne __file_full_name_aux:nn {tl2022_rerun.aux}{__file_size:n {tl20
22_rerun.aux}}

exp_args:Nne #1#2#3->tex_expanded:D {exp_not:N #1{exp_not:n {#2}}{__kernel_exp_
not:w tex_expanded:D {{#3}}}}
#1<-__file_full_name_aux:nn 
#2<-tl2022_rerun.aux
#3<-__file_size:n {tl2022_rerun.aux}

__file_full_name_aux:nn #1#2->tl_if_blank:nTF {#2}{seq_map_tokens:Nn l_file_sea
rch_path_seq {__file_full_name_aux:Nnn seq_map_break:n {#1}}cs_if_exist:NT inpu
t@path {tl_map_tokens:Nn input@path {__file_full_name_aux:Nnn tl_map_break:n {#
1}}}__file_name_end: }{__file_ext_check:nn {#1}{#2}}
#1<-tl2022_rerun.aux
#2<-168

tl_if_blank:nTF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none
:n #1?}scan_stop: __prg_TF_true:w fi: use_ii:nn 
#1<-168

use_none:n #1->
#1<-1

use_ii:nn #1#2->#2
#1<-seq_map_tokens:Nn l_file_search_path_seq {__file_full_name_aux:Nnn seq_map_
break:n {tl2022_rerun.aux}}cs_if_exist:NT input@path {tl_map_tokens:Nn input@pa
th {__file_full_name_aux:Nnn tl_map_break:n {tl2022_rerun.aux}}}__file_name_end
: 
#2<-__file_ext_check:nn {tl2022_rerun.aux}{168}

__file_ext_check:nn #1#2->__file_ext_check:nnw {#2}{/}#1/q__file_nil /s__file_s
top 
#1<-tl2022_rerun.aux
#2<-168

__file_ext_check:nnw #1#2#3/#4/#5s__file_stop ->__file_quark_if_nil:nTF {#4}{ex
p_args:No __file_ext_check:nnnw {use_none:n #2}{#1}{#3}#3.q__file_nil .s__file_
stop }{__file_ext_check:nnw {#1}{#2#3/}#4/#5s__file_stop }
#1<-168
#2<-/
#3<-tl2022_rerun.aux
#4<-q__file_nil 
#5<-

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-q__file_nil 

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}q__file_nil {}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!q__file_nil ?

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-exp_args:No __file_ext_check:nnnw {use_none:n /}{168}{tl2022_rerun.aux}tl20
22_rerun.aux.q__file_nil .s__file_stop 
#2<-__file_ext_check:nnw {168}{/tl2022_rerun.aux/}q__file_nil /s__file_stop 

exp_args:No #1#2->exp_after:wN #1exp_after:wN {#2}
#1<-__file_ext_check:nnnw 
#2<-use_none:n /

use_none:n #1->
#1<-/

__file_ext_check:nnnw #1#2#3#4.#5.#6s__file_stop ->__file_quark_if_nil:nTF {#5}
{__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-168
#3<-tl2022_rerun.aux
#4<-tl2022_rerun
#5<-aux
#6<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-aux

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}aux{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}aux{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-__file_ext_check:nnn {tl2022_rerun.aux.tex}{tl2022_rerun.aux}{168}
#2<-tl2022_rerun.aux

__filehook_full_name:nn #1#2->tl_if_empty:nTF {#1}{tl_trim_spaces:n {#2}}{tl_tr
im_spaces:n {#1}}
#1<-tl2022_rerun.aux
#2<-jobname .aux

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-tl2022_rerun.aux

use_ii:nn #1#2->#2
#1<-tl_trim_spaces:n {jobname .aux}
#2<-tl_trim_spaces:n {tl2022_rerun.aux}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.aux

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.aux

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.aux
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-tl2022_rerun.aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {tl2022_rerun.aux}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-tl2022_rerun.aux

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {tl2022_rerun.
aux}}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {tl2022_rerun.aux}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-tl2022_rerun.aux

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.aux 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.aux

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.aux

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.aux}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.aux

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.aux
#2<-tl2022_rerun
#3<-aux
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-aux

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}aux{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}aux{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.auxs__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.aux}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.aux

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.aux

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.auxs__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.aux
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-tl2022_rerun.aux

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun.aux
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}tl2022_rerun.aux.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/tl2022_rerun.aux}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun
#3<-aux.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-aux.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {tl2022_rerun}{__file_parse_full_name_ti
dy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{}}}{__file_parse
_full_name_tidy:nnnN {}{.tl2022_rerun}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun}aux.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.tl2022_rerun
#2<-aux
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.tl2022_rerun}{tl_if_empty:nTF {aux}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.aux}{}}}{__file_parse_full
_name_tidy:nnnN {.tl2022_rerun}{.aux}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun.aux}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.tl2022_rerun

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {aux}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.aux}{}}
#2<-__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{.aux}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.tl2022_rerun
#2<-.aux
#3<-
#4<-__filehook_file_subst_begin:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-__filehook_file_subst_begin:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .tl2022_rerunprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

__filehook_file_subst_begin:nnn #1#2#3->__filehook_file_subst_tortoise_hare:nn 
{#2#3}{#2#3}{__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-tl2022_rerun
#3<-.aux

__filehook_file_subst_tortoise_hare:nn #1#2#3->cs_if_exist:cTF {@file-subst@#2}
{flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_rep
laced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@#2}}{__filehook_file_sub
st_loop:cc {@file-subst@#1}{@file-subst@use:c {@file-subst@#2}}}{use:c {@file-s
ubst@#2}}}{#3}
#1<-tl2022_rerun.aux
#2<-tl2022_rerun.aux
#3<-__filehook_file_name_compose:nnn {}{tl2022_rerun}{.aux}

cs_if_exist:cTF #1->if_cs_exist:w #1cs_end: exp_after:wN use_i:nn else: exp_aft
er:wN use_ii:nn fi: {exp_after:wN if_meaning:w cs:w #1cs_end: scan_stop: prg_re
turn_false: else: prg_return_true: fi: }prg_return_false: exp_end: 
#1<-@file-subst@tl2022_rerun.aux

use_ii:nn #1#2->#2
#1<-exp_after:wN if_meaning:w cs:w @file-subst@tl2022_rerun.auxcs_end: scan_sto
p: prg_return_false: else: prg_return_true: fi: 
#2<-prg_return_false: 

prg_return_false: ->exp_after:wN use_ii:nn exp:w 

use_ii:nn #1#2->#2
#1<-flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_
replaced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@tl2022_rerun.aux}}{__
filehook_file_subst_loop:cc {@file-subst@tl2022_rerun.aux}{@file-subst@use:c {@
file-subst@tl2022_rerun.aux}}}{use:c {@file-subst@tl2022_rerun.aux}}
#2<-__filehook_file_name_compose:nnn {}{tl2022_rerun}{.aux}

__filehook_file_name_compose:nnn #1#2#3->tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-tl2022_rerun
#3<-.aux

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-/

@set@curr@file@aux #1->expandafter ifx csname endcsname #1.texelse string #1fi 
#1<-tl2022_rerun.aux 

@expl@@@filehook@if@file@replaced@@TF #1#2->flag_if_raised:nTF {__filehook_file
_replaced}{#1}{#2}
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {jobname .aux}if@tempswa @expl@@@filehook@drop@extension@@N @curr@file@re
qd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

flag_if_raised:nTF #1->if_cs_exist:w flag #1 0cs_end: __prg_TF_true:w fi: use_i
i:nn 
#1<-__filehook_file_replaced

use_ii:nn #1#2->#2
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {jobname .aux}if@tempswa @expl@@@filehook@drop@extension@@N @curr@file@re
qd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

@expl@@@filehook@clear@replacement@flag@@ ->flag_clear:n {__filehook_file_repla
ced}

flag_clear:n #1->__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

__flag_clear:wn #1;#2->if_cs_exist:w flag #2 #1cs_end: cs_set_eq:cN {flag #2 #1
}tex_undefined:D exp_after:wN __flag_clear:wn int_value:w int_eval:w 1+#1else: 
use_i:nnn fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

use_i:nnn #1#2#3->#1
#1<-fi: 
#2<-;
#3<-__filehook_file_replaced

\@curr@file ->tl2022_rerun.aux

\IfFileExists@ #1#2#3->\openin \@inputcheck "#1" \ifeof \@inputcheck \ifx \inpu
t@path \@undefined \let \reserved@a \@secondoftwo \else \def \reserved@a {\@iff
ileonpath {#1}}\fi \else \closein \@inputcheck \edef \@filef@und {"#1" }\let \r
eserved@a \@firstoftwo \fi \expandafter \def \expandafter \reserved@a \expandaf
ter {\reserved@a {#2}{#3}}\reserved@a 
#1<-tl2022_rerun.aux
#2<-\@@input \@filef@und 
#3<-\typeout {No file \jobname .aux.}

\reserved@a #1#2->#1
#1<-\@@input \@filef@und 
#2<-\typeout {No file \jobname .aux.}

\reserved@a ->\@@input \@filef@und 

\@filef@und ->"tl2022_rerun.aux" 

(out/tl2022_rerun.aux
\bibdata #1->
#1<-tl2022_rerunNotes

\bibstyle #1->
#1<-apsrev4-2

\citation #1->
#1<-REVTEX42Control

\citation #1->
#1<-apsrev42Control

\newlabel ->\@newl@bel r

\@newl@bel #1#2#3->{\@ifundefined {#1@#2}\relax {\gdef \@multiplelabels {\@late
x@warning@no@line {There were multiply-defined labels}}\@latex@warning@no@line 
{Label `#2' multiply defined}}\global \@namedef {#1@#2}{#3}}
#1<-r
#2<-LastPage
#3<-{}{1}{}{}{}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-r@LastPage

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-r@LastPage
#2<-\relax 
#3<-\gdef \@multiplelabels {\@latex@warning@no@line {There were multiply-define
d labels}}\@latex@warning@no@line {Label `LastPage' multiply defined}

\@namedef #1->\expandafter \def \csname #1\endcsname 
#1<-r@LastPage
)
\openout1 = `tl2022_rerun.aux'.


\process@table ->\def \cdp@elt ##1##2##3##4{\@font@info {Checking defaults for 
##1/##2/##3/##4}\expandafter \ifx \csname ##1/##2/##3/##4\endcsname \relax \beg
ingroup \def \f@encoding {##1}\def \f@family {##2}\try@load@fontshape \endgroup
 \fi \expandafter \ifx \csname ##1/##2/##3/##4\endcsname \relax \@latex@error {
This NFSS system isn't set up properly}{For encoding scheme ##1 the defaults ##
2/##3/##4 do not form a valid font shape}\else \@font@info {... okay}\fi }\cdp@
list \begingroup \escapechar \m@ne \error@fontshape \expandafter \ifx \csname \
curr@fontshape \endcsname \relax \begingroup \try@load@fontshape \endgroup \fi 
\expandafter \ifx \csname \curr@fontshape \endcsname \relax \@latex@error {This
 NFSS system isn't set up properly}{The system maintainer forgot to specify a s
uitable substitution font shape using the \noexpand \DeclareErrorFont command}\
fi \endgroup \let \select@group \document@select@group \fontencoding \encodingd
efault \edef \f@family {\familydefault }\edef \f@series {\seriesdefault }\edef 
\f@shape {\shapedefault }\everyjob {}

\cdp@list ->\cdp@elt {OML}{cmm}{m}{it}\cdp@elt {OMS}{cmsy}{m}{n}\cdp@elt {OT1}{
cmr}{m}{n}\cdp@elt {T1}{cmr}{m}{n}\cdp@elt {TS1}{cmr}{m}{n}\cdp@elt {OMX}{cmex}
{m}{n}\cdp@elt {U}{cmr}{m}{n}

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-OML
#2<-cmm
#3<-m
#4<-it

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for OML/cmm/m/it

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for OML/cmm/m/it

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-OMS
#2<-cmsy
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for OMS/cmsy/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for OMS/cmsy/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-OT1
#2<-cmr
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for OT1/cmr/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for OT1/cmr/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-T1
#2<-cmr
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for T1/cmr/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for T1/cmr/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-TS1
#2<-cmr
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for TS1/cmr/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for TS1/cmr/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-OMX
#2<-cmex
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for OMX/cmex/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for OMX/cmex/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

\cdp@elt #1#2#3#4->\@font@info {Checking defaults for #1/#2/#3/#4}\expandafter 
\ifx \csname #1/#2/#3/#4\endcsname \relax \begingroup \def \f@encoding {#1}\def
 \f@family {#2}\try@load@fontshape \endgroup \fi \expandafter \ifx \csname #1/#
2/#3/#4\endcsname \relax \@latex@error {This NFSS system isn't set up properly}
{For encoding scheme #1 the defaults #2/#3/#4 do not form a valid font shape}\e
lse \@font@info {... okay}\fi 
#1<-U
#2<-cmr
#3<-m
#4<-n

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-Checking defaults for U/cmr/m/n

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space Checking defaults for U/cmr/m/n

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 6.

\@font@info #1->\GenericInfo {(Font)\@spaces \@spaces \@spaces \space \space }{
LaTeX Font Info: \space \space \space #1}
#1<-... okay

\GenericInfo ->\protect \GenericInfo  

\GenericInfo  #1#2->\begingroup \def \MessageBreak {
#1}\set@display@protect \immediate \write \m@ne {#2\on@line .}\endgroup 
#1<-(Font)\@spaces \@spaces \@spaces \space \space 
#2<-LaTeX Font Info: \space \space \space ... okay

\set@display@protect ->\let \protect \string 

\space -> 

\space -> 

\space -> 

\on@line -> on input line \the \inputlineno 
LaTeX Font Info:    ... okay on input line 6.

error@fontshape ->expandafter split@name string OT1/cmr/m/n/10 @nil 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-10

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

\fontencoding ->\protect \fontencoding  

\fontencoding  #1->\expandafter \ifx \csname T@#1\endcsname \relax \@latex@erro
r {Encoding scheme `#1' unknown}\@eha \else \edef \f@encoding {#1}\ifx \cf@enco
ding \f@encoding \let \enc@update \relax \else \let \enc@update \@@enc@update \
fi \fi 
#1<-\encodingdefault 

\encodingdefault ->OT1

\encodingdefault ->OT1

\familydefault ->\rmdefault 

\rmdefault ->cmr

\seriesdefault ->m

\shapedefault ->n

\normalsize ->\@setfontsize \normalsize \@xpt {11.5}\abovedisplayskip 10\p@ \@p
lus 2\p@ \@minus 5\p@ \belowdisplayskip \abovedisplayskip \abovedisplayshortski
p \abovedisplayskip \belowdisplayshortskip \abovedisplayskip \let \@listi \@lis
tI 

\@setfontsize #1#2#3->\@nomath #1\ifx \protect \@typeset@protect \let \@currsiz
e #1\fi \fontsize {#2}{#3}\selectfont 
#1<-\normalsize 
#2<-\@xpt 
#3<-11.5

\@nomath #1->\relax \ifmmode \@font@warning {Command \noexpand #1invalid in mat
h mode}\fi 
#1<-\normalsize 

\fontsize ->\protect \fontsize  

\fontsize  #1#2->\set@fontsize \baselinestretch {#1}{#2}
#1<-\@xpt 
#2<-11.5

\set@fontsize #1#2#3->\@defaultunits \@tempdimb #2pt\relax \@nnil \edef \f@size
 {\strip@pt \@tempdimb }\@defaultunits \@tempskipa #3pt\relax \@nnil \edef \f@b
aselineskip {\the \@tempskipa }\edef \f@linespread {#1}\let \baselinestretch \f
@linespread \def \size@update {\baselineskip \f@baselineskip \relax \baselinesk
ip \f@linespread \baselineskip \normalbaselineskip \baselineskip \setbox \strut
box \hbox {\vrule \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ 
}\let \size@update \relax }
#1<-\baselinestretch 
#2<-\@xpt 
#3<-11.5

\@defaultunits ->\afterassignment \remove@to@nnil 

\@xpt ->10

\remove@to@nnil #1\@nnil ->
#1<-\relax 

\strip@pt ->\expandafter \rem@pt \the 

\rem@pt #1.#2pt->#1\ifnum #2>\z@ .#2\fi 
#1<-10
#2<-0

\@defaultunits ->\afterassignment \remove@to@nnil 

\remove@to@nnil #1\@nnil ->
#1<-\relax 

\baselinestretch ->1

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\size@update ->\baselineskip \f@baselineskip \relax \baselineskip \f@linespread
 \baselineskip \normalbaselineskip \baselineskip \setbox \strutbox \hbox {\vrul
e \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ }\let \size@upda
te \relax 

\f@baselineskip ->11.5pt

\f@linespread ->1

\@height ->height

\@depth ->depth

\@width ->width

\@plus ->plus

\@minus ->minus

\@noskipsecfalse ->\let \if@noskipsec \iffalse 

\@kernel@before@begindocument ->\bool_lazy_all:nT {{\cs_if_exist_p:N \stockheig
ht }{\cs_if_exist_p:N \stockwidth }{\cs_if_exist_p:N \IfDocumentMetadataTF }{\I
fDocumentMetadataTF {\c_true_bool }{\c_false_bool }}{\int_compare_p:nNn \tex_ma
g:D ={1000}}}{\bool_lazy_and:nnTF {\dim_compare_p:nNn \stockheight >{0pt}}{\dim
_compare_p:nNn \stockwidth >{0pt}}{\__pdf_backend_pagesize_gset:nn \stockwidth 
\stockheight }{\bool_lazy_or:nnF {\dim_compare_p:nNn \stockheight <{0pt}}{\dim_
compare_p:nNn \stockwidth <{0pt}}{\bool_lazy_and:nnT {\dim_compare_p:nNn \paper
height >{0pt}}{\dim_compare_p:nNn \paperwidth >{0pt}}{\__pdf_backend_pagesize_g
set:nn \paperwidth \paperheight }}}}\ifnum \@abspage@last <\maxdimen \xdef \Pre
viousTotalPages {\@abspage@last }\fi 

\bool_lazy_all:nT #1->\if_predicate:w \bool_lazy_all_p:n {#1}\__prg_T_true:w \f
i: \use_none:n 
#1<-{\cs_if_exist_p:N \stockheight }{\cs_if_exist_p:N \stockwidth }{\cs_if_exis
t_p:N \IfDocumentMetadataTF }{\IfDocumentMetadataTF {\c_true_bool }{\c_false_bo
ol }}{\int_compare_p:nNn \tex_mag:D ={1000}}

\bool_lazy_all_p:n #1->\__bool_lazy_all:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\cs_if_exist_p:N \stockheight }{\cs_if_exist_p:N \stockwidth }{\cs_if_exis
t_p:N \IfDocumentMetadataTF }{\IfDocumentMetadataTF {\c_true_bool }{\c_false_bo
ol }}{\int_compare_p:nNn \tex_mag:D ={1000}}

\__bool_lazy_all:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_true_bool }
\bool_if:nF {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }}
\__bool_lazy_all:n 
#1<-\cs_if_exist_p:N \stockheight 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\cs_if_exist_p:N \stockheight 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\cs_if_exist_p:N \stockheight {}?!\q__bool
_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\cs_if_exist_p:N \stockheight {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_true_bool 

\bool_if:nF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_F_true:w \fi: \use:n 
#1<-\cs_if_exist_p:N \stockheight 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\cs_if_exist_p:N \stockheight 

\exp_end_continue_f:w ->`^^@

\cs_if_exist_p:N #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \c
_true_bool \c_false_bool 
#1<-\stockheight 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }

\__bool_lazy_all:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_true_bool }
\bool_if:nF {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }}
\__bool_lazy_all:n 
#1<-\cs_if_exist_p:N \stockwidth 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\cs_if_exist_p:N \stockwidth 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\cs_if_exist_p:N \stockwidth {}?!\q__bool_
recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\cs_if_exist_p:N \stockwidth {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_true_bool 

\bool_if:nF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_F_true:w \fi: \use:n 
#1<-\cs_if_exist_p:N \stockwidth 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\cs_if_exist_p:N \stockwidth 

\exp_end_continue_f:w ->`^^@

\cs_if_exist_p:N #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \c
_true_bool \c_false_bool 
#1<-\stockwidth 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }

\__bool_lazy_all:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_true_bool }
\bool_if:nF {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }}
\__bool_lazy_all:n 
#1<-\cs_if_exist_p:N \IfDocumentMetadataTF 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\cs_if_exist_p:N \IfDocumentMetadataTF 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\cs_if_exist_p:N \IfDocumentMetadataTF {}?
!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\cs_if_exist_p:N \IfDocumentMetadataTF {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_true_bool 

\bool_if:nF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_F_true:w \fi: \use:n 
#1<-\cs_if_exist_p:N \IfDocumentMetadataTF 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\cs_if_exist_p:N \IfDocumentMetadataTF 

\exp_end_continue_f:w ->`^^@

\cs_if_exist_p:N #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \if_
cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: \c
_true_bool \c_false_bool 
#1<-\IfDocumentMetadataTF 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }

\__bool_lazy_all:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_true_bool }
\bool_if:nF {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }}
\__bool_lazy_all:n 
#1<-\IfDocumentMetadataTF {\c_true_bool }{\c_false_bool }

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\IfDocumentMetadataTF {\c_true_bool }{\c_false_bool }

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\IfDocumentMetadataTF {\c_true_bool }{\c_f
alse_bool }{}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\IfDocumentMetadataTF {\c_true_bool }{\c_false_bool }{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_true_bool 

\bool_if:nF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_F_true:w \fi: \use:n 
#1<-\IfDocumentMetadataTF {\c_true_bool }{\c_false_bool }

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\IfDocumentMetadataTF {\c_true_bool }{\c_false_bool }

\exp_end_continue_f:w ->`^^@

\IfDocumentMetadataTF #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use:n #1->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_false_bool }

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_false_bool 
#2<-\__bool_lazy_all:n {\int_compare_p:nNn \tex_mag:D ={1000}}\q__bool_recursio
n_tail 

\use_none:n #1->
#1<-\bool_lazy_and:nnTF {\dim_compare_p:nNn \stockheight >{0pt}}{\dim_compare_p
:nNn \stockwidth >{0pt}}{\__pdf_backend_pagesize_gset:nn \stockwidth \stockheig
ht }{\bool_lazy_or:nnF {\dim_compare_p:nNn \stockheight <{0pt}}{\dim_compare_p:
nNn \stockwidth <{0pt}}{\bool_lazy_and:nnT {\dim_compare_p:nNn \paperheight >{0
pt}}{\dim_compare_p:nNn \paperwidth >{0pt}}{\__pdf_backend_pagesize_gset:nn \pa
perwidth \paperheight }}}

\@abspage@last ->1

\@abspage@last ->1

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-begindocument

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-begindocument

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-begindocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument\cs_end: \scan_stop: 
\prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_begindocument_re
versed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg_ret
urn_false: \fi: 
#2<-\prg_return_false: 

\g__hook_begindocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {begindocument}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {begindocument}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {begindocument}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {begindocument}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {begindocument}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {begindocument}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {begindocument}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {begindocument}}\__hook_parse_dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {begindocument}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {begindocument}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {begindocument}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {begindocument}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {begindocument}\s__tl_nil \__tl_trim_spaces_auxiii:
w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {begindocument}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {begindocument}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {begindocument}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {begindocument}}{.}{\__hook_currname_or_default: }{
\__hook_parse_dot_label:w \use:n {begindocument}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {begindocument}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {begindocument}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {begindocument}}}{\__hook_p
arse_dot_label_cleanup:w \use:n {begindocument}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {begindocument}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {begindocument}./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {begindocument}

\use:n #1->#1
#1<-begindocument

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-begindocument

\__hook_preamble_hook:n #1->
#1<-begindocument

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-begindocument

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_begindocument_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_begindocument_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-begindocument

\__hook begindocument ->\open@column@one \@ne \set@colht \@floatplacement \@dbl
floatplacement \global \let \bibstyle =\@gobble \let \NAT@@setcites \NAT@set@ci
tes \ifx \bibnumfmt \@empty \let \bibnumfmt \@biblabel \fi \NAT@set@cites \ifx 
\SK@def \@undefined \else \ifx \SK@cite \@empty \else \SK@def \@citex [##1][##2
]##3{\SK@ \SK@@ref {##3}\SK@@citex [##1][##2]{##3}}\fi \ifx \SK@citeauthor \@un
defined \def \HAR@checkdef {}\else \let \citeauthor \SK@citeauthor \let \citefu
llauthor \SK@citefullauthor \let \citeyear \SK@citeyear \fi \fi \@ifpackageload
ed {index}{\let \NAT@index =\NAT@index@alt }{}\providecommand {\harvardand }{an
d}\@ifpackageloaded {babel}{\let \org@@citex \@citex }{}\__hook_toplevel begind
ocument \__hook_next begindocument 

\open@column@one #1->\ltxgrid@info@sw {\class@info {\string \open@column@one \s
tring #1}}{}\unvbox \pagesofar \@ifvoid {\footsofar }{}{\insert \footins \bgrou
p \unvbox \footsofar \egroup \penalty \z@ }\gdef \thepagegrid {one}\global \pag
egrid@col #1\global \pagegrid@cur \@ne \global \count \footins \@m \global \div
ide \count \footins \tw@ \set@column@hsize \pagegrid@col \set@colht 
#1<-\@ne 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \open@column@one \string \@ne }
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\footsofar 

\true@sw #1#2->#1
#1<-
#2<-\insert \footins \bgroup \unvbox \footsofar \egroup \penalty \z@ 

\set@column@hsize #1->\pagegrid@col #1\global \columnwidth \textwidth \global \
advance \columnwidth \columnsep \global \divide \columnwidth \pagegrid@col \glo
bal \advance \columnwidth -\columnsep \global \hsize \columnwidth \global \line
width \columnwidth \skip@ \baselineskip \advance \skip@ -\topskip \@ifnum {\pag
egrid@col >\@ne }{\set@marry@skip }{}
#1<-\pagegrid@col 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagegrid@col >\@ne 

\false@sw #1#2->#2
#1<-\set@marry@skip 
#2<-

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\@floatplacement ->\global \@topnum \c@topnumber \global \@toproom \topfraction
 \@colht \global \@botnum \c@bottomnumber \global \@botroom \bottomfraction \@c
olht \global \@colnum \c@totalnumber \@fpmin \floatpagefraction \@colht \global
 \@fpmin \@fpmin 

\topfraction ->.9

\bottomfraction ->.9

\floatpagefraction ->.9

\@dblfloatplacement ->\global \@dbltopnum \c@dbltopnumber \global \@dbltoproom 
\dbltopfraction \@colht \@textmin \@colht \advance \@textmin -\@dbltoproom \@fp
min \dblfloatpagefraction \textheight \@fptop \@dblfptop \@fpsep \@dblfpsep \@f
pbot \@dblfpbot \def \f@depth {1sp}

\dbltopfraction ->.9

\dblfloatpagefraction ->.9

\NAT@set@cites ->\ifNAT@numbers \ifNAT@super \let \@cite \NAT@citesuper \def \N
AT@mbox ##1{\unskip \nobreak \textsuperscript {##1}}\let \citeyearpar =\citeyea
r \let \NAT@space \relax \def \NAT@super@kern {\kern \p@ }\else \let \NAT@mbox 
=\mbox \let \@cite \NAT@citenum \let \NAT@space \NAT@spacechar \let \NAT@super@
kern \relax \fi \let \@citex \NAT@citexnum \let \@biblabel \NAT@biblabelnum \le
t \@bibsetup \NAT@bibsetnum \renewcommand \NAT@idxtxt {\NAT@name \NAT@spacechar
 \NAT@open \NAT@num \NAT@close }\def \natexlab ##1{}\def \NAT@penalty {\penalty
 \@m }\else \let \@cite \NAT@cite \let \@citex \NAT@citex \let \@biblabel \NAT@
biblabel \let \@bibsetup \NAT@bibsetup \let \NAT@space \NAT@spacechar \let \NAT
@penalty \@empty \renewcommand \NAT@idxtxt {\NAT@name \NAT@spacechar \NAT@open 
\NAT@date \NAT@close }\def \natexlab ##1{##1}\fi 

\renewcommand ->\@star@or@long \renew@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\renew@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \renew@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \renew@command }
#3<-\let \l@ngrel@x \long \renew@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \renew@command 

\renew@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}}\
endgroup \expandafter \@ifundefined \@gtempa {\@latex@error {Command \string #1
 undefined}\@ehc }\relax \let \@ifdefinable \@rc@ifdefinable \new@command #1
#1<-\NAT@idxtxt 

\@gtempa ->{NAT@idxtxt}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-NAT@idxtxt

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-NAT@idxtxt

\@secondoftwo #1#2->#2
#1<-\@latex@error {Command \string \NAT@idxtxt  undefined}\@ehc 
#2<-\relax 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\NAT@idxtxt 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \NAT@idxtxt 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \NAT@idxtxt 
#3<-\@newcommand \NAT@idxtxt [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \NAT@idxtxt [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\NAT@idxtxt 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \NAT@idxtxt [0]
#3<-\@argdef \NAT@idxtxt [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \NAT@idxtxt [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\NAT@idxtxt 
#2<-0
#3<-\NAT@name \NAT@spacechar \NAT@open \NAT@num \NAT@close 

\@ifdefinable #1#2->\let \@ifdefinable \@@ifdefinable #2
#1<-\NAT@idxtxt 
#2<-\@yargdef \NAT@idxtxt \@ne {0}{\NAT@name \NAT@spacechar \NAT@open \NAT@num 
\NAT@close }

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\NAT@idxtxt 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\NAT@idxtxt 

\reserved@a #10#2{->\expandafter \def \expandafter \NAT@idxtxt \reserved@b #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-index

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\let \NAT@index =\NAT@index@alt 
#2<-

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\harvardand 

\@gtempa ->{harvardand}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-harvardand

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-harvardand
#2<-\def \reserved@a {\new@command \harvardand }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \harvardand 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\harvardand 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \harvardand 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \harvardand 
#3<-\@newcommand \harvardand [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \harvardand [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\harvardand 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \harvardand [0]
#3<-\@argdef \harvardand [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \harvardand [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\harvardand 
#2<-0
#3<-and

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\harvardand 
#2<-\@yargdef \harvardand \@ne {0}{and}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->harvardand

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \harvardand \@ne {0}{and}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->harvardand

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-h
#2<-a
#3<-r
#4<-vardandxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\harvardand 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\harvardand 

\reserved@a #10#2{->\expandafter \def \expandafter \harvardand \reserved@b #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-babel

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\let \org@@citex \@citex 
#2<-

\__hook_toplevel begindocument ->\class@documenthook 

\class@documenthook ->\providecommand \Call@AfterLastShipout {}\let \footnote@l
atex \footnote \@ifpackageloaded {hyperref}{}{\let \H@@footnotetext \@footnotet
ext \def \@footnotetext {\H@@footnotetext }\let \H@@mpfootnotetext \@mpfootnote
text \def \@mpfootnotetext {\H@@mpfootnotetext }}\prepdef \caption {\minipagefo
otnote@here }\frontmatter@init \providecommand \href [1]{}\@ifx {\maketitle \ma
ketitle@Hy }{\class@info {Taking \string \maketitle \space back from hyperref}\
let \maketitle \frontmatter@maketitle }{}\pagegrid@init \@ifpackageloaded {line
no}{\@ifx {\linenomathWithnumbers \linenomathWithnumbers@LN }{\@ifx {\linenomat
hNonumbers \linenomathNonumbers@LN }{\@ifx {\endlinenomath \endlinenomath@LN }{
\@ifx {\linenumberpar \linenumberpar@LN }{\true@sw }{\false@sw }}{\false@sw }}{
\false@sw }}{\false@sw }{\class@info {Overriding lineo.sty, restoring output ro
utine,}\let \linenumberpar \linenumberpar@ltx \let \endlinenomath \endlinenomat
h@ltx \expandafter \let \csname endlinenomath*\endcsname \endlinenomath@ltx \le
t \linenomathWithnumbers \linenomathWithnumbers@ltx \let \linenomathNonumbers \
linenomathNonumbers@ltx \let \ex@vadjust@ltx \ex@vadjust@line \let \@LN@postlab
el \enqueue@whatsit@ltx \let \do@whatsit \write@linelabel \let \handle@par@ltx 
\handle@par@LN \let \@@handle@line@ltx \Make@LineNo@ltx \let \@@handle@display@
ltx \Make@LineNo@ltx \output@latex {\natural@output }\let \vspace \vspace@ltx \
let \pagebreak \pagebreak@ltx \let \nopagebreak \nopagebreak@ltx \let \@arraypa
rboxrestore \@arrayparboxrestore@ltx \let \\\endline@ltx \appdef \set@footnotef
ont {\let \par \@@@par \let \@@par \@@@par }\@if@sw \ifLineNumbers \fi {\class@
info {Reinvoke \string \linenumbers }\let \@@par \linenumberpar \@ifx {\@par \l
inenumberpar@LN }{\let \@par \linenumberpar }{}\@ifx {\par \linenumberpar@LN }{
\let \par \linenumberpar }{}}{\class@info {Line numbering not turned on yet}}}{
\class@warn {Failed to recognize lineno.sty procedures; no patches applied. Ple
ase get a more up-to-date class.}}}{}\select@column@grid \do@if@floats {figure}
{.fgx}\do@if@floats {video}{.vdx}\citeautoscript@sw {\@ifx {\@cite \NAT@citesup
er }{\let \NAT@@citetp \rtx@@citetp }{}}{}\@bibdataout@init \make@footnote@endn
ote \global \c@page \@ne \def \curr@envir {document}\mark@envir {\curr@envir }\
revsymb@inithook \@ifx {\@LN@LLerror \@LN@LLerror@org }{\class@info {Overriding
 \string \@LN@LLerror }\let \@LN@LLerror \@LN@LLerror@ltx }{}\@ifpackageloaded 
{lineno}{\@ifxundefined {\set@linepenalties }{}{\def \prep@absbox {\set@linepen
alties }\def \post@absbox {\let \@LN@parpgbrk \@empty \@linenumberpar }}}{}\app
def \class@enddocumenthook {\let \clearpage \clear@document }

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\Call@AfterLastShipout 

\@gtempa ->{Call@AfterLastShipout}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-Call@AfterLastShipout

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-Call@AfterLastShipout
#2<-\def \reserved@a {\new@command \Call@AfterLastShipout }
#3<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\new@command \Call@AfterLastShipout 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\Call@AfterLastShipout 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \Call@AfterLastShipout 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \Call@AfterLastShipout 
#3<-\@newcommand \Call@AfterLastShipout [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \Call@AfterLastShipout [{0}]

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\Call@AfterLastShipout 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \Call@AfterLastShipout [0]
#3<-\@argdef \Call@AfterLastShipout [0]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \Call@AfterLastShipout [0]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\Call@AfterLastShipout 
#2<-0
#3<-

\@ifdefinable #1#2->\edef \reserved@a {\expandafter \@gobble \string #1}\@ifund
efined \reserved@a {\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@
nil }\ifx \reserved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@n
otdefinable \else #2\fi \fi }\@notdefinable 
#1<-\Call@AfterLastShipout 
#2<-\@yargdef \Call@AfterLastShipout \@ne {0}{}

\@gobble #1->
#1<-\

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-\reserved@a 

\reserved@a ->Call@AfterLastShipout

\@ifundefin@d@ii \fi #1#2#3->\fi #2
#1<-\reserved@a 
#2<-\edef \reserved@b {\expandafter \@carcube \reserved@a xxx\@nil }\ifx \reser
ved@b \@qend \@notdefinable \else \ifx \reserved@a \@qrelax \@notdefinable \els
e \@yargdef \Call@AfterLastShipout \@ne {0}{}\fi \fi 
#3<-\@notdefinable 

\reserved@a ->Call@AfterLastShipout

\@carcube #1#2#3#4\@nil ->#1#2#3
#1<-C
#2<-a
#3<-l
#4<-l@AfterLastShipoutxxx

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\Call@AfterLastShipout 
#2<-\@ne 
#3<-0

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-0
#2<-\Call@AfterLastShipout 

\reserved@a #10#2{->\expandafter \def \expandafter \Call@AfterLastShipout \rese
rved@b #10{
#1<-
#2<-##1##2##3##4##5##6##7##8##9##0

\reserved@b #1->
#1<-0

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-hyperref

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-
#2<-\let \H@@footnotetext \@footnotetext \def \@footnotetext {\H@@footnotetext 
}\let \H@@mpfootnotetext \@mpfootnotetext \def \@mpfootnotetext {\H@@mpfootnote
text }

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\caption 
#2<-\minipagefootnote@here 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\caption 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \caption 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\caption }

\caption ->\ifx \@captype \@undefined \@latex@error {\noexpand \caption outside
 float}\@ehd \expandafter \@gobble \else \refstepcounter \@captype \expandafter
 \@firstofone \fi {\@dblarg {\@caption \@captype }}

\frontmatter@init ->\def \@title {\class@warn {No title}}\let \@shorttitle \@em
pty \let \@title@aux \@title@aux@cleared \c@affil \z@ \c@collab \z@ \@booleanfa
lse \collaboration@sw \@author@init \@affil@init \let \AU@grp \@empty \let \CO@
grp \@empty \let \AF@grp \@empty \let \@AAC@list \@empty \let \@AFG@list \@empt
y \let \@AFF@list \@empty \let \@AF@join \@AF@join@error \global \let \@FMN@lis
t \@empty \let \@keywords \@empty \let \@pacs \@empty \let \@preprint \@empty \
let \mini@notes \@empty \@ifxundefined \title@column {\let \title@column \@empt
y }{}\@ifxundefined \preprintsty@sw {\@booleanfalse \preprintsty@sw }{}\@ifxund
efined \frontmatter@footnote@produce {\let \frontmatter@footnote@produce \front
matter@footnote@produce@footnote }{}\@ifxundefined \do@output@MVL {\let \do@out
put@MVL \@firstofone }{}\@ifxundefined \comma@space {\let \comma@space \@empty 
}{}

\@booleanfalse #1->\let #1\false@sw 
#1<-\collaboration@sw 

\@author@init ->\let \@author \@author@cleared \@booleanfalse \collaboration@sw
 

\@booleanfalse #1->\let #1\false@sw 
#1<-\collaboration@sw 

\@affil@init ->\let \@affil \@affil@cleared 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\title@column 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \title@column 

\false@sw #1#2->#2
#1<-\let \title@column \@empty 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\preprintsty@sw 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \preprintsty@sw 

\false@sw #1#2->#2
#1<-\@booleanfalse \preprintsty@sw 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\frontmatter@footnote@produce 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \frontmatter@footnote@produce 

\false@sw #1#2->#2
#1<-\let \frontmatter@footnote@produce \frontmatter@footnote@produce@footnote 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\do@output@MVL 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \do@output@MVL 

\false@sw #1#2->#2
#1<-\let \do@output@MVL \@firstofone 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\comma@space 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \comma@space 

\true@sw #1#2->#1
#1<-\let \comma@space \@empty 
#2<-

\providecommand ->\@star@or@long \provide@command 

\@star@or@long #1->\@ifstar {\let \l@ngrel@x \relax #1}{\let \l@ngrel@x \long #
1}
#1<-\provide@command 

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\let \l@ngrel@x \relax \provide@command 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\let \l@ngrel@x \relax \provide@command }
#3<-\let \l@ngrel@x \long \provide@command 

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\let \l@ngrel@x \long \provide@command 

\provide@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}
}\endgroup \expandafter \@ifundefined \@gtempa {\def \reserved@a {\new@command 
#1}}{\def \reserved@a {\renew@command \reserved@a }}\reserved@a 
#1<-\href 

\@gtempa ->{href}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-href

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-href

\@secondoftwo #1#2->#2
#1<-\def \reserved@a {\new@command \href }
#2<-\def \reserved@a {\renew@command \reserved@a }

\reserved@a ->\renew@command \reserved@a 

\renew@command #1->\begingroup \escapechar \m@ne \xdef \@gtempa {{\string #1}}\
endgroup \expandafter \@ifundefined \@gtempa {\@latex@error {Command \string #1
 undefined}\@ehc }\relax \let \@ifdefinable \@rc@ifdefinable \new@command #1
#1<-\reserved@a 

\@gtempa ->{reserved@a}

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-reserved@a

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-reserved@a

\@secondoftwo #1#2->#2
#1<-\@latex@error {Command \string \reserved@a  undefined}\@ehc 
#2<-\relax 

\new@command #1->\@testopt {\@newcommand #1}0
#1<-\reserved@a 

\@testopt #1#2->\kernel@ifnextchar [{#1}{#1[{#2}]}
#1<-\@newcommand \reserved@a 
#2<-0

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@newcommand \reserved@a 
#3<-\@newcommand \reserved@a [{0}]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@newcommand \reserved@a 

\@newcommand #1[#2]->\kernel@ifnextchar [{\@xargdef #1[#2]}{\@argdef #1[#2]}
#1<-\reserved@a 
#2<-1

\kernel@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reser
ved@b {#3}\futurelet \@let@token \@ifnch 
#1<-[
#2<-\@xargdef \reserved@a [1]
#3<-\@argdef \reserved@a [1]

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\@argdef \reserved@a [1]

\@argdef #1[#2]#3->\@ifdefinable #1{\@yargdef #1\@ne {#2}{#3}}
#1<-\reserved@a 
#2<-1
#3<-

\@ifdefinable #1#2->\let \@ifdefinable \@@ifdefinable #2
#1<-\reserved@a 
#2<-\@yargdef \reserved@a \@ne {1}{}

\@yargdef #1#2#3->\ifx #2\tw@ \def \reserved@b ##11{[####1]}\else \let \reserve
d@b \@gobble \fi \expandafter \@yargd@f \expandafter {\number #3}#1
#1<-\reserved@a 
#2<-\@ne 
#3<-1

\@yargd@f #1#2->\def \reserved@a ##1#1##2##{\expandafter \def \expandafter #2\r
eserved@b ##1#1}\l@ngrel@x \reserved@a 0##1##2##3##4##5##6##7##8##9###1
#1<-1
#2<-\reserved@a 

\reserved@a #11#2{->\expandafter \def \expandafter \reserved@a \reserved@b #11{
#1<-0##
#2<-##2##3##4##5##6##7##8##9##1

\reserved@b #1->
#1<-0

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\maketitle \maketitle@Hy 

\false@sw #1#2->#2
#1<-\class@info {Taking \string \maketitle \space back from hyperref}\let \make
title \frontmatter@maketitle 
#2<-

\pagegrid@init ->\advance \pagegrid@cur \@ne \@ifnum {\pagegrid@cur <\pagegrid@
col }{\csname newbox\expandafter \endcsname \csname col@\the \pagegrid@cur \end
csname \pagegrid@init }{}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagegrid@cur <\pagegrid@col 

\false@sw #1#2->#2
#1<-\csname newbox\expandafter \endcsname \csname col@\the \pagegrid@cur \endcs
name \pagegrid@init 
#2<-

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-lineno

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\@ifx {\linenomathWithnumbers \linenomathWithnumbers@LN }{\@ifx {\linenomat
hNonumbers \linenomathNonumbers@LN }{\@ifx {\endlinenomath \endlinenomath@LN }{
\@ifx {\linenumberpar \linenumberpar@LN }{\true@sw }{\false@sw }}{\false@sw }}{
\false@sw }}{\false@sw }{\class@info {Overriding lineo.sty, restoring output ro
utine,}\let \linenumberpar \linenumberpar@ltx \let \endlinenomath \endlinenomat
h@ltx \expandafter \let \csname endlinenomath*\endcsname \endlinenomath@ltx \le
t \linenomathWithnumbers \linenomathWithnumbers@ltx \let \linenomathNonumbers \
linenomathNonumbers@ltx \let \ex@vadjust@ltx \ex@vadjust@line \let \@LN@postlab
el \enqueue@whatsit@ltx \let \do@whatsit \write@linelabel \let \handle@par@ltx 
\handle@par@LN \let \@@handle@line@ltx \Make@LineNo@ltx \let \@@handle@display@
ltx \Make@LineNo@ltx \output@latex {\natural@output }\let \vspace \vspace@ltx \
let \pagebreak \pagebreak@ltx \let \nopagebreak \nopagebreak@ltx \let \@arraypa
rboxrestore \@arrayparboxrestore@ltx \let \\\endline@ltx \ETC.
#2<-

\select@column@grid ->\twocolumn@sw {\twocolumn@grid@setup \open@twocolumn }{\o
necolumn@grid@setup }

\twocolumn@sw #1#2->#2
#1<-\twocolumn@grid@setup \open@twocolumn 
#2<-\onecolumn@grid@setup 

\onecolumn@grid@setup ->\expandafter \let \csname combine@insert@1\endcsname \c
ombine@insert@@ne \expandafter \let \csname combine@insert@2\endcsname \combine
@insert@@ne 

\do@if@floats #1#2->\floats@sw {}{\expandafter \newwrite \csname #1write\endcsn
ame \expandafter \def \csname #1@stream\endcsname {\jobname #2}\expandafter \im
mediate \expandafter \openout \csname #1write\endcsname \csname #1@stream\endcs
name \relax \@ifxundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dbl
float@LaTeX \@dblfloat \let \@float \write@float \let \@dblfloat \write@floats 
}{}\let@environment {#1@float}{#1}\let@environment {#1@floats}{#1*}\@ifxundefin
ed@cs {#1@write}{}{\let@environment {#1}{#1@write}}}
#1<-figure
#2<-.fgx

\floats@sw #1#2->#1
#1<-
#2<-\expandafter \newwrite \csname figurewrite\endcsname \expandafter \def \csn
ame figure@stream\endcsname {\jobname .fgx}\expandafter \immediate \expandafter
 \openout \csname figurewrite\endcsname \csname figure@stream\endcsname \relax 
\@ifxundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dblfloat@LaTeX 
\@dblfloat \let \@float \write@float \let \@dblfloat \write@floats }{}\let@envi
ronment {figure@float}{figure}\let@environment {figure@floats}{figure*}\@ifxund
efined@cs {figure@write}{}{\let@environment {figure}{figure@write}}

\do@if@floats #1#2->\floats@sw {}{\expandafter \newwrite \csname #1write\endcsn
ame \expandafter \def \csname #1@stream\endcsname {\jobname #2}\expandafter \im
mediate \expandafter \openout \csname #1write\endcsname \csname #1@stream\endcs
name \relax \@ifxundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dbl
float@LaTeX \@dblfloat \let \@float \write@float \let \@dblfloat \write@floats 
}{}\let@environment {#1@float}{#1}\let@environment {#1@floats}{#1*}\@ifxundefin
ed@cs {#1@write}{}{\let@environment {#1}{#1@write}}}
#1<-video
#2<-.vdx

\floats@sw #1#2->#1
#1<-
#2<-\expandafter \newwrite \csname videowrite\endcsname \expandafter \def \csna
me video@stream\endcsname {\jobname .vdx}\expandafter \immediate \expandafter \
openout \csname videowrite\endcsname \csname video@stream\endcsname \relax \@if
xundefined \@float@LaTeX {\let \@float@LaTeX \@float \let \@dblfloat@LaTeX \@db
lfloat \let \@float \write@float \let \@dblfloat \write@floats }{}\let@environm
ent {video@float}{video}\let@environment {video@floats}{video*}\@ifxundefined@c
s {video@write}{}{\let@environment {video}{video@write}}

\citeautoscript@sw #1#2->#2
#1<-\@ifx {\@cite \NAT@citesuper }{\let \NAT@@citetp \rtx@@citetp }{}
#2<-

\@bibdataout@init ->\immediate \openout \@bibdataout \pre@bibdata .\bibdata@ext
 \relax 

\pre@bibdata ->\jobname \bibdata@app 

\bibdata@app ->Notes

\bibdata@ext ->bib
\openout3 = `tl2022_rerunNotes.bib'.


\make@footnote@endnote ->\footinbib@sw {\authoryear@sw {}{\ltx@footnote@push \d
ef \thempfn {Note\thefootnote }\let \ltx@footmark \rev@citemark \let \ltx@foott
ext \rev@endtext }}{}

\footinbib@sw #1#2->#1
#1<-\authoryear@sw {}{\ltx@footnote@push \def \thempfn {Note\thefootnote }\let 
\ltx@footmark \rev@citemark \let \ltx@foottext \rev@endtext }
#2<-

\authoryear@sw #1#2->#2
#1<-
#2<-\ltx@footnote@push \def \thempfn {Note\thefootnote }\let \ltx@footmark \rev
@citemark \let \ltx@foottext \rev@endtext 

\ltx@footnote@push ->\let \ltx@footmark@latex \ltx@footmark \let \ltx@foottext@
latex \ltx@foottext \let \thempfn@latex \thempfn \def \ltx@footnote@pop {\let \
ltx@footmark \ltx@footmark@latex \let \ltx@foottext \ltx@foottext@latex \let \t
hempfn \thempfn@latex }

\mark@envir ->\markthr@@ 

\markthr@@ ->\expandafter \set@markthr@@ \expandafter \@themark \@themark 

\@themark ->{}{}{}{}

\set@markthr@@ #1#2#3#4#5#6->\gdef #1{{#2}{#3}{#6}{#5}}\do@mark 
#1<-\@themark 
#2<-
#3<-
#4<-
#5<-
#6<-\curr@envir 

\do@mark ->\do@@mark \@themark \nobreak@mark 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-\@themark 

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\@themark ->{}{}{\curr@envir }{}

\curr@envir ->document

\nobreak@mark ->\@if@sw \if@nobreak \fi {\@ifvmode {\nobreak }{}}{}

\@if@sw #1#2->#1\expandafter \true@sw \else \expandafter \false@sw #2
#1<-\if@nobreak 
#2<-\fi 

\false@sw #1#2->#2
#1<-\@ifvmode {\nobreak }{}
#2<-

\revsymb@inithook ->\@ifxundefined \dddot {\let \dddot \REV@dddot }{}\@ifxundef
ined \triangleq {\let \triangleq \REV@triangleq }{}\@ifxundefined \succsim {\le
t \succsim \altsuccsim }{}\@ifxundefined \precsim {\let \precsim \altprecsim }{
}\@ifxundefined \lesssim {\let \lesssim \REV@lesssim }{}\@ifxundefined \gtrsim 
{\let \gtrsim \REV@gtrsim }{}\@ifxundefined \mathfrak {\let \mathfrak \REV@math
frak }{}\@ifxundefined \mathbb {\let \mathbb \REV@mathbb }{}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\dddot 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \dddot 

\true@sw #1#2->#1
#1<-\let \dddot \REV@dddot 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\triangleq 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \triangleq 

\true@sw #1#2->#1
#1<-\let \triangleq \REV@triangleq 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\succsim 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \succsim 

\true@sw #1#2->#1
#1<-\let \succsim \altsuccsim 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\precsim 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \precsim 

\true@sw #1#2->#1
#1<-\let \precsim \altprecsim 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\lesssim 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \lesssim 

\true@sw #1#2->#1
#1<-\let \lesssim \REV@lesssim 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\gtrsim 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \gtrsim 

\true@sw #1#2->#1
#1<-\let \gtrsim \REV@gtrsim 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\mathfrak 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \mathfrak 

\true@sw #1#2->#1
#1<-\let \mathfrak \REV@mathfrak 
#2<-

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\mathbb 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \mathbb 

\true@sw #1#2->#1
#1<-\let \mathbb \REV@mathbb 
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@LN@LLerror \@LN@LLerror@org 

\false@sw #1#2->#2
#1<-\class@info {Overriding \string \@LN@LLerror }\let \@LN@LLerror \@LN@LLerro
r@ltx 
#2<-

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-lineno

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\@ifxundefined {\set@linepenalties }{}{\def \prep@absbox {\set@linepenaltie
s }\def \post@absbox {\let \@LN@parpgbrk \@empty \@linenumberpar }}
#2<-

\appdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {#
2}\edef #1{\the \toks@ \the \toks@ii }
#1<-\class@enddocumenthook 
#2<-\let \clearpage \clear@document 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\class@enddocumenthook 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \class@enddocumenthook 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\class@enddocumenthook }

\class@enddocumenthook ->\auto@bib \printfigures \relax \printtables \relax \pr
intvideos \relax \test@amsmath@ver 

\__hook_next begindocument ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-begindocument

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook begindocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next begindocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next begindocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next begindocument 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel begindocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel begindocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel begindocument 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_begindocument_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_begindocument_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_begindocument_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_begindocument_code_prop 
#2<-\prop_new:N \g__hook_begindocument_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_begindocument_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_begindocument_code_prop 
#2<-\c_empty_prop 

\@kernel@after@begindocument ->\prop_map_inline:Nn \l_keys_usage_preamble_prop 
{\clist_map_inline:nn {##2}{\keys_define:nn {##1}{####1.code:n=\msg_error:nnn {
keys}{preamble-only}{####1}}}}\__hook_cmd_begindocument_code: \bool_gset_true:N
 \g__pdf_init_bool \group_begin: \cs_set_protected:Npn \__text_tmp:w ##1{\tl_cl
ear:N \l_text_expand_exclude_tl \tl_map_inline:nn {##1}{\bool_lazy_any:nF {{\to
ken_if_protected_macro_p:N ####1}{\token_if_protected_long_macro_p:N ####1}{\st
r_if_eq_p:ee {\cs_replacement_spec:N ####1}{\exp_not:n {\protect ####1}\c_space
_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl {####1}}}}\exp_args:NV \__te
xt_tmp:w \l_text_expand_exclude_tl \exp_args:NNNV \group_end: \tl_set:Nn \l_tex
t_expand_exclude_tl \l_text_expand_exclude_tl \group_begin: \cs_set_protected:N
pn \__text_change_case_setup:Nn ##1##2{\quark_if_recursion_tail_stop:N ##1\tl_i
f_single_token:nT {##2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N ##1_
tl}{\tl_const:cn {c__text_uppercase_\token_to_str:N ##1_tl}{##2}}\cs_if_exist:c
F {c__text_lowercase_\token_to_str:N ##2_tl}{\tl_const:cn {c__text_lowercase_\t
oken_to_str:N ##2_tl}{##1}}}\__text_change_case_setup:Nn }\exp_after:wN \__text
_change_case_setup:Nn \@uclclist \q_recursion_tail ?\q_recursion_stop \group_en
d: \@ifpackageloaded {babel}{\@ifpackagelater {babel}{2020-01-15}{\cs_gset_prot
ected:Npn \@@text@case@aux@ {\str_set:Nx \reserved@a {\localeinfo *{tag.bcp47}}
}}{}}{}

\prop_map_inline:Nn #1#2->\cs_gset_eq:cN {__prop_map_\int_use:N \g__kernel_prg_
map_int :wn}\__prop_pair:wn \int_gincr:N \g__kernel_prg_map_int \cs_gset_protec
ted:Npn \__prop_pair:wn ##1\s__prop ##2{#2}#1\prg_break_point:Nn \prop_map_brea
k: {\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}}
#1<-\l_keys_usage_preamble_prop 
#2<-\clist_map_inline:nn {##2}{\keys_define:nn {##1}{####1.code:n=\msg_error:nn
n {keys}{preamble-only}{####1}}}

\cs_gset_eq:cN ->\exp_args:Nc \cs_gset_eq:NN 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_map_0:wn 

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\l_keys_usage_preamble_prop ->\s__prop 

\prg_break_point:Nn #1#2->#2
#1<-\prop_map_break: 
#2<-\int_gdecr:N \g__kernel_prg_map_int \cs_gset_eq:Nc \__prop_pair:wn {__prop_
map_\int_use:N \g__kernel_prg_map_int :wn}

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_eq:Nc ->\exp_args:NNc \cs_gset_eq:NN 

\exp_args:NNc #1#2#3->\exp_after:wN #1\exp_after:wN #2\cs:w #3\cs_end: 
#1<-\cs_gset_eq:NN 
#2<-\__prop_pair:wn 
#3<-__prop_map_\int_use:N \g__kernel_prg_map_int :wn

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__prop_pair:wn 

\__hook_cmd_begindocument_code: ->\cs_gset_eq:NN \__hook_patch_cmd_or_delay:Nnn
 \__hook_patch_command:Nnn \prop_map_function:NN \g__hook_delayed_patches_prop 
{\use_ii:nn }\prop_gclear:N \g__hook_delayed_patches_prop \cs_undefine:N \__hoo
k_cmd_begindocument_code: 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_patch_cmd_or_delay:Nnn 

\prop_map_function:NN #1#2->\exp_after:wN \use_i_ii:nnn \exp_after:wN \__prop_m
ap_function:Nw \exp_after:wN #2#1\__prop_pair:wn \fi: \prop_map_break: \s__prop
 {}\__prop_pair:wn \fi: \prop_map_break: \s__prop {}\__prop_pair:wn \fi: \prop_
map_break: \s__prop {}\__prop_pair:wn \fi: \prop_map_break: \s__prop {}\prg_bre
ak_point:Nn \prop_map_break: {}
#1<-\g__hook_delayed_patches_prop 
#2<-\use_ii:nn 

\g__hook_delayed_patches_prop ->\s__prop 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\__prop_map_function:Nw 
#2<-\use_ii:nn 
#3<-\s__prop 

\__prop_map_function:Nw #1\__prop_pair:wn #2\s__prop #3\__prop_pair:wn #4\s__pr
op #5\__prop_pair:wn #6\s__prop #7\__prop_pair:wn #8\s__prop #9->\if_false: #2\
fi: #1{#2}{#3}\if_false: #4\fi: #1{#4}{#5}\if_false: #6\fi: #1{#6}{#7}\if_false
: #8\fi: #1{#8}{#9}\__prop_map_function:Nw #1
#1<-\use_ii:nn 
#2<-\fi: \prop_map_break: 
#3<-
#4<-\fi: \prop_map_break: 
#5<-
#6<-\fi: \prop_map_break: 
#7<-
#8<-\fi: \prop_map_break: 
#9<-

\prop_map_break: ->\prg_map_break:Nn \prop_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\prop_map_break: 
#2<-
#3<-\fi: \use_ii:nn {\fi: \prop_map_break: }{}\if_false: \fi: \prop_map_break: 
\fi: \use_ii:nn {\fi: \prop_map_break: }{}\if_false: \fi: \prop_map_break: \fi:
 \use_ii:nn {\fi: \prop_map_break: }{}\if_false: \fi: \prop_map_break: \fi: \us
e_ii:nn {\fi: \prop_map_break: }{}\__prop_map_function:Nw \use_ii:nn 
#4<-\prop_map_break: 
#5<-

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\prop_map_break: 
#3<-

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_delayed_patches_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_delayed_patches_prop 
#2<-\c_empty_prop 

\cs_undefine:N #1->\cs_gset_eq:NN #1\tex_undefined:D 
#1<-\__hook_cmd_begindocument_code: 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__hook_cmd_begindocument_code: 

\bool_gset_true:N #1->\cs_gset_eq:NN #1\c_true_bool 
#1<-\g__pdf_init_bool 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\g__pdf_init_bool 

\cs_set_protected:Npn ->\tex_protected:D \tex_long:D \tex_def:D 

\exp_args:NV #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \__exp_eval_register:N
 #2}
#1<-\__text_tmp:w 
#2<-\l_text_expand_exclude_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l_text_expand_exclude_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l_text_expand_exclude_tl ->\begin \cite \end \label \ref 

\__text_tmp:w #1->\tl_clear:N \l_text_expand_exclude_tl \tl_map_inline:nn {#1}{
\bool_lazy_any:nF {{\token_if_protected_macro_p:N ##1}{\token_if_protected_long
_macro_p:N ##1}{\str_if_eq_p:ee {\cs_replacement_spec:N ##1}{\exp_not:n {\prote
ct ##1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl {##1}}}
#1<-\begin \cite \end \label \ref 

\tl_clear:N #1->\tex_let:D #1= \c_empty_tl 
#1<-\l_text_expand_exclude_tl 

\tl_map_inline:nn #1#2->\int_gincr:N \g__kernel_prg_map_int \cs_gset_protected:
cpn {__tl_map_\int_use:N \g__kernel_prg_map_int :w}##1{#2}\exp_args:Nc \__tl_ma
p_function:Nnnnnnnnn {__tl_map_\int_use:N \g__kernel_prg_map_int :w}#1\s__tl_st
op \s__tl_stop \s__tl_stop \s__tl_stop \s__tl_stop \s__tl_stop \s__tl_stop \s__
tl_stop \prg_break_point:Nn \tl_map_break: {\int_gdecr:N \g__kernel_prg_map_int
 }
#1<-\begin \cite \end \label \ref 
#2<-\bool_lazy_any:nF {{\token_if_protected_macro_p:N ##1}{\token_if_protected_
long_macro_p:N ##1}{\str_if_eq_p:ee {\cs_replacement_spec:N ##1}{\exp_not:n {\p
rotect ##1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl {##1}}

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g__kernel_prg_map_int 

\cs_gset_protected:cpn ->\exp_args:Nc \cs_gset_protected:Npn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\cs_gset_protected:Npn 
#2<-__tl_map_\int_use:N \g__kernel_prg_map_int :w

\cs_gset_protected:Npn ->\tex_protected:D \tex_long:D \tex_gdef:D 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__tl_map_function:Nnnnnnnnn 
#2<-__tl_map_\int_use:N \g__kernel_prg_map_int :w

\__tl_map_function:Nnnnnnnnn #1#2#3#4#5#6#7#8#9->\__tl_use_none_delimit_by_s_st
op:w #9\__tl_map_function_end:w \s__tl_stop #1{#2}#1{#3}#1{#4}#1{#5}#1{#6}#1{#7
}#1{#8}#1{#9}\__tl_map_function:Nnnnnnnnn #1
#1<-\__tl_map_1:w 
#2<-\begin 
#3<-\cite 
#4<-\end 
#5<-\label 
#6<-\ref 
#7<-\s__tl_stop 
#8<-\s__tl_stop 
#9<-\s__tl_stop 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\begin 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-\begin \tl_map_break: 

\__tl_map_1:w #1->\bool_lazy_any:nF {{\token_if_protected_macro_p:N #1}{\token_
if_protected_long_macro_p:N #1}{\str_if_eq_p:ee {\cs_replacement_spec:N #1}{\ex
p_not:n {\protect #1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl
 {#1}}
#1<-\begin 

\bool_lazy_any:nF #1->\if_predicate:w \bool_lazy_any_p:n {#1}\__prg_F_true:w \f
i: \use:n 
#1<-{\token_if_protected_macro_p:N \begin }{\token_if_protected_long_macro_p:N 
\begin }{\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect 
\begin }\c_space_tl }}

\bool_lazy_any_p:n #1->\__bool_lazy_any:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\token_if_protected_macro_p:N \begin }{\token_if_protected_long_macro_p:N 
\begin }{\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect 
\begin }\c_space_tl }}

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_macro_p:N \begin 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_macro_p:N \begin 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_macro_p:N \begin {}?!\
q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_macro_p:N \begin {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_macro_p:N \begin 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_macro_p:N \begin 

\exp_end_continue_f:w ->`^^@

\token_if_protected_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_delim
it_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\tl_to_str:n {\prote
cted }macro}{\prg_return_true: }{\prg_return_false: }\exp_end: \c_true_bool \c_
false_bool 
#1<-\begin 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \begin ?macro
\s__token_stop 
#2<-\tl_to_str:n {\protected }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\protect \begin  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_long_macro_p:N \begin 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_long_macro_p:N \begin 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_long_macro_p:N \begin 
{}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_long_macro_p:N \begin {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_long_macro_p:N \begin 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_long_macro_p:N \begin 

\exp_end_continue_f:w ->`^^@

\token_if_protected_long_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_
delimit_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\token_to_str:N
 \protected \tl_to_str:n {\long }macro}{\prg_return_true: }{\prg_return_false: 
}\exp_end: \c_true_bool \c_false_bool 
#1<-\begin 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \begin ?macro
\s__token_stop 
#2<-\token_to_str:N \protected \tl_to_str:n {\long }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\protect \begin  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect \begi
n }\c_space_tl }

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect \begi
n }\c_space_tl }

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\str_if_eq_p:ee {\cs_replacement_spec:N \b
egin }{\exp_not:n {\protect \begin }\c_space_tl }{}?!\q__bool_recursion_tail ??
!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect \be
gin }\c_space_tl }{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect \begi
n }\c_space_tl }

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:ee {\cs_replacement_spec:N \begin }{\exp_not:n {\protect \begi
n }\c_space_tl }

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:ee #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_p_true:w \fi: \c_fa
lse_bool 
#1<-\cs_replacement_spec:N \begin 
#2<-\exp_not:n {\protect \begin }\c_space_tl 

\cs_replacement_spec:N #1->\token_if_macro:NTF #1{\exp_after:wN \__kernel_prefi
x_arg_replacement:wN \token_to_meaning:N #1\s__kernel_stop \use_iii:nnn }{\scan
_stop: }
#1<-\begin 

\token_if_macro:NTF #1->\exp_after:wN \__token_if_macro_p:w \token_to_meaning:N
 #1ma:\s__token_stop \exp_end: 
#1<-\begin 

\__token_if_macro_p:w #1ma#2:#3\s__token_stop ->\str_if_eq:nnTF {#2}{cro}{\prg_
return_true: }{\prg_return_false: }
#1<-
#2<-cro
#3<-->\protect \begin  ma:

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-cro
#2<-cro

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__kernel_prefix_arg_replacement:wN \token_to_meaning:N \begi
n \s__kernel_stop \use_iii:nnn 
#2<-\scan_stop: 

\__kernel_prefix_arg_replacement:wN #1macro:#2->#3\s__kernel_stop #4->#4{#1}{#2
}{#3}
#1<-
#2<-
#3<-\protect \begin  
#4<-\use_iii:nnn 

\use_iii:nnn #1#2#3->#3
#1<-
#2<-
#3<-\protect \begin  

\c_space_tl -> 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_true_bool 
#2<-\__bool_lazy_any:n \q__bool_recursion_tail 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tl_put_right:Nn \l_text_expand_exclude_tl {\begin }

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\cite 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-\cite \tl_map_break: 

\__tl_map_1:w #1->\bool_lazy_any:nF {{\token_if_protected_macro_p:N #1}{\token_
if_protected_long_macro_p:N #1}{\str_if_eq_p:ee {\cs_replacement_spec:N #1}{\ex
p_not:n {\protect #1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl
 {#1}}
#1<-\cite 

\bool_lazy_any:nF #1->\if_predicate:w \bool_lazy_any_p:n {#1}\__prg_F_true:w \f
i: \use:n 
#1<-{\token_if_protected_macro_p:N \cite }{\token_if_protected_long_macro_p:N \
cite }{\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \ci
te }\c_space_tl }}

\bool_lazy_any_p:n #1->\__bool_lazy_any:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\token_if_protected_macro_p:N \cite }{\token_if_protected_long_macro_p:N \
cite }{\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \ci
te }\c_space_tl }}

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_macro_p:N \cite 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_macro_p:N \cite 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_macro_p:N \cite {}?!\q
__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_macro_p:N \cite {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_macro_p:N \cite 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_macro_p:N \cite 

\exp_end_continue_f:w ->`^^@

\token_if_protected_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_delim
it_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\tl_to_str:n {\prote
cted }macro}{\prg_return_true: }{\prg_return_false: }\exp_end: \c_true_bool \c_
false_bool 
#1<-\cite 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \cite ?macro\
s__token_stop 
#2<-\tl_to_str:n {\protected }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\protect \cite  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_long_macro_p:N \cite 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_long_macro_p:N \cite 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_long_macro_p:N \cite {
}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_long_macro_p:N \cite {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_long_macro_p:N \cite 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_long_macro_p:N \cite 

\exp_end_continue_f:w ->`^^@

\token_if_protected_long_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_
delimit_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\token_to_str:N
 \protected \tl_to_str:n {\long }macro}{\prg_return_true: }{\prg_return_false: 
}\exp_end: \c_true_bool \c_false_bool 
#1<-\cite 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \cite ?macro\
s__token_stop 
#2<-\token_to_str:N \protected \tl_to_str:n {\long }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\protect \cite  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \cite 
}\c_space_tl }

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \cite 
}\c_space_tl }

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\str_if_eq_p:ee {\cs_replacement_spec:N \c
ite }{\exp_not:n {\protect \cite }\c_space_tl }{}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \cit
e }\c_space_tl }{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \cite 
}\c_space_tl }

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:ee {\cs_replacement_spec:N \cite }{\exp_not:n {\protect \cite 
}\c_space_tl }

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:ee #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_p_true:w \fi: \c_fa
lse_bool 
#1<-\cs_replacement_spec:N \cite 
#2<-\exp_not:n {\protect \cite }\c_space_tl 

\cs_replacement_spec:N #1->\token_if_macro:NTF #1{\exp_after:wN \__kernel_prefi
x_arg_replacement:wN \token_to_meaning:N #1\s__kernel_stop \use_iii:nnn }{\scan
_stop: }
#1<-\cite 

\token_if_macro:NTF #1->\exp_after:wN \__token_if_macro_p:w \token_to_meaning:N
 #1ma:\s__token_stop \exp_end: 
#1<-\cite 

\__token_if_macro_p:w #1ma#2:#3\s__token_stop ->\str_if_eq:nnTF {#2}{cro}{\prg_
return_true: }{\prg_return_false: }
#1<-
#2<-cro
#3<-->\protect \cite  ma:

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-cro
#2<-cro

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__kernel_prefix_arg_replacement:wN \token_to_meaning:N \cite
 \s__kernel_stop \use_iii:nnn 
#2<-\scan_stop: 

\__kernel_prefix_arg_replacement:wN #1macro:#2->#3\s__kernel_stop #4->#4{#1}{#2
}{#3}
#1<-
#2<-
#3<-\protect \cite  
#4<-\use_iii:nnn 

\use_iii:nnn #1#2#3->#3
#1<-
#2<-
#3<-\protect \cite  

\c_space_tl -> 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_true_bool 
#2<-\__bool_lazy_any:n \q__bool_recursion_tail 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tl_put_right:Nn \l_text_expand_exclude_tl {\cite }

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\end 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-\end \tl_map_break: 

\__tl_map_1:w #1->\bool_lazy_any:nF {{\token_if_protected_macro_p:N #1}{\token_
if_protected_long_macro_p:N #1}{\str_if_eq_p:ee {\cs_replacement_spec:N #1}{\ex
p_not:n {\protect #1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl
 {#1}}
#1<-\end 

\bool_lazy_any:nF #1->\if_predicate:w \bool_lazy_any_p:n {#1}\__prg_F_true:w \f
i: \use:n 
#1<-{\token_if_protected_macro_p:N \end }{\token_if_protected_long_macro_p:N \e
nd }{\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }
\c_space_tl }}

\bool_lazy_any_p:n #1->\__bool_lazy_any:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\token_if_protected_macro_p:N \end }{\token_if_protected_long_macro_p:N \e
nd }{\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }
\c_space_tl }}

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_macro_p:N \end 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_macro_p:N \end 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_macro_p:N \end {}?!\q_
_bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_macro_p:N \end {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_macro_p:N \end 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_macro_p:N \end 

\exp_end_continue_f:w ->`^^@

\token_if_protected_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_delim
it_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\tl_to_str:n {\prote
cted }macro}{\prg_return_true: }{\prg_return_false: }\exp_end: \c_true_bool \c_
false_bool 
#1<-\end 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \end ?macro\s
__token_stop 
#2<-\tl_to_str:n {\protected }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter 
\expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \exp
andafter \z@ \expandafter \protect \fi \end  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_long_macro_p:N \end 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_long_macro_p:N \end 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_long_macro_p:N \end {}
?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_long_macro_p:N \end {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_long_macro_p:N \end 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_long_macro_p:N \end 

\exp_end_continue_f:w ->`^^@

\token_if_protected_long_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_
delimit_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\token_to_str:N
 \protected \tl_to_str:n {\long }macro}{\prg_return_true: }{\prg_return_false: 
}\exp_end: \c_true_bool \c_false_bool 
#1<-\end 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \end ?macro\s
__token_stop 
#2<-\token_to_str:N \protected \tl_to_str:n {\long }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter 
\expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \exp
andafter \z@ \expandafter \protect \fi \end  ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }\
c_space_tl }

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }\
c_space_tl }

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\str_if_eq_p:ee {\cs_replacement_spec:N \e
nd }{\exp_not:n {\protect \end }\c_space_tl }{}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end 
}\c_space_tl }{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }\
c_space_tl }

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:ee {\cs_replacement_spec:N \end }{\exp_not:n {\protect \end }\
c_space_tl }

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:ee #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_p_true:w \fi: \c_fa
lse_bool 
#1<-\cs_replacement_spec:N \end 
#2<-\exp_not:n {\protect \end }\c_space_tl 

\cs_replacement_spec:N #1->\token_if_macro:NTF #1{\exp_after:wN \__kernel_prefi
x_arg_replacement:wN \token_to_meaning:N #1\s__kernel_stop \use_iii:nnn }{\scan
_stop: }
#1<-\end 

\token_if_macro:NTF #1->\exp_after:wN \__token_if_macro_p:w \token_to_meaning:N
 #1ma:\s__token_stop \exp_end: 
#1<-\end 

\__token_if_macro_p:w #1ma#2:#3\s__token_stop ->\str_if_eq:nnTF {#2}{cro}{\prg_
return_true: }{\prg_return_false: }
#1<-
#2<-cro
#3<-->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter \
expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \expa
ndafter \z@ \expandafter \protect \fi \end  ma:

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-cro
#2<-cro

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__kernel_prefix_arg_replacement:wN \token_to_meaning:N \end 
\s__kernel_stop \use_iii:nnn 
#2<-\scan_stop: 

\__kernel_prefix_arg_replacement:wN #1macro:#2->#3\s__kernel_stop #4->#4{#1}{#2
}{#3}
#1<-
#2<-
#3<-\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter \ex
pandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \expand
after \z@ \expandafter \protect \fi \end  
#4<-\use_iii:nnn 

\use_iii:nnn #1#2#3->#3
#1<-
#2<-
#3<-\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter \ex
pandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \expand
after \z@ \expandafter \protect \fi \end  

\c_space_tl -> 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\q__bool_recursion_tail 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\q__bool_recursion_tail 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\q__bool_recursion_tail {}?!\q__bool_recur
sion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__bool_recursion_tail ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_false_bool 
#2<-\bool_if:nT {\q__bool_recursion_tail }{\__bool_use_i_delimit_by_q_recursion
_stop:nw {\c_true_bool }}\__bool_lazy_any:n 

\use:n #1->#1
#1<-\tl_put_right:Nn \l_text_expand_exclude_tl {\end }

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l_text_expand_exclude_tl 
#2<-\end 

\l_text_expand_exclude_tl ->

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\label 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-\label \tl_map_break: 

\__tl_map_1:w #1->\bool_lazy_any:nF {{\token_if_protected_macro_p:N #1}{\token_
if_protected_long_macro_p:N #1}{\str_if_eq_p:ee {\cs_replacement_spec:N #1}{\ex
p_not:n {\protect #1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl
 {#1}}
#1<-\label 

\bool_lazy_any:nF #1->\if_predicate:w \bool_lazy_any_p:n {#1}\__prg_F_true:w \f
i: \use:n 
#1<-{\token_if_protected_macro_p:N \label }{\token_if_protected_long_macro_p:N 
\label }{\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect 
\label }\c_space_tl }}

\bool_lazy_any_p:n #1->\__bool_lazy_any:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\token_if_protected_macro_p:N \label }{\token_if_protected_long_macro_p:N 
\label }{\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect 
\label }\c_space_tl }}

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_macro_p:N \label 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_macro_p:N \label 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_macro_p:N \label {}?!\
q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_macro_p:N \label {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_macro_p:N \label 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_macro_p:N \label 

\exp_end_continue_f:w ->`^^@

\token_if_protected_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_delim
it_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\tl_to_str:n {\prote
cted }macro}{\prg_return_true: }{\prg_return_false: }\exp_end: \c_true_bool \c_
false_bool 
#1<-\label 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \label ?macro
\s__token_stop 
#2<-\tl_to_str:n {\protected }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:#1->\@bsphack \protected@write \@auxout {}{\string \newlabel {#1}{{\@curre
ntlabel }{\thepage }{}{}{}}}\@esphack ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_long_macro_p:N \label 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_long_macro_p:N \label 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_long_macro_p:N \label 
{}?!\q__bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_long_macro_p:N \label {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_long_macro_p:N \label 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_long_macro_p:N \label 

\exp_end_continue_f:w ->`^^@

\token_if_protected_long_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_
delimit_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\token_to_str:N
 \protected \tl_to_str:n {\long }macro}{\prg_return_true: }{\prg_return_false: 
}\exp_end: \c_true_bool \c_false_bool 
#1<-\label 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \label ?macro
\s__token_stop 
#2<-\token_to_str:N \protected \tl_to_str:n {\long }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-
#2<-:#1->\@bsphack \protected@write \@auxout {}{\string \newlabel {#1}{{\@curre
ntlabel }{\thepage }{}{}{}}}\@esphack ?macro

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect \labe
l }\c_space_tl }

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect \labe
l }\c_space_tl }

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\str_if_eq_p:ee {\cs_replacement_spec:N \l
abel }{\exp_not:n {\protect \label }\c_space_tl }{}?!\q__bool_recursion_tail ??
!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect \la
bel }\c_space_tl }{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect \labe
l }\c_space_tl }

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\str_if_eq_p:ee {\cs_replacement_spec:N \label }{\exp_not:n {\protect \labe
l }\c_space_tl }

\exp_end_continue_f:w ->`^^@

\str_if_eq_p:ee #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_p_true:w \fi: \c_fa
lse_bool 
#1<-\cs_replacement_spec:N \label 
#2<-\exp_not:n {\protect \label }\c_space_tl 

\cs_replacement_spec:N #1->\token_if_macro:NTF #1{\exp_after:wN \__kernel_prefi
x_arg_replacement:wN \token_to_meaning:N #1\s__kernel_stop \use_iii:nnn }{\scan
_stop: }
#1<-\label 

\token_if_macro:NTF #1->\exp_after:wN \__token_if_macro_p:w \token_to_meaning:N
 #1ma:\s__token_stop \exp_end: 
#1<-\label 

\__token_if_macro_p:w #1ma#2:#3\s__token_stop ->\str_if_eq:nnTF {#2}{cro}{\prg_
return_true: }{\prg_return_false: }
#1<-
#2<-cro
#3<-#1->\@bsphack \protected@write \@auxout {}{\string \newlabel {#1}{{\@curren
tlabel }{\thepage }{}{}{}}}\@esphack ma:

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-cro
#2<-cro

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__kernel_prefix_arg_replacement:wN \token_to_meaning:N \labe
l \s__kernel_stop \use_iii:nnn 
#2<-\scan_stop: 

\__kernel_prefix_arg_replacement:wN #1macro:#2->#3\s__kernel_stop #4->#4{#1}{#2
}{#3}
#1<-
#2<-#1
#3<-\@bsphack \protected@write \@auxout {}{\string \newlabel {#1}{{\@currentlab
el }{\thepage }{}{}{}}}\@esphack 
#4<-\use_iii:nnn 

\use_iii:nnn #1#2#3->#3
#1<-
#2<-#1
#3<-\@bsphack \protected@write \@auxout {}{\string \newlabel {#1}{{\@currentlab
el }{\thepage }{}{}{}}}\@esphack 

\c_space_tl -> 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_false_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_false_bool .

\use_none:nn #1#2->
#1<-\c_false_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_false_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_false_bool 

\use_ii:nn #1#2->#2
#1<-\c_true_bool 
#2<-\c_false_bool 

\use_none:n #1->
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\q__bool_recursion_tail 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\q__bool_recursion_tail 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\q__bool_recursion_tail {}?!\q__bool_recur
sion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__bool_recursion_tail ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_false_bool 
#2<-\bool_if:nT {\q__bool_recursion_tail }{\__bool_use_i_delimit_by_q_recursion
_stop:nw {\c_true_bool }}\__bool_lazy_any:n 

\use:n #1->#1
#1<-\tl_put_right:Nn \l_text_expand_exclude_tl {\label }

\tl_put_right:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w \exp_after:wN
 {#1#2}}
#1<-\l_text_expand_exclude_tl 
#2<-\label 

\l_text_expand_exclude_tl ->\end 

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\ref 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-\ref \tl_map_break: 

\__tl_map_1:w #1->\bool_lazy_any:nF {{\token_if_protected_macro_p:N #1}{\token_
if_protected_long_macro_p:N #1}{\str_if_eq_p:ee {\cs_replacement_spec:N #1}{\ex
p_not:n {\protect #1}\c_space_tl }}}{\tl_put_right:Nn \l_text_expand_exclude_tl
 {#1}}
#1<-\ref 

\bool_lazy_any:nF #1->\if_predicate:w \bool_lazy_any_p:n {#1}\__prg_F_true:w \f
i: \use:n 
#1<-{\token_if_protected_macro_p:N \ref }{\token_if_protected_long_macro_p:N \r
ef }{\str_if_eq_p:ee {\cs_replacement_spec:N \ref }{\exp_not:n {\protect \ref }
\c_space_tl }}

\bool_lazy_any_p:n #1->\__bool_lazy_any:n #1\q__bool_recursion_tail \q__bool_re
cursion_stop 
#1<-{\token_if_protected_macro_p:N \ref }{\token_if_protected_long_macro_p:N \r
ef }{\str_if_eq_p:ee {\cs_replacement_spec:N \ref }{\exp_not:n {\protect \ref }
\c_space_tl }}

\__bool_lazy_any:n #1->\__bool_if_recursion_tail_stop_do:nn {#1}{\c_false_bool 
}\bool_if:nT {#1}{\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }}
\__bool_lazy_any:n 
#1<-\token_if_protected_macro_p:N \ref 

\__bool_if_recursion_tail_stop_do:nn #1->\tl_if_empty:oTF {\__bool_quark_recurs
ion_tail:w {}#1{}?!\q__bool_recursion_tail ??!}{\__bool_use_i_delimit_by_q_recu
rsion_stop:nw }{\use_none:n }
#1<-\token_if_protected_macro_p:N \ref 

\tl_if_empty:oTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}
\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\__bool_quark_recursion_tail:w {}\token_if_protected_macro_p:N \ref {}?!\q_
_bool_recursion_tail ??!

\__bool_quark_recursion_tail:w #1\q__bool_recursion_tail #2?#3?!->#1#2
#1<-{}\token_if_protected_macro_p:N \ref {}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw 
#2<-\use_none:n 

\use_none:n #1->
#1<-\c_false_bool 

\bool_if:nT #1->\if_predicate:w \bool_if_p:n {#1}\__prg_T_true:w \fi: \use_none
:n 
#1<-\token_if_protected_macro_p:N \ref 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\token_if_protected_macro_p:N \ref 

\exp_end_continue_f:w ->`^^@

\token_if_protected_macro_p:N #1->\str_if_eq:eeTF {\exp_after:wN \__token_delim
it_by_macro:w \token_to_meaning:N #1?macro\s__token_stop }{\tl_to_str:n {\prote
cted }macro}{\prg_return_true: }{\prg_return_false: }\exp_end: \c_true_bool \c_
false_bool 
#1<-\ref 

\str_if_eq:eeTF #1#2->\if:w 0\__str_if_eq:nn {#1}{#2}\__prg_TF_true:w \fi: \use
_ii:nn 
#1<-\exp_after:wN \__token_delimit_by_macro:w \token_to_meaning:N \ref ?macro\s
__token_stop 
#2<-\tl_to_str:n {\protected }macro

\__token_delimit_by_macro:w #1macro#2\s__token_stop ->#1macro
#1<-\protected 
#2<-:->\__cmd_start:nNNnnn {s}\ref  \ref code {\__cmd_grab_t:w *}{}{}?macro

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_use_i_delimit_by_q_recursion_stop:nw {\c_true_bool }

\__bool_use_i_delimit_by_q_recursion_stop:nw #1#2\q__bool_recursion_stop ->#1
#1<-\c_true_bool 
#2<-\__bool_lazy_any:n {\token_if_protected_long_macro_p:N \ref }{\str_if_eq_p:
ee {\cs_replacement_spec:N \ref }{\exp_not:n {\protect \ref }\c_space_tl }}\q__
bool_recursion_tail 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tl_put_right:Nn \l_text_expand_exclude_tl {\ref }

\__tl_map_function_end:w \s__tl_stop #1#2->\__tl_use_none_delimit_by_s_stop:w #
2\tl_map_break: \s__tl_stop #1{#2}\__tl_map_function_end:w \s__tl_stop 
#1<-\__tl_map_1:w 
#2<-\s__tl_stop 

\__tl_use_none_delimit_by_s_stop:w #1\s__tl_stop ->
#1<-

\tl_map_break: ->\prg_map_break:Nn \tl_map_break: {}

\prg_map_break:Nn #1#2#3\prg_break_point:Nn #4#5->#5\if_meaning:w #1#4\exp_afte
r:wN \use_iii:nnn \fi: \prg_map_break:Nn #1{#2}
#1<-\tl_map_break: 
#2<-
#3<-\s__tl_stop \__tl_map_1:w {\s__tl_stop }\__tl_map_function_end:w \s__tl_sto
p \__tl_map_1:w {\s__tl_stop }\__tl_map_1:w {\s__tl_stop }\__tl_map_function:Nn
nnnnnnn \__tl_map_1:w \s__tl_stop \s__tl_stop \s__tl_stop \s__tl_stop \s__tl_st
op 
#4<-\tl_map_break: 
#5<-\int_gdecr:N \g__kernel_prg_map_int 

\int_gdecr:N #1->\tex_global:D \tex_advance:D #1-\c_one_int 
#1<-\g__kernel_prg_map_int 

\use_iii:nnn #1#2#3->#3
#1<-\prg_map_break:Nn 
#2<-\tl_map_break: 
#3<-

\exp_args:NNNV #1#2#3#4->\exp_after:wN #1\exp_after:wN #2\exp_after:wN #3\exp_a
fter:wN {\exp:w \__exp_eval_register:N #4}
#1<-\group_end: 
#2<-\tl_set:Nn 
#3<-\l_text_expand_exclude_tl 
#4<-\l_text_expand_exclude_tl 

\__exp_eval_register:N #1->\exp_after:wN \if_meaning:w \exp_not:N #1#1\if_meani
ng:w \scan_stop: #1\__exp_eval_error_msg:w \fi: \else: \exp_after:wN \use_i_ii:
nnn \fi: \exp_after:wN \exp_end: \tex_the:D #1
#1<-\l_text_expand_exclude_tl 

\use_i_ii:nnn #1#2#3->#1#2
#1<-\exp_after:wN 
#2<-\exp_end: 
#3<-\tex_the:D 

\l_text_expand_exclude_tl ->\end \label 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l_text_expand_exclude_tl 
#2<-\end \label 

\cs_set_protected:Npn ->\tex_protected:D \tex_long:D \tex_def:D 

\@uclclist ->\oe \OE \o \O \ae \AE \dh \DH \dj \DJ \l \L \ng \NG \ss \SS \ij \I
J \th \TH 

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\oe 
#2<-\OE 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\oe 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\OE 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\OE 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \OE 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\OE}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \OE }
#2<-\tl_if_empty:nTF {\OE }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \OE }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \OE 

\use_none:n #1->
#1<-\OE 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \oe _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \oe _tl}{\OE }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \OE _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \O
E _tl}{\oe }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \oe _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \oe _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \oe _tl}{\OE }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \OE _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \OE _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \OE _tl}{\oe }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\o 
#2<-\O 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\o 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\O 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\O 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \O 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\O}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \O }
#2<-\tl_if_empty:nTF {\O }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_co
ntinue_f:w \O }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \O 

\use_none:n #1->
#1<-\O 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \o _tl}{\tl_const:cn {c_
_text_uppercase_\token_to_str:N \o _tl}{\O }}\cs_if_exist:cF {c__text_lowercase
_\token_to_str:N \O _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \O _tl
}{\o }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \o _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \o _tl\
cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \o _tl}{\O }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \O _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \O _tl\
cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \O _tl}{\o }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\ae 
#2<-\AE 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\ae 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\AE 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\AE 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \AE 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\AE}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \AE }
#2<-\tl_if_empty:nTF {\AE }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \AE }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \AE 

\use_none:n #1->
#1<-\AE 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \ae _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \ae _tl}{\AE }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \AE _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \A
E _tl}{\ae }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \ae _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \ae _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \ae _tl}{\AE }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \AE _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \AE _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \AE _tl}{\ae }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\dh 
#2<-\DH 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\dh 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\DH 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\DH 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \DH 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\DH}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \DH }
#2<-\tl_if_empty:nTF {\DH }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \DH }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \DH 

\use_none:n #1->
#1<-\DH 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \dh _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \dh _tl}{\DH }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \DH _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \D
H _tl}{\dh }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \dh _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \dh _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \dh _tl}{\DH }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \DH _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \DH _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \DH _tl}{\dh }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\dj 
#2<-\DJ 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\dj 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\DJ 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\DJ 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \DJ 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\DJ}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \DJ }
#2<-\tl_if_empty:nTF {\DJ }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \DJ }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \DJ 

\use_none:n #1->
#1<-\DJ 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \dj _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \dj _tl}{\DJ }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \DJ _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \D
J _tl}{\dj }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \dj _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \dj _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \dj _tl}{\DJ }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \DJ _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \DJ _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \DJ _tl}{\dj }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\l 
#2<-\L 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\l 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\L 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\L 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \L 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\L}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \L }
#2<-\tl_if_empty:nTF {\L }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_co
ntinue_f:w \L }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \L 

\use_none:n #1->
#1<-\L 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \l _tl}{\tl_const:cn {c_
_text_uppercase_\token_to_str:N \l _tl}{\L }}\cs_if_exist:cF {c__text_lowercase
_\token_to_str:N \L _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \L _tl
}{\l }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \l _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \l _tl\
cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \l _tl}{\L }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \L _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \L _tl\
cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \L _tl}{\l }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\ng 
#2<-\NG 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\ng 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\NG 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\NG 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \NG 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\NG}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \NG }
#2<-\tl_if_empty:nTF {\NG }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \NG }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \NG 

\use_none:n #1->
#1<-\NG 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \ng _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \ng _tl}{\NG }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \NG _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \N
G _tl}{\ng }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \ng _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \ng _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \ng _tl}{\NG }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \NG _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \NG _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \NG _tl}{\ng }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\ss 
#2<-\SS 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\ss 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\SS 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\SS 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \SS 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\SS}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \SS }
#2<-\tl_if_empty:nTF {\SS }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \SS }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \SS 

\use_none:n #1->
#1<-\SS 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \ss _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \ss _tl}{\SS }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \SS _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \S
S _tl}{\ss }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \ss _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \ss _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \ss _tl}{\SS }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \SS _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \SS _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \SS _tl}{\ss }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\ij 
#2<-\IJ 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\ij 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\IJ 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\IJ 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \IJ 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\IJ}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \IJ }
#2<-\tl_if_empty:nTF {\IJ }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \IJ }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \IJ 

\use_none:n #1->
#1<-\IJ 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \ij _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \ij _tl}{\IJ }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \IJ _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \I
J _tl}{\ij }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \ij _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \ij _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \ij _tl}{\IJ }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \IJ _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \IJ _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \IJ _tl}{\ij }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\th 
#2<-\TH 

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\th 

\tl_if_single_token:nT #1->\tl_if_head_is_N_type:nTF {#1}{\__tl_if_empty_if:o {
\use_none:n #1}}{\tl_if_empty:nTF {#1}{\if_false: }{\__tl_if_empty_if:o {\exp:w
 \exp_end_continue_f:w #1}}}\__prg_T_true:w \fi: \use_none:n 
#1<-\TH 

\tl_if_head_is_N_type:nTF #1->\if:w \if_false: {\fi: \__tl_if_head_is_N_type_au
xi:w \prg_do_nothing: #1 }{\exp_after:wN {\token_to_str:N #1}}\scan_stop: \scan
_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\TH 

\__tl_if_head_is_N_type_auxi:w #1 ->\if:w \scan_stop: \__kernel_tl_to_str:w \ex
p_after:wN {#1}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn {f\exp_after:wN \us
e_none:nn }{\exp_after:wN \__tl_if_head_is_N_type_auxii:n }\exp_after:wN {\if_f
alse: }\fi: 
#1<-\prg_do_nothing: \TH 

\prg_do_nothing: ->

\use_ii:nn #1#2->#2
#1<-f\exp_after:wN \use_none:nn 
#2<-\exp_after:wN \__tl_if_head_is_N_type_auxii:n 

\__tl_if_head_is_N_type_auxii:n #1->\exp_after:wN \use_none:n \exp_after:wN 
#1<-

\use_none:n #1->
#1<-{\TH}

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__tl_if_empty_if:o {\use_none:n \TH }
#2<-\tl_if_empty:nTF {\TH }{\if_false: }{\__tl_if_empty_if:o {\exp:w \exp_end_c
ontinue_f:w \TH }}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\use_none:n \TH 

\use_none:n #1->
#1<-\TH 

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\cs_if_exist:cF {c__text_uppercase_\token_to_str:N \th _tl}{\tl_const:cn {c
__text_uppercase_\token_to_str:N \th _tl}{\TH }}\cs_if_exist:cF {c__text_lowerc
ase_\token_to_str:N \TH _tl}{\tl_const:cn {c__text_lowercase_\token_to_str:N \T
H _tl}{\th }}

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_uppercase_\token_to_str:N \th _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_uppercase_\token_to_str:N \th _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_uppercase_\token_to_str:N \th _tl}{\TH }

\cs_if_exist:cF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \e
xp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \ex
p_end: {}
#1<-c__text_lowercase_\token_to_str:N \TH _tl

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w c__text_lowercase_\token_to_str:N \TH _tl
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\tl_const:cn {c__text_lowercase_\token_to_str:N \TH _tl}{\th }

\__text_change_case_setup:Nn #1#2->\quark_if_recursion_tail_stop:N #1\tl_if_sin
gle_token:nT {#2}{\cs_if_exist:cF {c__text_uppercase_\token_to_str:N #1_tl}{\tl
_const:cn {c__text_uppercase_\token_to_str:N #1_tl}{#2}}\cs_if_exist:cF {c__tex
t_lowercase_\token_to_str:N #2_tl}{\tl_const:cn {c__text_lowercase_\token_to_st
r:N #2_tl}{#1}}}\__text_change_case_setup:Nn 
#1<-\q_recursion_tail 
#2<-?

\quark_if_recursion_tail_stop:N #1->\if_meaning:w \q_recursion_tail #1\exp_afte
r:wN \use_none_delimit_by_q_recursion_stop:w \fi: 
#1<-\q_recursion_tail 

\use_none_delimit_by_q_recursion_stop:w #1\q_recursion_stop ->
#1<-\tl_if_single_token:nT {?}{\cs_if_exist:cF {c__text_uppercase_\token_to_str
:N \q_recursion_tail _tl}{\tl_const:cn {c__text_uppercase_\token_to_str:N \q_re
cursion_tail _tl}{?}}\cs_if_exist:cF {c__text_lowercase_\token_to_str:N ?_tl}{\
tl_const:cn {c__text_lowercase_\token_to_str:N ?_tl}{\q_recursion_tail }}}\__te
xt_change_case_setup:Nn 

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-babel

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\@ifpackagelater {babel}{2020-01-15}{\cs_gset_protected:Npn \@@text@case@au
x@ {\str_set:Nx \reserved@a {\localeinfo *{tag.bcp47}}}}{}
#2<-

\@preamblecmds ->\do \@onlypreamble \do \@preamblecmds \do \CheckCommand \do \c
heck@command \do \@check@c \do \@check@eq \do \DeclareDefaultHookRule \do \docu
ment \do \nofiles \do \includeonly \do \@obsoletefile \do \listfiles \do \Decla
reTextCommand \do \DeclareTextSymbol \do \DeclareTextCommandDefault \do \Declar
eTextAccent \do \DeclareTextCompositeCommand \do \DeclareTextComposite \do \Dec
lareTextSymbolDefault \do \DeclareTextAccentDefault \do \UndeclareTextCommand \
do \new@mathgroup \do \cdp@list \do \cdp@elt \do \DeclareFontEncoding \do \Decl
areFontEncoding@ \do \DeclareFontSubstitution \do \DeclareFontEncodingDefaults 
\do \DeclarePreloadSizes \do \DeclareMathSizes \do \@DeclareMathSizes \do \Decl
areErrorFont \do \DeclareSizeFunction \do \version@list \do \version@elt \do \a
lpha@list \do \alpha@elt \do \restore@mathversion \do \init@restore@version \do
 \dorestore@version \do \process@table \do \DeclareMathVersion \do \new@mathver
sion \do \DeclareSymbolFont \do \group@list \do \group@elt \do \new@symbolfont 
\do \SetSymbolFont \do \SetSymbolFont@ \do \get@cdp \do \DeclareMathAlphabet \d
o \new@mathalphabet \do \SetMathAlphabet \do \SetMathAlphabet@ \do \DeclareMath
Accent \do \set@mathaccent \do \DeclareMathSymbol \do \set@mathchar \do \set@ma
thsymbol \do \DeclareMathDelimiter \do \@xxDeclareMathDelimiter \do \@DeclareMa
thDelimiter \do \@xDeclareMathDelimiter \do \set@mathdelimiter \do \set@@mathde
limiter \do \DeclareMathRadical \do \mathchar@type \do \DeclareSymbolFontAlphab
et \do \DeclareSymbolFontAlphabet@ \do \DeclareTextFontCommand \do \DeclareOldF
ontCommand \do \DeclareEncodingSubset \do \DeclareEncodingSubset@aux \do \@Decl
areEncodingSubset \do \@newl@bel \do \makeindex \do \makeglossary \do \mark_new
_class:n \do \NewMarkClass \do \@pushfilename \do \@popfilename \do \@p@pfilena
me \do \@currnamestack \do \ProvidesPackage \do \@pr@videpackage \do \ProvidesC
lass \do \@pass@ptions \do \PassOptionsToPackage \do \PassOptionsToClass \do \D
eclareOption \do \@declareoption \do \@defdefault@ds \do \OptionNotUsed \do \Pr
ocessOptions \do \@process@ptions \do \@xprocess@ptions \do \@process@pti@ns \d
o \@options \do \@use@ption \do \ExecuteOptions \do \documentclass \do \documen
tstyle \do \RequirePackage \do \LoadClass \do \@loadwithoptions \do \LoadClassW
ithOptions \do \RequirePackageWithOptions \do \usepackage \do \NeedsTeXFormat \
do \@needsformat \do \@needsf@rmat \do \@fileswithoptions \do \@fileswith@ption
s \do \@fileswith@pti@ns \do \@onefilewithoptions \do \@@fileswith@pti@ns \do \
@reset@ptions \do \AtEndOfPackage \do \AtEndOfClass \do \AtBeginDocument \do \@
cls@pkg \do \@unknownoptionerror \do \@unprocessedoptions \do \@@unprocessedopt
ions \do \@badrequireerror \do \@twoloadclasserror \do \@twoclasseserror \do \P
rocessKeyOptions \do \DeclareUnicodeCharacter \do \parse@XML@charref \do \parse
@UTFviii@a \do \parse@UTFviii@b 

\do #1->\global \let #1\@notprerr 
#1<-\@onlypreamble 

\do #1->\global \let #1\@notprerr 
#1<-\@preamblecmds 

\do #1->\global \let #1\@notprerr 
#1<-\CheckCommand 

\do #1->\global \let #1\@notprerr 
#1<-\check@command 

\do #1->\global \let #1\@notprerr 
#1<-\@check@c 

\do #1->\global \let #1\@notprerr 
#1<-\@check@eq 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareDefaultHookRule 

\do #1->\global \let #1\@notprerr 
#1<-\document 

\do #1->\global \let #1\@notprerr 
#1<-\nofiles 

\do #1->\global \let #1\@notprerr 
#1<-\includeonly 

\do #1->\global \let #1\@notprerr 
#1<-\@obsoletefile 

\do #1->\global \let #1\@notprerr 
#1<-\listfiles 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextCommand 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextSymbol 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextCommandDefault 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextAccent 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextCompositeCommand 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextComposite 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextSymbolDefault 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextAccentDefault 

\do #1->\global \let #1\@notprerr 
#1<-\UndeclareTextCommand 

\do #1->\global \let #1\@notprerr 
#1<-\new@mathgroup 

\do #1->\global \let #1\@notprerr 
#1<-\cdp@list 

\do #1->\global \let #1\@notprerr 
#1<-\cdp@elt 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareFontEncoding 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareFontEncoding@ 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareFontSubstitution 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareFontEncodingDefaults 

\do #1->\global \let #1\@notprerr 
#1<-\DeclarePreloadSizes 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathSizes 

\do #1->\global \let #1\@notprerr 
#1<-\@DeclareMathSizes 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareErrorFont 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareSizeFunction 

\do #1->\global \let #1\@notprerr 
#1<-\version@list 

\do #1->\global \let #1\@notprerr 
#1<-\version@elt 

\do #1->\global \let #1\@notprerr 
#1<-\alpha@list 

\do #1->\global \let #1\@notprerr 
#1<-\alpha@elt 

\do #1->\global \let #1\@notprerr 
#1<-\restore@mathversion 

\do #1->\global \let #1\@notprerr 
#1<-\init@restore@version 

\do #1->\global \let #1\@notprerr 
#1<-\dorestore@version 

\do #1->\global \let #1\@notprerr 
#1<-\process@table 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathVersion 

\do #1->\global \let #1\@notprerr 
#1<-\new@mathversion 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareSymbolFont 

\do #1->\global \let #1\@notprerr 
#1<-\group@list 

\do #1->\global \let #1\@notprerr 
#1<-\group@elt 

\do #1->\global \let #1\@notprerr 
#1<-\new@symbolfont 

\do #1->\global \let #1\@notprerr 
#1<-\SetSymbolFont 

\do #1->\global \let #1\@notprerr 
#1<-\SetSymbolFont@ 

\do #1->\global \let #1\@notprerr 
#1<-\get@cdp 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathAlphabet 

\do #1->\global \let #1\@notprerr 
#1<-\new@mathalphabet 

\do #1->\global \let #1\@notprerr 
#1<-\SetMathAlphabet 

\do #1->\global \let #1\@notprerr 
#1<-\SetMathAlphabet@ 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathAccent 

\do #1->\global \let #1\@notprerr 
#1<-\set@mathaccent 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathSymbol 

\do #1->\global \let #1\@notprerr 
#1<-\set@mathchar 

\do #1->\global \let #1\@notprerr 
#1<-\set@mathsymbol 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathDelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\@xxDeclareMathDelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\@DeclareMathDelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\@xDeclareMathDelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\set@mathdelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\set@@mathdelimiter 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareMathRadical 

\do #1->\global \let #1\@notprerr 
#1<-\mathchar@type 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareSymbolFontAlphabet 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareSymbolFontAlphabet@ 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareTextFontCommand 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareOldFontCommand 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareEncodingSubset 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareEncodingSubset@aux 

\do #1->\global \let #1\@notprerr 
#1<-\@DeclareEncodingSubset 

\do #1->\global \let #1\@notprerr 
#1<-\@newl@bel 

\do #1->\global \let #1\@notprerr 
#1<-\makeindex 

\do #1->\global \let #1\@notprerr 
#1<-\makeglossary 

\do #1->\global \let #1\@notprerr 
#1<-\mark_new_class:n 

\do #1->\global \let #1\@notprerr 
#1<-\NewMarkClass 

\do #1->\global \let #1\@notprerr 
#1<-\@pushfilename 

\do #1->\global \let #1\@notprerr 
#1<-\@popfilename 

\do #1->\global \let #1\@notprerr 
#1<-\@p@pfilename 

\do #1->\global \let #1\@notprerr 
#1<-\@currnamestack 

\do #1->\global \let #1\@notprerr 
#1<-\ProvidesPackage 

\do #1->\global \let #1\@notprerr 
#1<-\@pr@videpackage 

\do #1->\global \let #1\@notprerr 
#1<-\ProvidesClass 

\do #1->\global \let #1\@notprerr 
#1<-\@pass@ptions 

\do #1->\global \let #1\@notprerr 
#1<-\PassOptionsToPackage 

\do #1->\global \let #1\@notprerr 
#1<-\PassOptionsToClass 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareOption 

\do #1->\global \let #1\@notprerr 
#1<-\@declareoption 

\do #1->\global \let #1\@notprerr 
#1<-\@defdefault@ds 

\do #1->\global \let #1\@notprerr 
#1<-\OptionNotUsed 

\do #1->\global \let #1\@notprerr 
#1<-\ProcessOptions 

\do #1->\global \let #1\@notprerr 
#1<-\@process@ptions 

\do #1->\global \let #1\@notprerr 
#1<-\@xprocess@ptions 

\do #1->\global \let #1\@notprerr 
#1<-\@process@pti@ns 

\do #1->\global \let #1\@notprerr 
#1<-\@options 

\do #1->\global \let #1\@notprerr 
#1<-\@use@ption 

\do #1->\global \let #1\@notprerr 
#1<-\ExecuteOptions 

\do #1->\global \let #1\@notprerr 
#1<-\documentclass 

\do #1->\global \let #1\@notprerr 
#1<-\documentstyle 

\do #1->\global \let #1\@notprerr 
#1<-\RequirePackage 

\do #1->\global \let #1\@notprerr 
#1<-\LoadClass 

\do #1->\global \let #1\@notprerr 
#1<-\@loadwithoptions 

\do #1->\global \let #1\@notprerr 
#1<-\LoadClassWithOptions 

\do #1->\global \let #1\@notprerr 
#1<-\RequirePackageWithOptions 

\do #1->\global \let #1\@notprerr 
#1<-\usepackage 

\do #1->\global \let #1\@notprerr 
#1<-\NeedsTeXFormat 

\do #1->\global \let #1\@notprerr 
#1<-\@needsformat 

\do #1->\global \let #1\@notprerr 
#1<-\@needsf@rmat 

\do #1->\global \let #1\@notprerr 
#1<-\@fileswithoptions 

\do #1->\global \let #1\@notprerr 
#1<-\@fileswith@ptions 

\do #1->\global \let #1\@notprerr 
#1<-\@fileswith@pti@ns 

\do #1->\global \let #1\@notprerr 
#1<-\@onefilewithoptions 

\do #1->\global \let #1\@notprerr 
#1<-\@@fileswith@pti@ns 

\do #1->\global \let #1\@notprerr 
#1<-\@reset@ptions 

\do #1->\global \let #1\@notprerr 
#1<-\AtEndOfPackage 

\do #1->\global \let #1\@notprerr 
#1<-\AtEndOfClass 

\do #1->\global \let #1\@notprerr 
#1<-\AtBeginDocument 

\do #1->\global \let #1\@notprerr 
#1<-\@cls@pkg 

\do #1->\global \let #1\@notprerr 
#1<-\@unknownoptionerror 

\do #1->\global \let #1\@notprerr 
#1<-\@unprocessedoptions 

\do #1->\global \let #1\@notprerr 
#1<-\@@unprocessedoptions 

\do #1->\global \let #1\@notprerr 
#1<-\@badrequireerror 

\do #1->\global \let #1\@notprerr 
#1<-\@twoloadclasserror 

\do #1->\global \let #1\@notprerr 
#1<-\@twoclasseserror 

\do #1->\global \let #1\@notprerr 
#1<-\ProcessKeyOptions 

\do #1->\global \let #1\@notprerr 
#1<-\DeclareUnicodeCharacter 

\do #1->\global \let #1\@notprerr 
#1<-\parse@XML@charref 

\do #1->\global \let #1\@notprerr 
#1<-\parse@UTFviii@a 

\do #1->\global \let #1\@notprerr 
#1<-\parse@UTFviii@b 

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-begindocument/end

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-begindocument/end

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-begindocument/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook begindocument/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook begindocument/end\cs_end: \scan_st
op: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_begindocument/en
d_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg
_return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_begindocument/end_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {begindocument/en
d}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {begindocument/end}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {begindocument/end}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {begindocument/end}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {begindocument/end}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/end}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {begindocument/end}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {begindocument/end}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {begindocument/end}}\__hook_parse_dot_labe
l:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {begindocument/end}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {begindocument/end}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {begindocument/end}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {begindocument/end}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {begindocument/end}\s__tl_nil \__tl_trim_spaces_aux
iii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {begindocument/end}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {begindocument/end}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {begindocument/end}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/end}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {begindocument/end}}{.}{\__hook_currname_or_default
: }{\__hook_parse_dot_label:w \use:n {begindocument/end}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/end}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {begindocument/end}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {begindocument/end}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {begindocument/end}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {begindocument/end}}}{\__ho
ok_parse_dot_label_cleanup:w \use:n {begindocument/end}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {begindocument/end}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {begindocument/end}./\s__hook_mark
 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {begindocument/end}

\use:n #1->#1
#1<-begindocument/end

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-begindocument/end

\__hook_preamble_hook:n #1->
#1<-begindocument/end

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-begindocument/end

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_begindocument/end_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_begindocument/end_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-begindocument/end

\__hook begindocument/end ->\__hook_toplevel begindocument/end \__hook_next beg
indocument/end 

\__hook_toplevel begindocument/end ->

\__hook_next begindocument/end ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-begindocument/end

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook begindocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook begindocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook begindocument/end 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next begindocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next begindocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next begindocument/end 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel begindocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel begindocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel begindocument/end 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_begindocument/end_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_begindocument/end_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_begindocument/end_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_begindocument/end_code_prop 
#2<-\prop_new:N \g__hook_begindocument/end_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_begindocument/end_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_begindocument/end_code_prop 
#2<-\c_empty_prop 

\begin ->\protect \begin  

\begin  #1->\UseHook {env/#1/before}\@ifundefined {#1}{\def \reserved@a {\@late
x@error {Environment #1 undefined}\@eha }}{\def \reserved@a {\def \@currenvir {
#1}\edef \@currenvline {\on@line }\@execute@begin@hook {#1}\csname #1\endcsname
 }}\@ignorefalse \begingroup \@endpefalse \reserved@a 
#1<-eqnarray

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/eqnarray/before

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-eqnarray

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-eqnarray

\@secondoftwo #1#2->#2
#1<-\def \reserved@a {\@latex@error {Environment eqnarray undefined}\@eha }
#2<-\def \reserved@a {\def \@currenvir {eqnarray}\edef \@currenvline {\on@line 
}\@execute@begin@hook {eqnarray}\csname eqnarray\endcsname }

\@ignorefalse ->\global \let \if@ignore \iffalse 

\@endpefalse ->\let \if@endpe \iffalse 

\reserved@a ->\def \@currenvir {eqnarray}\edef \@currenvline {\on@line }\@execu
te@begin@hook {eqnarray}\csname eqnarray\endcsname 

\on@line -> on input line \the \inputlineno 

\@execute@begin@hook #1->\UseHook {env/#1/begin}
#1<-eqnarray

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/eqnarray/begin

\eqnarray ->\stepcounter {equation}\def \@currentlabel {\p@equation \theequatio
n }\def \@currentcounter {equation}\global \@eqnswtrue \m@th \global \@eqcnt \z
@ \tabskip \@centering \let \\\@eqncr $$\everycr {}\halign to\displaywidth \bgr
oup \hskip \@centering $\displaystyle \tabskip \z@skip {##}$\@eqnsel &\global \
@eqcnt \@ne \hskip \tw@ \arraycolsep \hfil ${##}$\hfil &\global \@eqcnt \tw@ \h
skip \tw@ \arraycolsep $\displaystyle {##}$\hfil \tabskip \@centering &\global 
\@eqcnt \thr@@ \hb@xt@ \z@ \bgroup \hss ##\egroup \tabskip \z@skip \cr 

\stepcounter #1->\addtocounter {#1}\@ne \begingroup \let \@elt \@stpelt \csname
 cl@#1\endcsname \endgroup 
#1<-equation

\addtocounter #1#2->\@ifundefined {c@#1}{\@nocounterr {#1}}{\global \advance \c
sname c@#1\endcsname #2\relax }
#1<-equation
#2<-\@ne 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-c@equation

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-c@equation

\@secondoftwo #1#2->#2
#1<-\@nocounterr {equation}
#2<-\global \advance \csname c@equation\endcsname \@ne \relax 

\cl@equation ->

\@eqnswtrue ->\let \if@eqnsw \iftrue 

\m@th ->\mathsurround \z@ 

\g__para_standard_everypar_tl ->\box_gset_to_last:N \g_para_indent_box \group_b
egin: \tex_par:D \group_end: \tex_everypar:D {\msg_error:nnnn {hooks}{para-mode
}{before}{vertical}}\@kernel@before@para@before \hook_use:n {para/before}\group
_begin: \tex_everypar:D {}\skip_zero:N \tex_parskip:D \tex_noindent:D \group_en
d: \tex_everypar:D {\g__para_standard_everypar_tl }\@kernel@before@para@begin \
hook_use:n {para/begin}\if_mode_horizontal: \else: \msg_error:nnnn {hooks}{para
-mode}{begin}{vertical}\fi: \__para_handle_indent: \the \toks 11 

\box_gset_to_last:N #1->\tex_global:D \tex_setbox:D #1\tex_lastbox:D 
#1<-\g_para_indent_box 

\@kernel@before@para@before ->

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-para/before

\__hook para/before ->\__hook_toplevel para/before \__hook_next para/before 

\__hook_toplevel para/before ->

\__hook_next para/before ->

\skip_zero:N #1->#1=\c_zero_skip 
#1<-\tex_parskip:D 

\@kernel@before@para@begin ->

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-para/begin

\__hook para/begin ->\__hook_toplevel para/begin \__hook_next para/begin 

\__hook_toplevel para/begin ->

\__hook_next para/begin ->

\__para_handle_indent: ->\box_use_drop:N \g_para_indent_box 

\check@mathfonts ->\ifx \glb@currsize \f@size \else \glb@settings \init@restore
@glb@settings \fi \let \curr@math@size \f@size \def \init@restore@glb@settings 
{\aftergroup \restglb@settings }\aftergroup \mv@normal@reset \aftergroup \mv@bo
ld@reset 

\glb@settings ->\expandafter \ifx \csname S@\f@size \endcsname \relax \calculat
e@math@sizes \fi \csname S@\f@size \endcsname \ifmath@fonts \begingroup \escape
char \m@ne \csname mv@\math@version \endcsname \globaldefs \@ne \math@fonts \le
t \glb@currsize \f@size \endgroup \the \every@math@size \fi 

\f@size ->10

\f@size ->10

\S@10 ->\gdef \tf@size {10}\gdef \sf@size {7}\gdef \ssf@size {5}

math@version ->normal

mv@normal ->getanddefine@fonts symoperators OT1/cmr/m/n getanddefine@fonts syml
etters OML/cmm/m/it getanddefine@fonts symsymbols OMS/cmsy/m/n getanddefine@fon
ts symlargesymbols OMX/cmex/m/n install@mathalphabet mathbf  {select@group math
bf  M@OT1 OT1/cmr/bx/n }install@mathalphabet mathsf  {select@group mathsf  M@OT
1 OT1/cmss/m/n }install@mathalphabet mathit  {select@group mathit  M@OT1 OT1/cm
r/m/it }install@mathalphabet mathtt  {select@group mathtt  M@OT1 OT1/cmtt/m/n }

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symoperators 
#2<-OT1/cmr/m/n 

tf@size ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OT1/cmr/m/n/10 

sf@size ->7

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OT1/cmr/m/n/7 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OT1/cmr/m/n/7 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-7

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OT1

f@family ->cmr

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74>
<24.88>cmr17

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
<-*>@nil <

f@size ->7

reserved@f ->extract@rangefontinfo <6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4
>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*
>@nil <

f@size ->7

reserved@f ->extract@rangefontinfo <7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cm
r12<17.28><20.74><24.88>cmr17<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@n
il <

f@size ->7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmr

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmr*

remove@star #1*->#1
#1<-cmr

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmr

remove@to@nnil #1@nnil ->
#1<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmr

f@size ->7

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->7

mandatory@arg ->cmr7

space -> 

reserved@f ->

font@name ->OT1/cmr/m/n/7 

external@font ->cmr7 at7.0pt

font@name ->OT1/cmr/m/n/7 

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

<5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
 ->

ssf@size ->5

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OT1/cmr/m/n/5 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OT1/cmr/m/n/5 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OT1
#2<-cmr
#3<-m
#4<-n
#5<-5

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OT1

f@family ->cmr

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74>
<24.88>cmr17

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
<-*>@nil <

f@size ->5

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-6

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-12

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmr

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmr*

remove@star #1*->#1
#1<-cmr

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmr

remove@to@nnil #1@nnil ->
#1<-10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmr

f@size ->5

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->5

mandatory@arg ->cmr5

space -> 

reserved@f ->

font@name ->OT1/cmr/m/n/5 

external@font ->cmr5 at5.0pt

font@name ->OT1/cmr/m/n/5 

f@encoding ->OT1

f@family ->cmr

OT1+cmr ->hyphenchar font 45

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OT1

f@family ->cmr

f@series ->m

f@shape ->n

OT1/cmr/m/n -><5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.7
4><24.88>cmr17 

<5><6><7><8><9><10><12>gen*cmr<10.95>cmr10<14.4>cmr12<17.28><20.74><24.88>cmr17
 ->

math@fonts ->

textfont@name ->OT1/cmr/m/n/10 

scriptfont@name ->OT1/cmr/m/n/7 

font@name ->OT1/cmr/m/n/5 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symletters 
#2<-OML/cmm/m/it 

tf@size ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OML/cmm/m/it/10 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OML/cmm/m/it/10 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-10

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OML

f@family ->cmm

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14
.4><17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@
nil <

f@size ->10

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4>
<17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil
 <

f@size ->10

reserved@f ->extract@rangefontinfo <8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17
.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28
><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-gen*cmmi
#3<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-
#3<-10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

f@size ->10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-10.95

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-cmmi10

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-cmmi10
#2<-

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi10

remove@to@nnil #1@nnil ->
#1<-12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->

s@fct@ ->empty@sfcnt @font@warning 

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->10

mandatory@arg ->cmmi10

space -> 

reserved@f ->

font@name ->OML/cmm/m/it/10 

external@font ->cmmi10 at10.0pt

font@name ->OML/cmm/m/it/10 

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>

sf@size ->7

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OML/cmm/m/it/7 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OML/cmm/m/it/7 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-7

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OML

f@family ->cmm

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <

f@size ->7

reserved@f ->extract@rangefontinfo <6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14
.4><17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@
nil <

f@size ->7

reserved@f ->extract@rangefontinfo <7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4>
<17.28><20.74><24.88>cmmi12<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil
 <

f@size ->7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmmi

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmmi*

remove@star #1*->#1
#1<-cmmi

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi

remove@to@nnil #1@nnil ->
#1<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmmi

f@size ->7

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->7

mandatory@arg ->cmmi7

space -> 

reserved@f ->

font@name ->OML/cmm/m/it/7 

external@font ->cmmi7 at7.0pt

font@name ->OML/cmm/m/it/7 

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>

ssf@size ->5

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OML/cmm/m/it/5 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OML/cmm/m/it/5 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OML
#2<-cmm
#3<-m
#4<-it
#5<-5

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OML

f@family ->cmm

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24
.88>cmmi12

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-
*>@nil <

f@size ->5

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-6

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmmi

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmmi*

remove@star #1*->#1
#1<-cmmi

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmmi

remove@to@nnil #1@nnil ->
#1<-10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmmi

f@size ->5

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->5

mandatory@arg ->cmmi5

space -> 

reserved@f ->

font@name ->OML/cmm/m/it/5 

external@font ->cmmi5 at5.0pt

font@name ->OML/cmm/m/it/5 

f@encoding ->OML

f@family ->cmm

OML+cmm ->skewchar font 127

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OML

f@family ->cmm

f@series ->m

f@shape ->it

OML/cmm/m/it -><5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74>
<24.88>cmmi12 

<5><6><7><8><9>gen*cmmi<10><10.95>cmmi10<12><14.4><17.28><20.74><24.88>cmmi12 -
>

math@fonts ->textfont symoperators OT1/cmr/m/n/10 scriptfont symoperators OT1/c
mr/m/n/7 scriptscriptfont symoperators OT1/cmr/m/n/5 

textfont@name ->OML/cmm/m/it/10 

scriptfont@name ->OML/cmm/m/it/7 

font@name ->OML/cmm/m/it/5 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symsymbols 
#2<-OMS/cmsy/m/n 

tf@size ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMS/cmsy/m/n/10 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OMS/cmsy/m/n/10 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-10

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OMS

f@family ->cmsy

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <

f@size ->10

reserved@f ->extract@rangefontinfo <6><7><8><9><10>gen*cmsy<10.95><12><14.4><17
.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <7><8><9><10>gen*cmsy<10.95><12><14.4><17.28
><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <8><9><10>gen*cmsy<10.95><12><14.4><17.28><2
0.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-8

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-8
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-8
#2<-
#3<-9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <9><10>gen*cmsy<10.95><12><14.4><17.28><20.7
4><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-9

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-9
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-9
#2<-
#3<-10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->10

reserved@f ->extract@rangefontinfo <10>gen*cmsy<10.95><12><14.4><17.28><20.74><
24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-10

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-10
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-10
#2<-gen*cmsy
#3<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmsy

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmsy*

remove@star #1*->#1
#1<-cmsy

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy

remove@to@nnil #1@nnil ->
#1<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmsy

f@size ->10

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->10

mandatory@arg ->cmsy10

space -> 

reserved@f ->

font@name ->OMS/cmsy/m/n/10 

external@font ->cmsy10 at10.0pt

font@name ->OMS/cmsy/m/n/10 

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->

sf@size ->7

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMS/cmsy/m/n/7 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OMS/cmsy/m/n/7 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-7

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OMS

f@family ->cmsy

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <

f@size ->7

reserved@f ->extract@rangefontinfo <6><7><8><9><10>gen*cmsy<10.95><12><14.4><17
.28><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-6

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-6
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-6
#2<-
#3<-7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->7

reserved@f ->extract@rangefontinfo <7><8><9><10>gen*cmsy<10.95><12><14.4><17.28
><20.74><24.88>cmsy10<-*>@nil <@nnil 

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-7

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-7
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-7
#2<-
#3<-8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

f@size ->7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmsy

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmsy*

remove@star #1*->#1
#1<-cmsy

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy

remove@to@nnil #1@nnil ->
#1<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmsy

f@size ->7

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->7

mandatory@arg ->cmsy7

space -> 

reserved@f ->

font@name ->OMS/cmsy/m/n/7 

external@font ->cmsy7 at7.0pt

font@name ->OMS/cmsy/m/n/7 

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->

ssf@size ->5

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMS/cmsy/m/n/5 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OMS/cmsy/m/n/5 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMS
#2<-cmsy
#3<-m
#4<-n
#5<-5

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OMS

f@family ->cmsy

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cm
sy10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<-5

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-5
#2<->

check@single #1>#2<#3@nnil ->def reserved@f {extract@rangefontinfo <#3@nnil }if
dim f@size p@ =#1p@ set@simple@size@args #2<#3@nnil execute@size@function sizef
n@info ifx external@font @empty else let reserved@f @empty fi fi reserved@f 
#1<-5
#2<-
#3<-6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil
 <

f@size ->5

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-6

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-8

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-9

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-

remove@angles #1>->set@simple@size@args 
#1<-10

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-gen*cmsy

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-gen
#2<-cmsy*

remove@star #1*->#1
#1<-cmsy

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmsy

remove@to@nnil #1@nnil ->
#1<-10.95><12><14.4><17.28><20.74><24.88>cmsy10<-*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->gen

s@fct@gen ->gen@sfcnt @font@warning 

gen@sfcnt ->edef mandatory@arg {mandatory@arg f@size }empty@sfcnt 

mandatory@arg ->cmsy

f@size ->5

empty@sfcnt #1->@tempdimb f@size p@ ifx optional@arg @empty else @tempdimb opti
onal@arg @tempdimb #1{Fontspace shapespace `curr@fontshape 'space willspace beM
essageBreak scaledspace tospace sizespace the @tempdimb }fi edef external@font 
{mandatory@arg space atthe @tempdimb }
#1<-@font@warning 

f@size ->5

mandatory@arg ->cmsy5

space -> 

reserved@f ->

font@name ->OMS/cmsy/m/n/5 

external@font ->cmsy5 at5.0pt

font@name ->OMS/cmsy/m/n/5 

f@encoding ->OMS

f@family ->cmsy

OMS+cmsy ->skewchar font 48

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMS

f@family ->cmsy

f@series ->m

f@shape ->n

OMS/cmsy/m/n -><5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88
>cmsy10 

<5><6><7><8><9><10>gen*cmsy<10.95><12><14.4><17.28><20.74><24.88>cmsy10 ->

math@fonts ->textfont symoperators OT1/cmr/m/n/10 scriptfont symoperators OT1/c
mr/m/n/7 scriptscriptfont symoperators OT1/cmr/m/n/5 textfont symletters OML/cm
m/m/it/10 scriptfont symletters OML/cmm/m/it/7 scriptscriptfont symletters OML/
cmm/m/it/5 

textfont@name ->OMS/cmsy/m/n/10 

scriptfont@name ->OMS/cmsy/m/n/7 

font@name ->OMS/cmsy/m/n/5 

getanddefine@fonts #1#2->xdef font@name {csname string #2/tf@size endcsname }pi
ckup@font let textfont@name font@name xdef font@name {csname string #2/sf@size 
endcsname }pickup@font let scriptfont@name font@name xdef font@name {csname str
ing #2/ssf@size endcsname }pickup@font edef math@fonts {math@fonts textfont #1t
extfont@name scriptfont #1scriptfont@name scriptscriptfont #1font@name }
#1<-symlargesymbols 
#2<-OMX/cmex/m/n 

tf@size ->10

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMX/cmex/m/n/10 

sf@size ->7

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMX/cmex/m/n/7 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OMX/cmex/m/n/7 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMX
#2<-cmex
#3<-m
#4<-n
#5<-7

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OMX

f@family ->cmex

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><->sfixed*cmex10 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><->sfixed*cmex10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<--

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-
#2<-->

check@range #1-#2>#3<#4@nnil ->ifnot@nil {#3}{def reserved@f {extract@rangefont
info <#4@nnil }upper@bound 0#2p@ ifdim upper@bound =z@ upper@bound maxdimen fi 
ifdim f@size p@ <upper@bound lower@bound 0#1p@ ifdim f@size p@ <lower@bound els
e set@simple@size@args #3<#4@nnil execute@size@function sizefn@info ifx externa
l@font @empty else let reserved@f @empty fi fi fi reserved@f }
#1<-
#2<-
#3<-sfixed*cmex10
#4<--*>@nil <

ifnot@nil #1->def reserved@a {#1}ifx reserved@a @nnil expandafter @gobble else 
expandafter @firstofone fi 
#1<-sfixed*cmex10

@firstofone #1->#1
#1<-def reserved@f {extract@rangefontinfo <-*>@nil <@nnil }upper@bound 0p@ ifdi
m upper@bound =z@ upper@bound maxdimen fi ifdim f@size p@ <upper@bound lower@bo
und 0p@ ifdim f@size p@ <lower@bound else set@simple@size@args sfixed*cmex10<-*
>@nil <@nnil execute@size@function sizefn@info ifx external@font @empty else le
t reserved@f @empty fi fi fi reserved@f 

f@size ->7

f@size ->7

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-sfixed*cmex10

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-sfixed
#2<-cmex10*

remove@star #1*->#1
#1<-cmex10

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmex10

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->sfixed

s@fct@sfixed ->fixed@sfcnt @font@info 

fixed@sfcnt #1->ifx optional@arg @empty let external@font mandatory@arg else ed
ef external@font {mandatory@arg space atoptional@arg pt}fi #1{Externalspace fon
tspace `external@font 'space loadedspace forspace sizeMessageBreak <f@size >}
#1<-@font@info 

@font@info #1->GenericInfo {(Font)@spaces @spaces @spaces space space }{LaTeX F
ont Info: space space space #1}
#1<-Externalspace fontspace `external@font 'space loadedspace forspace sizeMess
ageBreak <f@size >

GenericInfo ->protect GenericInfo  

GenericInfo  #1#2->begingroup def MessageBreak {
#1}set@display@protect immediate write m@ne {#2on@line .}endgroup 
#1<-(Font)@spaces @spaces @spaces space space 
#2<-LaTeX Font Info: space space space Externalspace fontspace `external@font '
space loadedspace forspace sizeMessageBreak <f@size >

set@display@protect ->let protect string 

space -> 

space -> 

space -> 

space -> 

space -> 

external@font ->cmex10

space -> 

space -> 

space -> 

MessageBreak ->
(Font)@spaces @spaces @spaces space space 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

space -> 

space -> 

f@size ->7

on@line -> on input line the inputlineno 
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 7.

reserved@f ->

font@name ->OMX/cmex/m/n/7 

external@font ->cmex10

font@name ->OMX/cmex/m/n/7 

f@encoding ->OMX

f@family ->cmex

OMX+cmex ->

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><->sfixed*cmex10 

<->sfixed*cmex10 ->

ssf@size ->5

pickup@font ->expandafter ifx font@name relax define@newfont fi 

font@name ->OMX/cmex/m/n/5 

define@newfont ->begingroup let typeout @font@info escapechar m@ne expandafter 
expandafter expandafter split@name expandafter string font@name @nil try@load@f
ontshape expandafter ifx csname curr@fontshape endcsname relax wrong@fontshape 
else extract@font fi endgroup 

font@name ->OMX/cmex/m/n/5 

split@name #1/#2/#3/#4/#5@nil ->def f@encoding {#1}def f@family {#2}def f@serie
s {#3}def f@shape {#4}def f@size {#5}
#1<-OMX
#2<-cmex
#3<-m
#4<-n
#5<-5

try@load@fontshape ->expandafter ifx csname f@encoding +f@family endcsname rela
x @font@info {Trying to load font information for f@encoding +f@family }global 
expandafter let csname f@encoding +f@family endcsname @empty nfss@catcodes let 
nfss@catcodes relax edef reserved@a {lowercase {noexpand InputIfFileExists {f@e
ncoding f@family .fd}}}reserved@a relax {@input@ {f@encoding f@family .fd}}fi 

f@encoding ->OMX

f@family ->cmex

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

extract@font ->get@external@font global expandafter font font@name external@fon
t relax font@name relax csname f@encoding +f@family endcsname csname curr@fonts
hape endcsname relax 

get@external@font ->let external@font @empty edef font@info {expandafter expand
after expandafter string csname curr@fontshape endcsname }try@size@range ifx ex
ternal@font @empty try@size@substitution ifx external@font @empty @latex@error 
{Font expandafter string font@name space not found}@eha error@fontshape get@ext
ernal@font fi fi 

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><->sfixed*cmex10 

try@size@range ->expandafter extract@rangefontinfo font@info <-*>@nil <@nnil 

font@info -><->sfixed*cmex10

extract@rangefontinfo #1<#2>->is@range #2->@nil #2>
#1<-
#2<--

is@range #1-#2@nil ->if >#2expandafter check@single else expandafter check@rang
e fi 
#1<-
#2<-->

check@range #1-#2>#3<#4@nnil ->ifnot@nil {#3}{def reserved@f {extract@rangefont
info <#4@nnil }upper@bound 0#2p@ ifdim upper@bound =z@ upper@bound maxdimen fi 
ifdim f@size p@ <upper@bound lower@bound 0#1p@ ifdim f@size p@ <lower@bound els
e set@simple@size@args #3<#4@nnil execute@size@function sizefn@info ifx externa
l@font @empty else let reserved@f @empty fi fi fi reserved@f }
#1<-
#2<-
#3<-sfixed*cmex10
#4<--*>@nil <

ifnot@nil #1->def reserved@a {#1}ifx reserved@a @nnil expandafter @gobble else 
expandafter @firstofone fi 
#1<-sfixed*cmex10

@firstofone #1->#1
#1<-def reserved@f {extract@rangefontinfo <-*>@nil <@nnil }upper@bound 0p@ ifdi
m upper@bound =z@ upper@bound maxdimen fi ifdim f@size p@ <upper@bound lower@bo
und 0p@ ifdim f@size p@ <lower@bound else set@simple@size@args sfixed*cmex10<-*
>@nil <@nnil execute@size@function sizefn@info ifx external@font @empty else le
t reserved@f @empty fi fi fi reserved@f 

f@size ->5

f@size ->5

set@simple@size@args #1<->if <#1<expandafter remove@angles else extract@sizefn 
#1*@nil expandafter remove@to@nnil fi 
#1<-sfixed*cmex10

extract@sizefn #1*#2@nil ->if >#2>set@size@funct@args #1@nil let sizefn@info @e
mpty else expandafter set@size@funct@args remove@star #2@nil def sizefn@info {#
1}fi 
#1<-sfixed
#2<-cmex10*

remove@star #1*->#1
#1<-cmex10

set@size@funct@args ->@ifnextchar [set@size@funct@args@ {set@size@funct@args@ [
]}

@ifnextchar #1#2#3->let reserved@d =#1def reserved@a {#2}def reserved@b {#3}fut
urelet @let@token @ifnch 
#1<-[
#2<-set@size@funct@args@ 
#3<-set@size@funct@args@ []

@ifnch ->ifx @let@token @sptoken let reserved@c @xifnch else ifx @let@token res
erved@d let reserved@c reserved@a else let reserved@c reserved@b fi fi reserved
@c 

reserved@c ->set@size@funct@args@ []

set@size@funct@args@ [#1]#2@nil ->def mandatory@arg {#2}def optional@arg {#1}
#1<-
#2<-cmex10

remove@to@nnil #1@nnil ->
#1<--*>@nil <

execute@size@function #1->csname s@fct@#1endcsname 
#1<-sizefn@info 

sizefn@info ->sfixed

s@fct@sfixed ->fixed@sfcnt @font@info 

fixed@sfcnt #1->ifx optional@arg @empty let external@font mandatory@arg else ed
ef external@font {mandatory@arg space atoptional@arg pt}fi #1{Externalspace fon
tspace `external@font 'space loadedspace forspace sizeMessageBreak <f@size >}
#1<-@font@info 

@font@info #1->GenericInfo {(Font)@spaces @spaces @spaces space space }{LaTeX F
ont Info: space space space #1}
#1<-Externalspace fontspace `external@font 'space loadedspace forspace sizeMess
ageBreak <f@size >

GenericInfo ->protect GenericInfo  

GenericInfo  #1#2->begingroup def MessageBreak {
#1}set@display@protect immediate write m@ne {#2on@line .}endgroup 
#1<-(Font)@spaces @spaces @spaces space space 
#2<-LaTeX Font Info: space space space Externalspace fontspace `external@font '
space loadedspace forspace sizeMessageBreak <f@size >

set@display@protect ->let protect string 

space -> 

space -> 

space -> 

space -> 

space -> 

external@font ->cmex10

space -> 

space -> 

space -> 

MessageBreak ->
(Font)@spaces @spaces @spaces space space 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

@spaces ->space space space space 

space -> 

space -> 

space -> 

space -> 

space -> 

space -> 

f@size ->5

on@line -> on input line the inputlineno 
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 7.

reserved@f ->

font@name ->OMX/cmex/m/n/5 

external@font ->cmex10

font@name ->OMX/cmex/m/n/5 

f@encoding ->OMX

f@family ->cmex

OMX+cmex ->

curr@fontshape ->f@encoding /f@family /f@series /f@shape 

f@encoding ->OMX

f@family ->cmex

f@series ->m

f@shape ->n

OMX/cmex/m/n -><->sfixed*cmex10 

<->sfixed*cmex10 ->

math@fonts ->textfont symoperators OT1/cmr/m/n/10 scriptfont symoperators OT1/c
mr/m/n/7 scriptscriptfont symoperators OT1/cmr/m/n/5 textfont symletters OML/cm
m/m/it/10 scriptfont symletters OML/cmm/m/it/7 scriptscriptfont symletters OML/
cmm/m/it/5 textfont symsymbols OMS/cmsy/m/n/10 scriptfont symsymbols OMS/cmsy/m
/n/7 scriptscriptfont symsymbols OMS/cmsy/m/n/5 

textfont@name ->OMX/cmex/m/n/10 

scriptfont@name ->OMX/cmex/m/n/7 

font@name ->OMX/cmex/m/n/5 

math@fonts ->textfont symoperators OT1/cmr/m/n/10 scriptfont symoperators OT1/c
mr/m/n/7 scriptscriptfont symoperators OT1/cmr/m/n/5 textfont symletters OML/cm
m/m/it/10 scriptfont symletters OML/cmm/m/it/7 scriptscriptfont symletters OML/
cmm/m/it/5 textfont symsymbols OMS/cmsy/m/n/10 scriptfont symsymbols OMS/cmsy/m
/n/7 scriptscriptfont symsymbols OMS/cmsy/m/n/5 textfont symlargesymbols OMX/cm
ex/m/n/10 scriptfont symlargesymbols OMX/cmex/m/n/7 scriptscriptfont symlargesy
mbols OMX/cmex/m/n/5 

\check@mathfonts ->\ifx \glb@currsize \f@size \else \glb@settings \init@restore
@glb@settings \fi \let \curr@math@size \f@size \def \init@restore@glb@settings 
{\aftergroup \restglb@settings }\aftergroup \mv@normal@reset \aftergroup \mv@bo
ld@reset 

\end ->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter 
\expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \exp
andafter \z@ \expandafter \protect \fi \end  

\end  #1->\romannumeral \IfHookEmptyTF {env/#1/end}{\expandafter \z@ }{\z@ \Use
Hook {env/#1/end}}\csname end#1\endcsname \@checkend {#1}\expandafter \endgroup
 \if@endpe \@doendpe \fi \UseHook {env/#1/after}\if@ignore \@ignorefalse \ignor
espaces \fi 
#1<-eqnarray

\IfHookEmptyTF #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF {\pr
op_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {
__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: }{\p
rg_return_false: }}{\prg_return_true: }\exp_end: 
#1<-env/eqnarray/end

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-env/eqnarray/end

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_env/eqnarray/end_code_prop

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_env/eqnarray/end_code_prop\cs_end
: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_env/eqnarray/end_code_prop
}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel env/eqnarray/end}}{\t
l_if_empty_p:c {__hook_next env/eqnarray/end}}}{\prg_return_true: }{\prg_return
_false: }
#2<-\prg_return_true: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\expandafter \z@ 
#2<-\z@ \UseHook {env/eqnarray/end}

\endeqnarray ->\@@eqncr \egroup \global \advance \c@equation \m@ne $$\@ignoretr
ue 

\@@eqncr ->\let \reserved@a \relax \ifcase \@eqcnt \def \reserved@a {& & &}\or 
\def \reserved@a {& &}\or \def \reserved@a {&}\else \let \reserved@a \@empty \@
latex@error {Too many columns in eqnarray environment}\@ehc \fi \reserved@a \if
@eqnsw \@eqnnum \stepcounter {equation}\fi \global \@eqnswtrue \global \@eqcnt 
\z@ \cr 

\reserved@a ->& & &

\@ignorefalse ->\global \let \if@ignore \iffalse 

\mv@normal@reset ->

\mv@bold@reset ->

\check@mathfonts ->\ifx \glb@currsize \f@size \else \glb@settings \init@restore
@glb@settings \fi \let \curr@math@size \f@size \def \init@restore@glb@settings 
{\aftergroup \restglb@settings }\aftergroup \mv@normal@reset \aftergroup \mv@bo
ld@reset 

\@ignorefalse ->\global \let \if@ignore \iffalse 

\mv@normal@reset ->

\mv@bold@reset ->

\check@mathfonts ->\ifx \glb@currsize \f@size \else \glb@settings \init@restore
@glb@settings \fi \let \curr@math@size \f@size \def \init@restore@glb@settings 
{\aftergroup \restglb@settings }\aftergroup \mv@normal@reset \aftergroup \mv@bo
ld@reset 

\@ignorefalse ->\global \let \if@ignore \iffalse 

\mv@normal@reset ->

\mv@bold@reset ->

\@eqnnum ->{\normalfont \normalcolor (\theequation )}

\hb@xt@ ->\hbox to

\normalfont ->\protect \normalfont  

\normalfont  ->\fontencoding \encodingdefault \edef \f@family {\familydefault }
\edef \f@series {\seriesdefault }\edef \f@shape {\shapedefault }\let \delayed@f
@adjustment \@empty \UseHook {normalfont}\@defaultfamilyhook \selectfont 

\fontencoding ->\protect \fontencoding  

\fontencoding  #1->\expandafter \ifx \csname T@#1\endcsname \relax \@latex@erro
r {Encoding scheme `#1' unknown}\@eha \else \edef \f@encoding {#1}\ifx \cf@enco
ding \f@encoding \let \enc@update \relax \else \let \enc@update \@@enc@update \
fi \fi 
#1<-\encodingdefault 

\encodingdefault ->OT1

\encodingdefault ->OT1

\familydefault ->\rmdefault 

\rmdefault ->cmr

\seriesdefault ->m

\shapedefault ->n

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-normalfont

\__hook normalfont ->\__hook_toplevel normalfont \__hook_next normalfont 

\__hook_toplevel normalfont ->

\__hook_next normalfont ->

\@defaultfamilyhook ->

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\theequation ->\theequation@prefix \arabic {equation}

\theequation@prefix ->

\arabic #1->\expandafter \@arabic \csname c@#1\endcsname 
#1<-equation

\@arabic #1->\number #1
#1<-\c@equation 

\stepcounter #1->\addtocounter {#1}\@ne \begingroup \let \@elt \@stpelt \csname
 cl@#1\endcsname \endgroup 
#1<-equation

\addtocounter #1#2->\@ifundefined {c@#1}{\@nocounterr {#1}}{\global \advance \c
sname c@#1\endcsname #2\relax }
#1<-equation
#2<-\@ne 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-c@equation

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-c@equation

\@secondoftwo #1#2->#2
#1<-\@nocounterr {equation}
#2<-\global \advance \csname c@equation\endcsname \@ne \relax 

\cl@equation ->

\@eqnswtrue ->\let \if@eqnsw \iftrue 

\@ignoretrue ->\global \let \if@ignore \iftrue 

\mv@normal@reset ->

\mv@bold@reset ->

\@ignoretrue ->\global \let \if@ignore \iftrue 

\@checkend #1->\def \reserved@a {#1}\ifx \reserved@a \@currenvir \else \@badend
 {#1}\fi 
#1<-eqnarray

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/eqnarray/after

\@ignorefalse ->\global \let \if@ignore \iffalse 

\end ->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter 
\expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \exp
andafter \z@ \expandafter \protect \fi \end  

\end  #1->\romannumeral \IfHookEmptyTF {env/#1/end}{\expandafter \z@ }{\z@ \Use
Hook {env/#1/end}}\csname end#1\endcsname \@checkend {#1}\expandafter \endgroup
 \if@endpe \@doendpe \fi \UseHook {env/#1/after}\if@ignore \@ignorefalse \ignor
espaces \fi 
#1<-document

\IfHookEmptyTF #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF {\pr
op_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {
__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: }{\p
rg_return_false: }}{\prg_return_true: }\exp_end: 
#1<-env/document/end

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-env/document/end

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_env/document/end_code_prop

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_env/document/end_code_prop\cs_end
: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_env/document/end_code_prop
}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel env/document/end}}{\t
l_if_empty_p:c {__hook_next env/document/end}}}{\prg_return_true: }{\prg_return
_false: }
#2<-\prg_return_true: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\expandafter \z@ 
#2<-\z@ \UseHook {env/document/end}

\enddocument ->\@kernel@before@enddocument \UseOneTimeHook {enddocument}\@kerne
l@after@enddocument \@checkend {document}\clearpage \UseOneTimeHook {enddocumen
t/afterlastpage}\@kernel@after@enddocument@afterlastpage \begingroup \if@filesw
 \immediate \closeout \@mainaux \let \@setckpt \@gobbletwo \let \@newl@bel \@te
stdef \@tempswafalse \makeatletter \@@input \jobname .aux \fi \UseOneTimeHook {
enddocument/afteraux}\UseOneTimeHook {enddocument/info}\endgroup \UseOneTimeHoo
k {enddocument/end}\deadcycles \z@ \@@end 

\@kernel@before@enddocument ->\par 

\par ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D \hoo
k_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_compa
re:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_use:
n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode}{en
d}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\mode_if_inner:F ->\if_mode_inner: \__prg_F_true:w \fi: \use:n 

\use:n #1->#1
#1<-\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@end \mode_if_horizo
ntal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi:
 \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after }{\msg_error:nnnn
 {hooks}{para-mode}{end}{horizontal}}

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-para/end

\__hook para/end ->\__hook_toplevel para/end \__hook_next para/end 

\__hook_toplevel para/end ->

\__hook_next para/end ->

\@kernel@after@para@end ->

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex
_par:D \hook_use:n {para/after}\@kernel@after@para@after 
#2<-\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-para/after

\__hook para/after ->\__hook_toplevel para/after \__hook_next para/after 

\__hook_toplevel para/after ->

\__hook_next para/after ->

\@kernel@after@para@after ->

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-enddocument

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-enddocument

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-enddocument

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument\cs_end: \scan_stop: \p
rg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_enddocument_reve
rsed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg_retur
n_false: \fi: 
#2<-\prg_return_false: 

\g__hook_enddocument_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {enddocument}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {enddocument}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {enddocument}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {enddocument}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {enddocument}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {enddocument}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {enddocument}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {enddocument}}\__hook_parse_dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {enddocument}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {enddocument}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {enddocument}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {enddocument}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {enddocument}\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {enddocument}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {enddocument}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {enddocument}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {enddocument}}{.}{\__hook_currname_or_default: }{\_
_hook_parse_dot_label:w \use:n {enddocument}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {enddocument}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {enddocument}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {enddocument}}}{\__hook_par
se_dot_label_cleanup:w \use:n {enddocument}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {enddocument}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {enddocument}./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {enddocument}

\use:n #1->#1
#1<-enddocument

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-enddocument

\__hook_preamble_hook:n #1->
#1<-enddocument

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-enddocument

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_enddocument_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_enddocument_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-enddocument

\__hook enddocument ->\class@enddocumenthook \rvtx@enddocument@patch {}\write@b
ibliographystyle \ifNAT@stdbst \if@filesw \immediate \write \@auxout {\string \
providecommand \string \NAT@force@numbers {}\string \NAT@force@numbers }\fi \fi
 \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multiple \__hook_t
oplevel enddocument \__hook_next enddocument 

\class@enddocumenthook ->\auto@bib \printfigures \relax \printtables \relax \pr
intvideos \relax \test@amsmath@ver \let \clearpage \clear@document 

\auto@bib ->\@ifx@empty \@FMN@list {\footinbib@sw {\@ifnum {\csname c@\@mpfn \e
ndcsname >\z@ }{\true@sw }{\test@bbl@sw }}{\test@bbl@sw }}{\true@sw }{\bibliogr
aphy {}}{}

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@FMN@list 

\true@sw #1#2->#1
#1<-\footinbib@sw {\@ifnum {\csname c@\@mpfn \endcsname >\z@ }{\true@sw }{\test
@bbl@sw }}{\test@bbl@sw }
#2<-\true@sw 

\footinbib@sw #1#2->#1
#1<-\@ifnum {\csname c@\@mpfn \endcsname >\z@ }{\true@sw }{\test@bbl@sw }
#2<-\test@bbl@sw 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\csname c@\@mpfn \endcsname >\z@ 

\@mpfn ->footnote

\false@sw #1#2->#2
#1<-\true@sw 
#2<-\test@bbl@sw 

\test@bbl@sw ->\setbox \z@ \vbox \bgroup \let \providecommand \providecommand@j
@nk \let \bibfield \@gobbletwo \let \bibinfo \@gobbletwo \let \translation \@go
bble \let \BibitemOpen \@empty \let \bibitemStop \@empty \let \bibitemNoStop \@
empty \let \EOS \@empty \let \BibitemShut \@gobble \let \bibAnnoteFile \@gobble
two \let \bibAnnote \@gobblethree \let \textbf \@gobble \let \emph \@gobble \@b
ooleanfalse \bibitem@sw \let \bibitem \bibitem@set \auto@bib@innerbib \bibitem@
sw {\aftergroup \true@sw }{\aftergroup \false@sw }\egroup 

\@booleanfalse #1->\let #1\false@sw 
#1<-\bibitem@sw 

\auto@bib@innerbib ->\begingroup \let@environment {thebibliography}{thebibliogr
aphy@nogroup}\bibliography {}\endgroup 

\let@environment #1#2->\expandafter \let \csname #1\expandafter \endcsname \csn
ame #2\endcsname \expandafter \let \csname end#1\expandafter \endcsname \csname
 end#2\endcsname 
#1<-thebibliography
#2<-thebibliography@nogroup

\bibliography #1->\auto@bib@empty \begingroup \let \auto@bib@innerbib \@empty \
@ifx@empty {\pre@bibdata }{\bibliography@latex {#1}}{\@if@empty {#1}{\expandaft
er \bibliography@latex \expandafter {\pre@bibdata }}{\expandafter \bibliography
@latex \expandafter {\pre@bibdata ,#1}}}\endgroup 
#1<-

\auto@bib@empty ->\let \auto@bib \@empty 

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\pre@bibdata 

\false@sw #1#2->#2
#1<-\bibliography@latex {}
#2<-\@if@empty {}{\expandafter \bibliography@latex \expandafter {\pre@bibdata }
}{\expandafter \bibliography@latex \expandafter {\pre@bibdata ,}}

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-

\true@sw #1#2->#1
#1<-\expandafter \bibliography@latex \expandafter {\pre@bibdata }
#2<-\expandafter \bibliography@latex \expandafter {\pre@bibdata ,}

\pre@bibdata ->\jobname \bibdata@app 

\bibliography@latex #1->\if@filesw \immediate \write \@auxout {\string \bibdata
 {\zap@space #1 \@empty }}\fi \@input@ {\jobname .bbl}
#1<-\jobname \bibdata@app 

\zap@space #1 #2->#1\ifx #2\@empty \else \expandafter \zap@space \fi #2
#1<-\jobname \bibdata@app 
#2<-\@empty 

\bibdata@app ->Notes

\@empty ->

\@input@ #1->\InputIfFileExists {#1}{}{\typeout {No file #1.}}
#1<-\jobname .bbl

\InputIfFileExists ->\protect \InputIfFileExists  

\InputIfFileExists  #1#2->\IfFileExists {#1}{\@expl@@@filehook@file@push@@ \@fi
lehook@set@CurrentFile \expandafter \@swaptwoargs \expandafter {\expandafter \@
input@file@exists@with@hooks \expandafter {\@filef@und }}{#2}\@expl@@@filehook@
file@pop@@ }
#1<-\jobname .bbl
#2<-

\IfFileExists ->\protect \IfFileExists  

\IfFileExists  #1->\set@curr@file {#1}\expandafter \IfFileExists@ \expandafter 
{\@curr@file }
#1<-\jobname .bbl

\set@curr@file ->\begingroup \set@curr@file@aux 

\set@curr@file@aux #1->\escapechar \m@ne \let \protect \string \edef ~{\string 
~}\expandafter \def \csname \expandafter \endcsname \expandafter {\csname \endc
sname }\@expl@@@filehook@if@no@extension@@nTF {#1}{\@tempswatrue }{\@tempswafal
se }\@kernel@make@file@csname \@curr@file \@expl@@@filehook@resolve@file@subst@
@w {#1}\@expl@@@filehook@if@file@replaced@@TF {\@kernel@make@file@csname \@curr
@file@reqd \@expl@@@filehook@normalize@file@name@@w {#1}\if@tempswa \@expl@@@fi
lehook@drop@extension@@N \@curr@file@reqd \fi }{\if@tempswa \@expl@@@filehook@d
rop@extension@@N \@curr@file \fi \global \let \@curr@file@reqd \@curr@file }\@e
xpl@@@filehook@clear@replacement@flag@@ \endgroup 
#1<-\jobname .bbl

@expl@@@filehook@if@no@extension@@nTF #1->exp_args:Ne tl_if_empty:nTF {file_par
se_full_name_apply:nN {#1}use_iii:nnn }
#1<-jobname .bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-tl_if_empty:nTF 
#2<-file_parse_full_name_apply:nN {jobname .bbl}use_iii:nnn 

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-jobname .bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {jobname .bbl}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-jobname .bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {jobname .bbl}
}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {jobname .bbl}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-jobname .bbl

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.bbl 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.bbl

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.bbl}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.bbl

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun
#3<-bbl
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-bbl

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}bbl{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.bbls__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.bbl}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.bbl

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.bbl

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.bbl
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-tl2022_rerun.bbl

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun.bbl
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}tl2022_rerun.bbl.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/tl2022_rerun.bbl}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun
#3<-bbl.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-bbl.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {tl2022_rerun}{__file_parse_full_name_ti
dy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{}}}{__file_parse
_full_name_tidy:nnnN {}{.tl2022_rerun}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun}bbl.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.tl2022_rerun
#2<-bbl
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.tl2022_rerun}{tl_if_empty:nTF {bbl}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.bbl}{}}}{__file_parse_full
_name_tidy:nnnN {.tl2022_rerun}{.bbl}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun.bbl}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.tl2022_rerun

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {bbl}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.bbl}{}}
#2<-__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{.bbl}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.tl2022_rerun
#2<-.bbl
#3<-
#4<-use_iii:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-use_iii:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .tl2022_rerunprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

use_iii:nnn #1#2#3->#3
#1<-
#2<-tl2022_rerun
#3<-.bbl

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.bbl

use_ii:nn #1#2->#2
#1<-@tempswatrue 
#2<-@tempswafalse 

@tempswafalse ->let if@tempswa iffalse 

@kernel@make@file@csname #1#2#3->xdef #1{expandafter @set@curr@file@aux csname 
expandafter #2@firstofone #3@nil endcsname }
#1<-@curr@file 
#2<-@expl@@@filehook@resolve@file@subst@@w 
#3<-jobname .bbl

@firstofone #1->#1
#1<-jobname 

@expl@@@filehook@resolve@file@subst@@w #1@nil ->__filehook_file_parse_full_name
:nN {#1}__filehook_file_subst_begin:nnn 
#1<-jobname .bbl

__filehook_file_parse_full_name:nN #1->exp_args:Nf file_parse_full_name_apply:n
N {exp_args:Nf __filehook_full_name:nn {file_full_name:n {#1}}{#1}}
#1<-jobname .bbl

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-file_parse_full_name_apply:nN 
#2<-exp_args:Nf __filehook_full_name:nn {file_full_name:n {jobname .bbl}}{jobna
me .bbl}

exp_end_continue_f:w ->`^^@

exp_args:Nf #1#2->exp_after:wN #1exp_after:wN {exp:w exp_end_continue_f:w #2}
#1<-__filehook_full_name:nn 
#2<-file_full_name:n {jobname .bbl}

exp_end_continue_f:w ->`^^@

file_full_name:n #1->exp_args:Ne __file_full_name:n {__kernel_file_name_sanitiz
e:n {#1}}
#1<-jobname .bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_full_name:n 
#2<-__kernel_file_name_sanitize:n {jobname .bbl}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-jobname .bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {jobname .bbl}
}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {jobname .bbl}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-jobname .bbl

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.bbl 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.bbl

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.bbl}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.bbl

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun
#3<-bbl
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-bbl

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}bbl{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.bbls__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.bbl}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.bbl

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.bbl

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.bbl
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_full_name:n #1->tl_if_blank:nF {#1}{exp_args:Nne __file_full_name_aux:nn
 {#1}{__file_size:n {#1}}}
#1<-tl2022_rerun.bbl

tl_if_blank:nF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none:
n #1?}scan_stop: __prg_F_true:w fi: use:n 
#1<-tl2022_rerun.bbl

use_none:n #1->
#1<-t

use:n #1->#1
#1<-exp_args:Nne __file_full_name_aux:nn {tl2022_rerun.bbl}{__file_size:n {tl20
22_rerun.bbl}}

exp_args:Nne #1#2#3->tex_expanded:D {exp_not:N #1{exp_not:n {#2}}{__kernel_exp_
not:w tex_expanded:D {{#3}}}}
#1<-__file_full_name_aux:nn 
#2<-tl2022_rerun.bbl
#3<-__file_size:n {tl2022_rerun.bbl}

__file_full_name_aux:nn #1#2->tl_if_blank:nTF {#2}{seq_map_tokens:Nn l_file_sea
rch_path_seq {__file_full_name_aux:Nnn seq_map_break:n {#1}}cs_if_exist:NT inpu
t@path {tl_map_tokens:Nn input@path {__file_full_name_aux:Nnn tl_map_break:n {#
1}}}__file_name_end: }{__file_ext_check:nn {#1}{#2}}
#1<-tl2022_rerun.bbl
#2<-1982

tl_if_blank:nTF #1->if:w scan_stop: __kernel_tl_to_str:w exp_after:wN {use_none
:n #1?}scan_stop: __prg_TF_true:w fi: use_ii:nn 
#1<-1982

use_none:n #1->
#1<-1

use_ii:nn #1#2->#2
#1<-seq_map_tokens:Nn l_file_search_path_seq {__file_full_name_aux:Nnn seq_map_
break:n {tl2022_rerun.bbl}}cs_if_exist:NT input@path {tl_map_tokens:Nn input@pa
th {__file_full_name_aux:Nnn tl_map_break:n {tl2022_rerun.bbl}}}__file_name_end
: 
#2<-__file_ext_check:nn {tl2022_rerun.bbl}{1982}

__file_ext_check:nn #1#2->__file_ext_check:nnw {#2}{/}#1/q__file_nil /s__file_s
top 
#1<-tl2022_rerun.bbl
#2<-1982

__file_ext_check:nnw #1#2#3/#4/#5s__file_stop ->__file_quark_if_nil:nTF {#4}{ex
p_args:No __file_ext_check:nnnw {use_none:n #2}{#1}{#3}#3.q__file_nil .s__file_
stop }{__file_ext_check:nnw {#1}{#2#3/}#4/#5s__file_stop }
#1<-1982
#2<-/
#3<-tl2022_rerun.bbl
#4<-q__file_nil 
#5<-

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-q__file_nil 

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}q__file_nil {}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!q__file_nil ?

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-exp_args:No __file_ext_check:nnnw {use_none:n /}{1982}{tl2022_rerun.bbl}tl2
022_rerun.bbl.q__file_nil .s__file_stop 
#2<-__file_ext_check:nnw {1982}{/tl2022_rerun.bbl/}q__file_nil /s__file_stop 

exp_args:No #1#2->exp_after:wN #1exp_after:wN {#2}
#1<-__file_ext_check:nnnw 
#2<-use_none:n /

use_none:n #1->
#1<-/

__file_ext_check:nnnw #1#2#3#4.#5.#6s__file_stop ->__file_quark_if_nil:nTF {#5}
{__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-1982
#3<-tl2022_rerun.bbl
#4<-tl2022_rerun
#5<-bbl
#6<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-bbl

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}bbl{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-__file_ext_check:nnn {tl2022_rerun.bbl.tex}{tl2022_rerun.bbl}{1982}
#2<-tl2022_rerun.bbl

__filehook_full_name:nn #1#2->tl_if_empty:nTF {#1}{tl_trim_spaces:n {#2}}{tl_tr
im_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-jobname .bbl

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-tl2022_rerun.bbl

use_ii:nn #1#2->#2
#1<-tl_trim_spaces:n {jobname .bbl}
#2<-tl_trim_spaces:n {tl2022_rerun.bbl}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.bbl

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.bbl

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.bbl
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

file_parse_full_name_apply:nN #1->exp_args:Ne __file_parse_full_name_auxi:nN {_
_kernel_file_name_sanitize:n {#1}}
#1<-tl2022_rerun.bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_parse_full_name_auxi:nN 
#2<-__kernel_file_name_sanitize:n {tl2022_rerun.bbl}

__kernel_file_name_sanitize:n #1->exp_args:Ne __file_name_trim_spaces:n {exp_ar
gs:Ne __file_name_strip_quotes:n {__file_name_expand:n {#1}}}
#1<-tl2022_rerun.bbl

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_trim_spaces:n 
#2<-exp_args:Ne __file_name_strip_quotes:n {__file_name_expand:n {tl2022_rerun.
bbl}}

exp_args:Ne #1#2->exp_after:wN #1tex_expanded:D {{#2}}
#1<-__file_name_strip_quotes:n 
#2<-__file_name_expand:n {tl2022_rerun.bbl}

__file_name_expand:n #1->exp_after:wN __file_name_expand_cleanup:Nw cs:w __file
_name=#1cs_end: __file_name_expand_end: 
#1<-tl2022_rerun.bbl

__file_name_expand_cleanup:Nw #1#2__file_name_expand_end: ->tl_if_empty:nF {#2}
{__file_name_expand_error:Nw #2__file_name_expand_end: }exp_after:wN __file_nam
e_expand_cleanup:w token_to_str:N #1
#1<-__file_name=tl2022_rerun.bbl 
#2<-

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-__file_name_expand_error:Nw __file_name_expand_end: 

__file_name_expand_cleanup:w #1__file_name=->
#1<-

__file_name_strip_quotes:n #1->__file_name_strip_quotes:nw {0}#1"q__file_recurs
ion_tail "q__file_recursion_stop {#1}
#1<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.bbl

__file_name_strip_quotes:nw #1#2"->if_meaning:w q__file_recursion_tail #2__file
_name_strip_quotes_end:wnwn fi: #2__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-q__file_recursion_tail 

__file_name_strip_quotes_end:wnwn fi: #1__file_name_strip_quotes:nw #2q__file_r
ecursion_stop #3->fi: int_if_odd:nT {#2}{msg_expandable_error:nnn {kernel}{unba
lanced-quote-in-filename}{#3}}
#1<-q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.bbl

int_if_odd:nT #1->if_int_odd:w __int_eval:w #1__int_eval_end: __prg_T_true:w fi
: use_none:n 
#1<-0+1+1

use_none:n #1->
#1<-msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_reru
n.bbl}

__file_name_trim_spaces:n #1->__file_name_trim_spaces:nw {#1}#1.q__file_nil .s_
_file_stop 
#1<-tl2022_rerun.bbl

__file_name_trim_spaces:nw #1#2.#3.#4s__file_stop ->__file_quark_if_nil:nTF {#3
}{tl_trim_spaces_apply:nN {#1s__file_stop }__file_name_trim_spaces_aux:n }{tl_t
rim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun
#3<-bbl
#4<-q__file_nil .

__file_quark_if_nil:nTF #1->__quark_if_empty_if:o {__file_if_quark_nil:w {}#1{}
?!q__file_nil ??!}__prg_TF_true:w fi: use_ii:nn 
#1<-bbl

__quark_if_empty_if:o #1->exp_after:wN if_meaning:w exp_after:wN q_nil __kernel
_tl_to_str:w exp_after:wN {#1}q_nil 
#1<-__file_if_quark_nil:w {}bbl{}?!q__file_nil ??!

__file_if_quark_nil:w #1q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

use_ii:nn #1#2->#2
#1<-tl_trim_spaces_apply:nN {tl2022_rerun.bbls__file_stop }__file_name_trim_spa
ces_aux:n 
#2<-tl_trim_spaces:n {tl2022_rerun.bbl}

tl_trim_spaces:n #1->__tl_trim_spaces:nn {__tl_trim_mark: #1}{__kernel_exp_not:
w exp_after:wN }
#1<-tl2022_rerun.bbl

__tl_trim_spaces:nn #1->__tl_trim_spaces_auxi:w #1s__tl_nil __tl_trim_mark:  {}
__tl_trim_mark: __tl_trim_spaces_auxii:w __tl_trim_spaces_auxiii:w  s__tl_nil _
_tl_trim_spaces_auxiv:w s__tl_stop 
#1<-__tl_trim_mark: tl2022_rerun.bbl

__tl_trim_spaces_auxi:w #1__tl_trim_mark:  #2__tl_trim_mark: #3->#3__tl_trim_sp
aces_auxi:w __tl_trim_mark: #2__tl_trim_mark:  {#1}
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 
#2<-
#3<-__tl_trim_spaces_auxii:w 

__tl_trim_spaces_auxii:w __tl_trim_spaces_auxi:w __tl_trim_mark: __tl_trim_mark
: #1->__tl_trim_spaces_auxiii:w #1
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil 

__tl_trim_spaces_auxiii:w #1 s__tl_nil #2->#2#1s__tl_nil __tl_trim_spaces_auxii
i:w 
#1<-__tl_trim_mark: tl2022_rerun.bbls__tl_nil __tl_trim_spaces_auxiii:w 
#2<-__tl_trim_spaces_auxiv:w 

__tl_trim_spaces_auxiv:w #1s__tl_nil #2s__tl_stop #3->#3{#1}
#1<-__tl_trim_mark: tl2022_rerun.bbl
#2<-__tl_trim_spaces_auxiii:w s__tl_nil __tl_trim_spaces_auxiii:w 
#3<-__kernel_exp_not:w exp_after:wN 

__tl_trim_mark: ->

__file_parse_full_name_auxi:nN #1->__file_parse_full_name_area:nw {}#1/s__file_
stop 
#1<-tl2022_rerun.bbl

__file_parse_full_name_area:nw #1#2/#3s__file_stop ->tl_if_empty:nTF {#3}{__fil
e_parse_full_name_base:nw {}#2.s__file_stop {#1}}{__file_parse_full_name_area:n
w {#1/#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun.bbl
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-__file_parse_full_name_base:nw {}tl2022_rerun.bbl.s__file_stop {}
#2<-__file_parse_full_name_area:nw {/tl2022_rerun.bbl}s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-
#2<-tl2022_rerun
#3<-bbl.

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-bbl.

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {}{tl_if_empty:nTF {tl2022_rerun}{__file_parse_full_name_ti
dy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{}}}{__file_parse
_full_name_tidy:nnnN {}{.tl2022_rerun}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun}bbl.s__file_stop 

__file_parse_full_name_base:nw #1#2.#3s__file_stop ->tl_if_empty:nTF {#3}{tl_if
_empty:nTF {#1}{tl_if_empty:nTF {#2}{__file_parse_full_name_tidy:nnnN {}{}}{__f
ile_parse_full_name_tidy:nnnN {.#2}{}}}{__file_parse_full_name_tidy:nnnN {#1}{.
#2}}}{__file_parse_full_name_base:nw {#1.#2}#3s__file_stop }
#1<-.tl2022_rerun
#2<-bbl
#3<-

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-

__prg_TF_true:w fi: use_ii:nn ->fi: use_i:nn 

use_i:nn #1#2->#1
#1<-tl_if_empty:nTF {.tl2022_rerun}{tl_if_empty:nTF {bbl}{__file_parse_full_nam
e_tidy:nnnN {}{}}{__file_parse_full_name_tidy:nnnN {.bbl}{}}}{__file_parse_full
_name_tidy:nnnN {.tl2022_rerun}{.bbl}}
#2<-__file_parse_full_name_base:nw {.tl2022_rerun.bbl}s__file_stop 

tl_if_empty:nTF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_TF_true:w 
fi: use_ii:nn 
#1<-.tl2022_rerun

use_ii:nn #1#2->#2
#1<-tl_if_empty:nTF {bbl}{__file_parse_full_name_tidy:nnnN {}{}}{__file_parse_f
ull_name_tidy:nnnN {.bbl}{}}
#2<-__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{.bbl}

__file_parse_full_name_tidy:nnnN #1#2#3#4->exp_args:Nee #4{str_if_eq:nnF {#3}{/
}{use_none:n }#3prg_do_nothing: }{use_none:n #1prg_do_nothing: }{#2}
#1<-.tl2022_rerun
#2<-.bbl
#3<-
#4<-__filehook_file_subst_begin:nnn 

exp_args:Nee #1#2#3->tex_expanded:D {exp_not:N #1{__kernel_exp_not:w tex_expand
ed:D {{#2}}}{__kernel_exp_not:w tex_expanded:D {{#3}}}}
#1<-__filehook_file_subst_begin:nnn 
#2<-str_if_eq:nnF {}{/}{use_none:n }prg_do_nothing: 
#3<-use_none:n .tl2022_rerunprg_do_nothing: 

str_if_eq:nnF #1#2->if:w 0__str_if_eq:nn {exp_not:n {#1}}{exp_not:n {#2}}__prg_
F_true:w fi: use:n 
#1<-
#2<-/

use:n #1->#1
#1<-use_none:n 

use_none:n #1->
#1<-prg_do_nothing: 

use_none:n #1->
#1<-.

prg_do_nothing: ->

__filehook_file_subst_begin:nnn #1#2#3->__filehook_file_subst_tortoise_hare:nn 
{#2#3}{#2#3}{__filehook_file_name_compose:nnn {#1}{#2}{#3}}
#1<-
#2<-tl2022_rerun
#3<-.bbl

__filehook_file_subst_tortoise_hare:nn #1#2#3->cs_if_exist:cTF {@file-subst@#2}
{flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_rep
laced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@#2}}{__filehook_file_sub
st_loop:cc {@file-subst@#1}{@file-subst@use:c {@file-subst@#2}}}{use:c {@file-s
ubst@#2}}}{#3}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun.bbl
#3<-__filehook_file_name_compose:nnn {}{tl2022_rerun}{.bbl}

cs_if_exist:cTF #1->if_cs_exist:w #1cs_end: exp_after:wN use_i:nn else: exp_aft
er:wN use_ii:nn fi: {exp_after:wN if_meaning:w cs:w #1cs_end: scan_stop: prg_re
turn_false: else: prg_return_true: fi: }prg_return_false: exp_end: 
#1<-@file-subst@tl2022_rerun.bbl

use_ii:nn #1#2->#2
#1<-exp_after:wN if_meaning:w cs:w @file-subst@tl2022_rerun.bblcs_end: scan_sto
p: prg_return_false: else: prg_return_true: fi: 
#2<-prg_return_false: 

prg_return_false: ->exp_after:wN use_ii:nn exp:w 

use_ii:nn #1#2->#2
#1<-flag_if_raised:nF {__filehook_file_replaced}{flag_raise:n {__filehook_file_
replaced}}cs_if_exist:cTF {@file-subst@use:c {@file-subst@tl2022_rerun.bbl}}{__
filehook_file_subst_loop:cc {@file-subst@tl2022_rerun.bbl}{@file-subst@use:c {@
file-subst@tl2022_rerun.bbl}}}{use:c {@file-subst@tl2022_rerun.bbl}}
#2<-__filehook_file_name_compose:nnn {}{tl2022_rerun}{.bbl}

__filehook_file_name_compose:nnn #1#2#3->tl_if_empty:nF {#1}{#1/}#2#3
#1<-
#2<-tl2022_rerun
#3<-.bbl

tl_if_empty:nF #1->if:w scan_stop: tl_to_str:n {#1}scan_stop: __prg_F_true:w fi
: use:n 
#1<-

__prg_F_true:w fi: use:n ->fi: use_none:n 

use_none:n #1->
#1<-/

@set@curr@file@aux #1->expandafter ifx csname endcsname #1.texelse string #1fi 
#1<-tl2022_rerun.bbl 

@expl@@@filehook@if@file@replaced@@TF #1#2->flag_if_raised:nTF {__filehook_file
_replaced}{#1}{#2}
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {jobname .bbl}if@tempswa @expl@@@filehook@drop@extension@@N @curr@file@re
qd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

flag_if_raised:nTF #1->if_cs_exist:w flag #1 0cs_end: __prg_TF_true:w fi: use_i
i:nn 
#1<-__filehook_file_replaced

use_ii:nn #1#2->#2
#1<-@kernel@make@file@csname @curr@file@reqd @expl@@@filehook@normalize@file@na
me@@w {jobname .bbl}if@tempswa @expl@@@filehook@drop@extension@@N @curr@file@re
qd fi 
#2<-if@tempswa @expl@@@filehook@drop@extension@@N @curr@file fi global let @cur
r@file@reqd @curr@file 

@expl@@@filehook@clear@replacement@flag@@ ->flag_clear:n {__filehook_file_repla
ced}

flag_clear:n #1->__flag_clear:wn 0;{#1}
#1<-__filehook_file_replaced

__flag_clear:wn #1;#2->if_cs_exist:w flag #2 #1cs_end: cs_set_eq:cN {flag #2 #1
}tex_undefined:D exp_after:wN __flag_clear:wn int_value:w int_eval:w 1+#1else: 
use_i:nnn fi: ;{#2}
#1<-0
#2<-__filehook_file_replaced

use_i:nnn #1#2#3->#1
#1<-fi: 
#2<-;
#3<-__filehook_file_replaced

\@curr@file ->tl2022_rerun.bbl

\IfFileExists@ #1#2#3->\openin \@inputcheck "#1" \ifeof \@inputcheck \ifx \inpu
t@path \@undefined \let \reserved@a \@secondoftwo \else \def \reserved@a {\@iff
ileonpath {#1}}\fi \else \closein \@inputcheck \edef \@filef@und {"#1" }\let \r
eserved@a \@firstoftwo \fi \expandafter \def \expandafter \reserved@a \expandaf
ter {\reserved@a {#2}{#3}}\reserved@a 
#1<-tl2022_rerun.bbl
#2<-\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expandafter \@swa
ptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \expandafter
 {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 
#3<-\typeout {No file \jobname .bbl.}

\reserved@a #1#2->#1
#1<-\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expandafter \@swa
ptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \expandafter
 {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 
#2<-\typeout {No file \jobname .bbl.}

\reserved@a ->\@expl@@@filehook@file@push@@ \@filehook@set@CurrentFile \expanda
fter \@swaptwoargs \expandafter {\expandafter \@input@file@exists@with@hooks \e
xpandafter {\@filef@und }}{}\@expl@@@filehook@file@pop@@ 

\@expl@@@filehook@file@push@@ ->\seq_gpush:Nx \g__filehook_input_file_seq {{\Cu
rrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\seq_gpush:Nx ->\exp_args:NNx \seq_gput_left:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\seq_gput_left:Nn 
#2<-\g__filehook_input_file_seq 
#3<-{\CurrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile 
}

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \seq_gput_left:Nn \exp_not:N \g__filehook_input_file_seq {{\Curr
entFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\CurrentFile }}

\CurrentFilePathUsed ->

\CurrentFileUsed ->

\CurrentFilePath ->

\CurrentFile ->

\l__exp_internal_tl ->\seq_gput_left:Nn \g__filehook_input_file_seq {{}{}{}{}}

\seq_gput_left:Nn #1#2->\__kernel_tl_gset:Nx #1{\exp_not:n {\s__seq \__seq_item
:n {#2}}\exp_not:f {\exp_after:wN \__seq_put_left_aux:w #1}}
#1<-\g__filehook_input_file_seq 
#2<-{}{}{}{}

\exp_not:f #1->\__kernel_exp_not:w \exp_after:wN {\exp:w \exp_end_continue_f:w 
#1}
#1<-\exp_after:wN \__seq_put_left_aux:w \g__filehook_input_file_seq 

\exp_end_continue_f:w ->`^^@

\g__filehook_input_file_seq ->\s__seq 

\__seq_put_left_aux:w \s__seq ->\exp_stop_f: 

\@filehook@set@CurrentFile ->\@expl@@@filehook@set@curr@file@@nNN {\@curr@file 
}\CurrentFileUsed \CurrentFilePathUsed \ifx \@curr@file@reqd \@curr@file \let \
CurrentFile \CurrentFileUsed \let \CurrentFilePath \CurrentFilePathUsed \else \
@expl@@@filehook@set@curr@file@@nNN {\@curr@file@reqd }\CurrentFile \CurrentFil
ePath \fi 

\@expl@@@filehook@set@curr@file@@nNN #1->\exp_args:Nf \__filehook_file_parse_fu
ll_name:nN {#1}\__filehook_set_curr_file_assign:nnnNN 
#1<-\@curr@file 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_file_parse_full_name:nN 
#2<-\@curr@file 

\exp_end_continue_f:w ->`^^@

\@curr@file ->tl2022_rerun.bbl

\__filehook_file_parse_full_name:nN #1->\exp_args:Nf \file_parse_full_name_appl
y:nN {\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {#1}}{#1}}
#1<-tl2022_rerun.bbl

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\file_parse_full_name_apply:nN 
#2<-\exp_args:Nf \__filehook_full_name:nn {\file_full_name:n {tl2022_rerun.bbl}
}{tl2022_rerun.bbl}

\exp_end_continue_f:w ->`^^@

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__filehook_full_name:nn 
#2<-\file_full_name:n {tl2022_rerun.bbl}

\exp_end_continue_f:w ->`^^@

\file_full_name:n #1->\exp_args:Ne \__file_full_name:n {\__kernel_file_name_san
itize:n {#1}}
#1<-tl2022_rerun.bbl

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_full_name:n 
#2<-\__kernel_file_name_sanitize:n {tl2022_rerun.bbl}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-tl2022_rerun.bbl

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {tl2022_rer
un.bbl}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {tl2022_rerun.bbl}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-tl2022_rerun.bbl

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=tl2022_rerun.bbl 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-tl2022_rerun.bbl

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.bbl

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.bbl

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_rer
un.bbl}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-tl2022_rerun.bbl

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun
#3<-bbl
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-bbl

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}bbl{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {tl2022_rerun.bbl\s__file_stop }\__file_name_trim_
spaces_aux:n 
#2<-\tl_trim_spaces:n {tl2022_rerun.bbl}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-tl2022_rerun.bbl

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: tl2022_rerun.bbl

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_full_name:n #1->\tl_if_blank:nF {#1}{\exp_args:Nne \__file_full_name_au
x:nn {#1}{\__file_size:n {#1}}}
#1<-tl2022_rerun.bbl

\tl_if_blank:nF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\use
_none:n #1?}\scan_stop: \__prg_F_true:w \fi: \use:n 
#1<-tl2022_rerun.bbl

\use_none:n #1->
#1<-t

\use:n #1->#1
#1<-\exp_args:Nne \__file_full_name_aux:nn {tl2022_rerun.bbl}{\__file_size:n {t
l2022_rerun.bbl}}

\exp_args:Nne #1#2#3->\tex_expanded:D {\exp_not:N #1{\exp_not:n {#2}}{\__kernel
_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__file_full_name_aux:nn 
#2<-tl2022_rerun.bbl
#3<-\__file_size:n {tl2022_rerun.bbl}

\__file_full_name_aux:nn #1#2->\tl_if_blank:nTF {#2}{\seq_map_tokens:Nn \l_file
_search_path_seq {\__file_full_name_aux:Nnn \seq_map_break:n {#1}}\cs_if_exist:
NT \input@path {\tl_map_tokens:Nn \input@path {\__file_full_name_aux:Nnn \tl_ma
p_break:n {#1}}}\__file_name_end: }{\__file_ext_check:nn {#1}{#2}}
#1<-tl2022_rerun.bbl
#2<-1982

\tl_if_blank:nTF #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {\us
e_none:n #1?}\scan_stop: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-1982

\use_none:n #1->
#1<-1

\use_ii:nn #1#2->#2
#1<-\seq_map_tokens:Nn \l_file_search_path_seq {\__file_full_name_aux:Nnn \seq_
map_break:n {tl2022_rerun.bbl}}\cs_if_exist:NT \input@path {\tl_map_tokens:Nn \
input@path {\__file_full_name_aux:Nnn \tl_map_break:n {tl2022_rerun.bbl}}}\__fi
le_name_end: 
#2<-\__file_ext_check:nn {tl2022_rerun.bbl}{1982}

\__file_ext_check:nn #1#2->\__file_ext_check:nnw {#2}{/}#1/\q__file_nil /\s__fi
le_stop 
#1<-tl2022_rerun.bbl
#2<-1982

\__file_ext_check:nnw #1#2#3/#4/#5\s__file_stop ->\__file_quark_if_nil:nTF {#4}
{\exp_args:No \__file_ext_check:nnnw {\use_none:n #2}{#1}{#3}#3.\q__file_nil .\
s__file_stop }{\__file_ext_check:nnw {#1}{#2#3/}#4/#5\s__file_stop }
#1<-1982
#2<-/
#3<-tl2022_rerun.bbl
#4<-\q__file_nil 
#5<-

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\q__file_nil 

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}\q__file_nil {}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-
#2<-
#3<-!\q__file_nil ?

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\exp_args:No \__file_ext_check:nnnw {\use_none:n /}{1982}{tl2022_rerun.bbl}
tl2022_rerun.bbl.\q__file_nil .\s__file_stop 
#2<-\__file_ext_check:nnw {1982}{/tl2022_rerun.bbl/}\q__file_nil /\s__file_stop
 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__file_ext_check:nnnw 
#2<-\use_none:n /

\use_none:n #1->
#1<-/

\__file_ext_check:nnnw #1#2#3#4.#5.#6\s__file_stop ->\__file_quark_if_nil:nTF {
#5}{\__file_ext_check:nnn {#1#3.tex}{#1#3}{#2}}{#1#3}
#1<-
#2<-1982
#3<-tl2022_rerun.bbl
#4<-tl2022_rerun
#5<-bbl
#6<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-bbl

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}bbl{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__file_ext_check:nnn {tl2022_rerun.bbl.tex}{tl2022_rerun.bbl}{1982}
#2<-tl2022_rerun.bbl

\__filehook_full_name:nn #1#2->\tl_if_empty:nTF {#1}{\tl_trim_spaces:n {#2}}{\t
l_trim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun.bbl

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-tl2022_rerun.bbl

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces:n {tl2022_rerun.bbl}
#2<-\tl_trim_spaces:n {tl2022_rerun.bbl}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-tl2022_rerun.bbl

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: tl2022_rerun.bbl

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\file_parse_full_name_apply:nN #1->\exp_args:Ne \__file_parse_full_name_auxi:nN
 {\__kernel_file_name_sanitize:n {#1}}
#1<-tl2022_rerun.bbl

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_parse_full_name_auxi:nN 
#2<-\__kernel_file_name_sanitize:n {tl2022_rerun.bbl}

\__kernel_file_name_sanitize:n #1->\exp_args:Ne \__file_name_trim_spaces:n {\ex
p_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {#1}}}
#1<-tl2022_rerun.bbl

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_trim_spaces:n 
#2<-\exp_args:Ne \__file_name_strip_quotes:n {\__file_name_expand:n {tl2022_rer
un.bbl}}

\exp_args:Ne #1#2->\exp_after:wN #1\tex_expanded:D {{#2}}
#1<-\__file_name_strip_quotes:n 
#2<-\__file_name_expand:n {tl2022_rerun.bbl}

\__file_name_expand:n #1->\exp_after:wN \__file_name_expand_cleanup:Nw \cs:w __
file_name=#1\cs_end: \__file_name_expand_end: 
#1<-tl2022_rerun.bbl

\__file_name_expand_cleanup:Nw #1#2\__file_name_expand_end: ->\tl_if_empty:nF {
#2}{\__file_name_expand_error:Nw #2\__file_name_expand_end: }\exp_after:wN \__f
ile_name_expand_cleanup:w \token_to_str:N #1
#1<-\__file_name=tl2022_rerun.bbl 
#2<-

\tl_if_empty:nF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_F_tru
e:w \fi: \use:n 
#1<-

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__file_name_expand_error:Nw \__file_name_expand_end: 

\__file_name_expand_cleanup:w #1__file_name=->
#1<-\

\__file_name_strip_quotes:n #1->\__file_name_strip_quotes:nw {0}#1"\q__file_rec
ursion_tail "\q__file_recursion_stop {#1}
#1<-tl2022_rerun.bbl

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0
#2<-tl2022_rerun.bbl

\__file_name_strip_quotes:nw #1#2"->\if_meaning:w \q__file_recursion_tail #2\__
file_name_strip_quotes_end:wnwn \fi: #2\__file_name_strip_quotes:nw {#1+1}
#1<-0+1
#2<-\q__file_recursion_tail 

\__file_name_strip_quotes_end:wnwn \fi: #1\__file_name_strip_quotes:nw #2\q__fi
le_recursion_stop #3->\fi: \int_if_odd:nT {#2}{\msg_expandable_error:nnn {kerne
l}{unbalanced-quote-in-filename}{#3}}
#1<-\q__file_recursion_tail 
#2<-0+1+1
#3<-tl2022_rerun.bbl

\int_if_odd:nT #1->\if_int_odd:w \__int_eval:w #1\__int_eval_end: \__prg_T_true
:w \fi: \use_none:n 
#1<-0+1+1

\use_none:n #1->
#1<-\msg_expandable_error:nnn {kernel}{unbalanced-quote-in-filename}{tl2022_rer
un.bbl}

\__file_name_trim_spaces:n #1->\__file_name_trim_spaces:nw {#1}#1.\q__file_nil 
.\s__file_stop 
#1<-tl2022_rerun.bbl

\__file_name_trim_spaces:nw #1#2.#3.#4\s__file_stop ->\__file_quark_if_nil:nTF 
{#3}{\tl_trim_spaces_apply:nN {#1\s__file_stop }\__file_name_trim_spaces_aux:n 
}{\tl_trim_spaces:n {#1}}
#1<-tl2022_rerun.bbl
#2<-tl2022_rerun
#3<-bbl
#4<-\q__file_nil .

\__file_quark_if_nil:nTF #1->\__quark_if_empty_if:o {\__file_if_quark_nil:w {}#
1{}?!\q__file_nil ??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-bbl

\__quark_if_empty_if:o #1->\exp_after:wN \if_meaning:w \exp_after:wN \q_nil \__
kernel_tl_to_str:w \exp_after:wN {#1}\q_nil 
#1<-\__file_if_quark_nil:w {}bbl{}?!\q__file_nil ??!

\__file_if_quark_nil:w #1\q__file_nil #2?#3?!->#1#2
#1<-{}bbl{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\tl_trim_spaces_apply:nN {tl2022_rerun.bbl\s__file_stop }\__file_name_trim_
spaces_aux:n 
#2<-\tl_trim_spaces:n {tl2022_rerun.bbl}

\tl_trim_spaces:n #1->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\__kernel_exp_
not:w \exp_after:wN }
#1<-tl2022_rerun.bbl

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: tl2022_rerun.bbl

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: tl2022_rerun.bbl\s__tl_nil \__tl_trim_spaces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: tl2022_rerun.bbl
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\__kernel_exp_not:w \exp_after:wN 

\__tl_trim_mark: ->

\__file_parse_full_name_auxi:nN #1->\__file_parse_full_name_area:nw {}#1/\s__fi
le_stop 
#1<-tl2022_rerun.bbl

\__file_parse_full_name_area:nw #1#2/#3\s__file_stop ->\tl_if_empty:nTF {#3}{\_
_file_parse_full_name_base:nw {}#2.\s__file_stop {#1}}{\__file_parse_full_name_
area:nw {#1/#2}#3\s__file_stop }
#1<-
#2<-tl2022_rerun.bbl
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__file_parse_full_name_base:nw {}tl2022_rerun.bbl.\s__file_stop {}
#2<-\__file_parse_full_name_area:nw {/tl2022_rerun.bbl}\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-
#2<-tl2022_rerun
#3<-bbl.

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-bbl.

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {}{\tl_if_empty:nTF {tl2022_rerun}{\__file_parse_full_name
_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{}}}{\__file_
parse_full_name_tidy:nnnN {}{.tl2022_rerun}}
#2<-\__file_parse_full_name_base:nw {.tl2022_rerun}bbl.\s__file_stop 

\__file_parse_full_name_base:nw #1#2.#3\s__file_stop ->\tl_if_empty:nTF {#3}{\t
l_if_empty:nTF {#1}{\tl_if_empty:nTF {#2}{\__file_parse_full_name_tidy:nnnN {}{
}}{\__file_parse_full_name_tidy:nnnN {.#2}{}}}{\__file_parse_full_name_tidy:nnn
N {#1}{.#2}}}{\__file_parse_full_name_base:nw {#1.#2}#3\s__file_stop }
#1<-.tl2022_rerun
#2<-bbl
#3<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\tl_if_empty:nTF {.tl2022_rerun}{\tl_if_empty:nTF {bbl}{\__file_parse_full_
name_tidy:nnnN {}{}}{\__file_parse_full_name_tidy:nnnN {.bbl}{}}}{\__file_parse
_full_name_tidy:nnnN {.tl2022_rerun}{.bbl}}
#2<-\__file_parse_full_name_base:nw {.tl2022_rerun.bbl}\s__file_stop 

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-.tl2022_rerun

\use_ii:nn #1#2->#2
#1<-\tl_if_empty:nTF {bbl}{\__file_parse_full_name_tidy:nnnN {}{}}{\__file_pars
e_full_name_tidy:nnnN {.bbl}{}}
#2<-\__file_parse_full_name_tidy:nnnN {.tl2022_rerun}{.bbl}

\__file_parse_full_name_tidy:nnnN #1#2#3#4->\exp_args:Nee #4{\str_if_eq:nnF {#3
}{/}{\use_none:n }#3\prg_do_nothing: }{\use_none:n #1\prg_do_nothing: }{#2}
#1<-.tl2022_rerun
#2<-.bbl
#3<-
#4<-\__filehook_set_curr_file_assign:nnnNN 

\exp_args:Nee #1#2#3->\tex_expanded:D {\exp_not:N #1{\__kernel_exp_not:w \tex_e
xpanded:D {{#2}}}{\__kernel_exp_not:w \tex_expanded:D {{#3}}}}
#1<-\__filehook_set_curr_file_assign:nnnNN 
#2<-\str_if_eq:nnF {}{/}{\use_none:n }\prg_do_nothing: 
#3<-\use_none:n .tl2022_rerun\prg_do_nothing: 

\str_if_eq:nnF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}\
__prg_F_true:w \fi: \use:n 
#1<-
#2<-/

\use:n #1->#1
#1<-\use_none:n 

\use_none:n #1->
#1<-\prg_do_nothing: 

\use_none:n #1->
#1<-.

\prg_do_nothing: ->

\__filehook_set_curr_file_assign:nnnNN #1#2#3#4#5->\str_set:Nn #5{#1}\str_set:N
n #4{#2#3}
#1<-
#2<-tl2022_rerun
#3<-.bbl
#4<-\CurrentFileUsed 
#5<-\CurrentFilePathUsed 

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFilePathUsed 
#2<-\tl_to_str:n {}

\str_set:Nn #1#2->\tl_set:Nx #1{\tl_to_str:n {#2}}
#1<-\CurrentFileUsed 
#2<-tl2022_rerun.bbl

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\CurrentFileUsed 
#2<-\tl_to_str:n {tl2022_rerun.bbl}

\@filef@und ->"tl2022_rerun.bbl" 

\@swaptwoargs #1#2->#2#1
#1<-\@input@file@exists@with@hooks {"tl2022_rerun.bbl" }
#2<-

\@input@file@exists@with@hooks #1->\edef \reserved@a {\@expl@@@filehook@file@po
p@assign@@nnnn {\CurrentFilePathUsed }{\CurrentFileUsed }{\CurrentFilePath }{\C
urrentFile }}\expandafter \@swaptwoargs \expandafter {\reserved@a }{\edef \rese
rved@a {\unqu@tefilef@und #1\@nil }\@addtofilelist {\string@makeletter \reserve
d@a }\UseHook {file/before}\UseHook {file/\CurrentFile /before}\@@input #1}\Use
Hook {file/\CurrentFile /after}\UseHook {file/after}
#1<-"tl2022_rerun.bbl" 

\CurrentFilePathUsed ->

\CurrentFileUsed ->tl2022_rerun.bbl

\CurrentFilePath ->

\CurrentFile ->tl2022_rerun.bbl

\reserved@a ->\@expl@@@filehook@file@pop@assign@@nnnn {}{tl2022_rerun.bbl}{}{tl
2022_rerun.bbl}

\@swaptwoargs #1#2->#2#1
#1<-\@expl@@@filehook@file@pop@assign@@nnnn {}{tl2022_rerun.bbl}{}{tl2022_rerun
.bbl}
#2<-\edef \reserved@a {\unqu@tefilef@und "tl2022_rerun.bbl" \@nil }\@addtofilel
ist {\string@makeletter \reserved@a }\UseHook {file/before}\UseHook {file/\Curr
entFile /before}\@@input "tl2022_rerun.bbl" 

\unqu@tefilef@und "#1" \@nil ->#1
#1<-tl2022_rerun.bbl

\@addtofilelist #1->
#1<-\string@makeletter \reserved@a 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/before

\__hook file/before ->\__hook_toplevel file/before \__hook_next file/before 

\__hook_toplevel file/before ->

\__hook_next file/before ->

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/\CurrentFile /before

\CurrentFile ->tl2022_rerun.bbl
 (out/tl2022_rerun.bbl
\begin ->\protect \begin  

\begin  #1->\UseHook {env/#1/before}\@ifundefined {#1}{\def \reserved@a {\@late
x@error {Environment #1 undefined}\@eha }}{\def \reserved@a {\def \@currenvir {
#1}\edef \@currenvline {\on@line }\@execute@begin@hook {#1}\csname #1\endcsname
 }}\@ignorefalse \begingroup \@endpefalse \reserved@a 
#1<-thebibliography

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/thebibliography/before

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-thebibliography

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-thebibliography

\@secondoftwo #1#2->#2
#1<-\def \reserved@a {\@latex@error {Environment thebibliography undefined}\@eh
a }
#2<-\def \reserved@a {\def \@currenvir {thebibliography}\edef \@currenvline {\o
n@line }\@execute@begin@hook {thebibliography}\csname thebibliography\endcsname
 }

\@ignorefalse ->\global \let \if@ignore \iffalse 

\@endpefalse ->\let \if@endpe \iffalse 

\reserved@a ->\def \@currenvir {thebibliography}\edef \@currenvline {\on@line }
\@execute@begin@hook {thebibliography}\csname thebibliography\endcsname 

\on@line -> on input line \the \inputlineno 

\@execute@begin@hook #1->\UseHook {env/#1/begin}
#1<-thebibliography

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/thebibliography/begin

\thebibliography #1->\endgroup \def \@currenvir {thebibliography}
#1<-0

\makeatletter ->\protect \makeatletter  

\makeatletter  ->\catcode `\@11\relax 

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@ifxundefined 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@ifnum 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@ifx 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\natexlab 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\enquote 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibnamefont 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibfnamefont 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\citenamefont 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\href@noop 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\href 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@href 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@@href 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@sanitize@url 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@@startlink 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@@endlink 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\url 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\@url 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\urlprefix 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\Eprint 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\doibase 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\selectlanguage 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibinfo 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibfield 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\translation 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\BibitemOpen 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibitemStop 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\bibitemNoStop 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\EOS 
#2<-0

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-0=\z@ 

\true@sw #1#2->#1
#1<-\def \j@nk 
#2<-\@ifnum {0=\@ne }{\def \j@nk ##1}{\@ifnum {0=\tw@ }{\def \j@nk ##1##2}{\@if
num {0=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\providecommand #1[#2]->\@ifnum {#2=\z@ }{\def \j@nk }{\@ifnum {#2=\@ne }{\def 
\j@nk ##1}{\@ifnum {#2=\tw@ }{\def \j@nk ##1##2}{\@ifnum {#2=\thr@@ }{\def \j@n
k ##1##2##3}{}}}}
#1<-\BibitemShut 
#2<-1

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\z@ 

\false@sw #1#2->#2
#1<-\def \j@nk 
#2<-\@ifnum {1=\@ne }{\def \j@nk ##1}{\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@if
num {1=\thr@@ }{\def \j@nk ##1##2##3}{}}}

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-1=\@ne 

\true@sw #1#2->#1
#1<-\def \j@nk ##1
#2<-\@ifnum {1=\tw@ }{\def \j@nk ##1##2}{\@ifnum {1=\thr@@ }{\def \j@nk ##1##2#
#3}{}}

\end ->\romannumeral \ifx \protect \@typeset@protect \expandafter \expandafter 
\expandafter \expandafter \expandafter \expandafter \expandafter \z@ \else \exp
andafter \z@ \expandafter \protect \fi \end  

\end  #1->\romannumeral \IfHookEmptyTF {env/#1/end}{\expandafter \z@ }{\z@ \Use
Hook {env/#1/end}}\csname end#1\endcsname \@checkend {#1}\expandafter \endgroup
 \if@endpe \@doendpe \fi \UseHook {env/#1/after}\if@ignore \@ignorefalse \ignor
espaces \fi 
#1<-thebibliography

\IfHookEmptyTF #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF {\pr
op_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {
__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: }{\p
rg_return_false: }}{\prg_return_true: }\exp_end: 
#1<-env/thebibliography/end

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-env/thebibliography/end

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_env/thebibliography/end_code_prop

\use_ii:nn #1#2->#2
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_env/thebibliography/end_code_prop
\cs_end: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_env/thebibliography/end_co
de_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel env/thebibliog
raphy/end}}{\tl_if_empty_p:c {__hook_next env/thebibliography/end}}}{\prg_retur
n_true: }{\prg_return_false: }
#2<-\prg_return_true: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\expandafter \z@ 
#2<-\z@ \UseHook {env/thebibliography/end}

\endthebibliography ->\begingroup 

\@checkend #1->\def \reserved@a {#1}\ifx \reserved@a \@currenvir \else \@badend
 {#1}\fi 
#1<-thebibliography

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-env/thebibliography/after
)
\@expl@@@filehook@file@pop@assign@@nnnn #1#2#3#4->\tl_set:Nn \CurrentFilePathUs
ed {#1}\tl_set:Nn \CurrentFileUsed {#2}\tl_set:Nn \CurrentFilePath {#3}\tl_set:
Nn \CurrentFile {#4}
#1<-
#2<-tl2022_rerun.bbl
#3<-
#4<-tl2022_rerun.bbl

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFileUsed 
#2<-tl2022_rerun.bbl

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePath 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFile 
#2<-tl2022_rerun.bbl

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/\CurrentFile /after

\CurrentFile ->tl2022_rerun.bbl

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-file/after

\__hook file/after ->\__hook_toplevel file/after \__hook_next file/after 

\__hook_toplevel file/after ->

\__hook_next file/after ->

\@expl@@@filehook@file@pop@@ ->\seq_gpop:NNTF \g__filehook_input_file_seq \l__f
ilehook_internal_tl {\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehoo
k_internal_tl }{\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from a
n empty file name stack.}}

\seq_gpop:NNTF #1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \tl_gset:Nn #1#2\ex
p_end: 
#1<-\g__filehook_input_file_seq 
#2<-\l__filehook_internal_tl 

\__seq_pop_TF:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \prg_return_false: \e
lse: #1#2#3#4\prg_return_true: \fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__filehook_input_file_seq 
#4<-\l__filehook_internal_tl 

\__seq_pop_left:NNN #1#2#3->\exp_after:wN \__seq_pop_left:wnwNNN #2\s__seq_stop
 #1#2#3
#1<-\tl_gset:Nn 
#2<-\g__filehook_input_file_seq 
#3<-\l__filehook_internal_tl 

\g__filehook_input_file_seq ->\s__seq \__seq_item:n {{}{}{}{}}

\__seq_pop_left:wnwNNN #1\__seq_item:n #2#3\s__seq_stop #4#5#6->#4#5{#1#3}\tl_s
et:Nn #6{#2}
#1<-\s__seq 
#2<-{}{}{}{}
#3<-
#4<-\tl_gset:Nn 
#5<-\g__filehook_input_file_seq 
#6<-\l__filehook_internal_tl 

\tl_gset:Nn #1#2->\__kernel_tl_gset:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\g__filehook_input_file_seq 
#2<-\s__seq 

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\l__filehook_internal_tl 
#2<-{}{}{}{}

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__filehook_file_pop_assign:nnnn \l__filehook_internal_tl 
#2<-\msg_error:nnn {latex2e}{should-not-happen}{Tried to pop from an empty file
 name stack.}

\l__filehook_internal_tl ->{}{}{}{}

\__filehook_file_pop_assign:nnnn #1#2#3#4->\tl_set:Nn \CurrentFilePathUsed {#1}
\tl_set:Nn \CurrentFileUsed {#2}\tl_set:Nn \CurrentFilePath {#3}\tl_set:Nn \Cur
rentFile {#4}
#1<-
#2<-
#3<-
#4<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePathUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFileUsed 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFilePath 
#2<-

\tl_set:Nn #1#2->\__kernel_tl_set:Nx #1{\__kernel_exp_not:w {#2}}
#1<-\CurrentFile 
#2<-

\bibitem@sw #1#2->#2
#1<-\aftergroup \true@sw 
#2<-\aftergroup \false@sw 

\false@sw #1#2->#2
#1<-\bibliography {}
#2<-

\printfigures ->\@ifstar {\true@sw }{\floatp@sw {\true@sw }{\false@sw }}{\print
@float {figure}{\oneapage }}{\print@float {figure}{}}

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\true@sw 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\true@sw }
#3<-\floatp@sw {\true@sw }{\false@sw }

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\floatp@sw {\true@sw }{\false@sw }

\floatp@sw #1#2->#1
#1<-\true@sw 
#2<-\false@sw 

\true@sw #1#2->#1
#1<-\print@float {figure}{\oneapage }
#2<-\print@float {figure}{}

\print@float #1#2->\lengthcheck@sw {\total@float {#1}}{}\@ifxundefined@cs {#1wr
ite}{}{\begingroup \@booleanfalse \floats@sw #2\raggedbottom \def \array@defaul
t {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \trigger@
float@par \triggerpar \let@environment {#1}{#1@float}\let@environment {#1*}{#1@
floats}\expandafter \prepdef \csname #1\endcsname {\trigger@float@par }\expanda
fter \prepdef \csname #1*\endcsname {\trigger@float@par }\@namedef {fps@#1}{h!}
\expandafter \immediate \expandafter \closeout \csname #1write\endcsname \every
par {\global \let \trigger@float@par \relax \global \everypar {}\setbox \z@ \la
stbox \@ifxundefined@cs {#1sname}{}{\begin@float@pagebreak \expandafter \sectio
n \expandafter *\expandafter {\csname #1sname\endcsname }}}\input {\csname #1@s
tream\endcsname }\endgroup \global \expandafter \let \csname #1write\endcsname 
\relax }
#1<-figure
#2<-\oneapage 

\lengthcheck@sw #1#2->#2
#1<-\total@float {figure}
#2<-

\@ifxundefined@cs #1->\expandafter \@ifx \expandafter {\csname #1\endcsname \re
lax }
#1<-figurewrite

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\figurewrite \relax 

\true@sw #1#2->#1
#1<-
#2<-\begingroup \@booleanfalse \floats@sw \oneapage \raggedbottom \def \array@d
efault {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \tri
gger@float@par \triggerpar \let@environment {figure}{figure@float}\let@environm
ent {figure*}{figure@floats}\expandafter \prepdef \csname figure\endcsname {\tr
igger@float@par }\expandafter \prepdef \csname figure*\endcsname {\trigger@floa
t@par }\@namedef {fps@figure}{h!}\expandafter \immediate \expandafter \closeout
 \csname figurewrite\endcsname \everypar {\global \let \trigger@float@par \rela
x \global \everypar {}\setbox \z@ \lastbox \@ifxundefined@cs {figuresname}{}{\b
egin@float@pagebreak \expandafter \section \expandafter *\expandafter {\csname 
figuresname\endcsname }}}\input {\csname figure@stream\endcsname }\endgroup \gl
obal \expandafter \let \csname figurewrite\endcsname \relax 

\printtables ->\begingroup \let@environment {longtable}{longtable@float}\let@en
vironment {longtable*}{longtable*@float}\let@environment {turnpage}{turnpage@an
chored}\prepdef \longtable {\trigger@float@par }\expandafter \prepdef \csname l
ongtable*\endcsname {\trigger@float@par }\expandafter \prepdef \csname table@fl
oats\endcsname {\onecolumngrid@push }\expandafter \appdef \csname endtable@floa
ts\endcsname {\onecolumngrid@pop }\@ifstar {\true@sw }{\floatp@sw {\true@sw }{\
false@sw }}{\print@float {table}{\oneapage }}{\print@float {table}{}}\endgroup 

\let@environment #1#2->\expandafter \let \csname #1\expandafter \endcsname \csn
ame #2\endcsname \expandafter \let \csname end#1\expandafter \endcsname \csname
 end#2\endcsname 
#1<-longtable
#2<-longtable@float

\let@environment #1#2->\expandafter \let \csname #1\expandafter \endcsname \csn
ame #2\endcsname \expandafter \let \csname end#1\expandafter \endcsname \csname
 end#2\endcsname 
#1<-longtable*
#2<-longtable*@float

\let@environment #1#2->\expandafter \let \csname #1\expandafter \endcsname \csn
ame #2\endcsname \expandafter \let \csname end#1\expandafter \endcsname \csname
 end#2\endcsname 
#1<-turnpage
#2<-turnpage@anchored

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\longtable 
#2<-\trigger@float@par 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\longtable 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \longtable 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\longtable }

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\longtable* 
#2<-\trigger@float@par 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\longtable* 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \longtable* 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\longtable* }

\prepdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {
#2}\edef #1{\the \toks@ii \the \toks@ }
#1<-\table@floats 
#2<-\onecolumngrid@push 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\table@floats 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \table@floats 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\table@floats }

\appdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {#
2}\edef #1{\the \toks@ \the \toks@ii }
#1<-\endtable@floats 
#2<-\onecolumngrid@pop 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\endtable@floats 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \endtable@floats 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\endtable@floats }

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\true@sw 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\true@sw }
#3<-\floatp@sw {\true@sw }{\false@sw }

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\floatp@sw {\true@sw }{\false@sw }

\floatp@sw #1#2->#1
#1<-\true@sw 
#2<-\false@sw 

\true@sw #1#2->#1
#1<-\print@float {table}{\oneapage }
#2<-\print@float {table}{}

\print@float #1#2->\lengthcheck@sw {\total@float {#1}}{}\@ifxundefined@cs {#1wr
ite}{}{\begingroup \@booleanfalse \floats@sw #2\raggedbottom \def \array@defaul
t {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \trigger@
float@par \triggerpar \let@environment {#1}{#1@float}\let@environment {#1*}{#1@
floats}\expandafter \prepdef \csname #1\endcsname {\trigger@float@par }\expanda
fter \prepdef \csname #1*\endcsname {\trigger@float@par }\@namedef {fps@#1}{h!}
\expandafter \immediate \expandafter \closeout \csname #1write\endcsname \every
par {\global \let \trigger@float@par \relax \global \everypar {}\setbox \z@ \la
stbox \@ifxundefined@cs {#1sname}{}{\begin@float@pagebreak \expandafter \sectio
n \expandafter *\expandafter {\csname #1sname\endcsname }}}\input {\csname #1@s
tream\endcsname }\endgroup \global \expandafter \let \csname #1write\endcsname 
\relax }
#1<-table
#2<-\oneapage 

\lengthcheck@sw #1#2->#2
#1<-\total@float {table}
#2<-

\@ifxundefined@cs #1->\expandafter \@ifx \expandafter {\csname #1\endcsname \re
lax }
#1<-tablewrite

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\tablewrite \relax 

\true@sw #1#2->#1
#1<-
#2<-\begingroup \@booleanfalse \floats@sw \oneapage \raggedbottom \def \array@d
efault {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \tri
gger@float@par \triggerpar \let@environment {table}{table@float}\let@environmen
t {table*}{table@floats}\expandafter \prepdef \csname table\endcsname {\trigger
@float@par }\expandafter \prepdef \csname table*\endcsname {\trigger@float@par 
}\@namedef {fps@table}{h!}\expandafter \immediate \expandafter \closeout \csnam
e tablewrite\endcsname \everypar {\global \let \trigger@float@par \relax \globa
l \everypar {}\setbox \z@ \lastbox \@ifxundefined@cs {tablesname}{}{\begin@floa
t@pagebreak \expandafter \section \expandafter *\expandafter {\csname tablesnam
e\endcsname }}}\input {\csname table@stream\endcsname }\endgroup \global \expan
dafter \let \csname tablewrite\endcsname \relax 

\printvideos ->\@ifstar {\true@sw }{\floatp@sw {\true@sw }{\false@sw }}{\print@
float {video}{\oneapage }}{\print@float {video}{}}

\@ifstar #1->\@ifnextchar *{\@firstoftwo {#1}}
#1<-\true@sw 

\@ifnextchar #1#2#3->\let \reserved@d =#1\def \reserved@a {#2}\def \reserved@b 
{#3}\futurelet \@let@token \@ifnch 
#1<-*
#2<-\@firstoftwo {\true@sw }
#3<-\floatp@sw {\true@sw }{\false@sw }

\@ifnch ->\ifx \@let@token \@sptoken \let \reserved@c \@xifnch \else \ifx \@let
@token \reserved@d \let \reserved@c \reserved@a \else \let \reserved@c \reserve
d@b \fi \fi \reserved@c 

\reserved@c ->\floatp@sw {\true@sw }{\false@sw }

\floatp@sw #1#2->#1
#1<-\true@sw 
#2<-\false@sw 

\true@sw #1#2->#1
#1<-\print@float {video}{\oneapage }
#2<-\print@float {video}{}

\print@float #1#2->\lengthcheck@sw {\total@float {#1}}{}\@ifxundefined@cs {#1wr
ite}{}{\begingroup \@booleanfalse \floats@sw #2\raggedbottom \def \array@defaul
t {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \trigger@
float@par \triggerpar \let@environment {#1}{#1@float}\let@environment {#1*}{#1@
floats}\expandafter \prepdef \csname #1\endcsname {\trigger@float@par }\expanda
fter \prepdef \csname #1*\endcsname {\trigger@float@par }\@namedef {fps@#1}{h!}
\expandafter \immediate \expandafter \closeout \csname #1write\endcsname \every
par {\global \let \trigger@float@par \relax \global \everypar {}\setbox \z@ \la
stbox \@ifxundefined@cs {#1sname}{}{\begin@float@pagebreak \expandafter \sectio
n \expandafter *\expandafter {\csname #1sname\endcsname }}}\input {\csname #1@s
tream\endcsname }\endgroup \global \expandafter \let \csname #1write\endcsname 
\relax }
#1<-video
#2<-\oneapage 

\lengthcheck@sw #1#2->#2
#1<-\total@float {video}
#2<-

\@ifxundefined@cs #1->\expandafter \@ifx \expandafter {\csname #1\endcsname \re
lax }
#1<-videowrite

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\videowrite \relax 

\true@sw #1#2->#1
#1<-
#2<-\begingroup \@booleanfalse \floats@sw \oneapage \raggedbottom \def \array@d
efault {v}\let \@float \@float@LaTeX \let \@dblfloat \@dblfloat@LaTeX \let \tri
gger@float@par \triggerpar \let@environment {video}{video@float}\let@environmen
t {video*}{video@floats}\expandafter \prepdef \csname video\endcsname {\trigger
@float@par }\expandafter \prepdef \csname video*\endcsname {\trigger@float@par 
}\@namedef {fps@video}{h!}\expandafter \immediate \expandafter \closeout \csnam
e videowrite\endcsname \everypar {\global \let \trigger@float@par \relax \globa
l \everypar {}\setbox \z@ \lastbox \@ifxundefined@cs {videosname}{}{\begin@floa
t@pagebreak \expandafter \section \expandafter *\expandafter {\csname videosnam
e\endcsname }}}\input {\csname video@stream\endcsname }\endgroup \global \expan
dafter \let \csname videowrite\endcsname \relax 

\test@amsmath@ver ->\begingroup \restore@LaTeX \@ifpackageloaded {amsmath}{\@if
packagelater {amsmath}{\ver@amsmath@prefer }{}{\class@warn {You have loaded ams
math, version "\csname ver@amsmath.sty\endcsname ",\MessageBreak but this class
 requires version "\ver@amsmath@prefer ", or later.\MessageBreak Please update 
your LaTeX installation. }}}{}\endgroup 

\restore@LaTeX ->\let \@ifl@aded \@ifl@aded@LaTeX \let \@ifpackageloaded \@ifpa
ckageloaded@LaTeX \let \@pkgextension \@pkgextension@LaTeX \let \@ifpackagelate
r \@ifpackagelater@LaTeX \let \@ifl@ter \@ifl@ter@LaTeX \let \@ifl@t@r \@ifl@t@
r@LaTeX \let \@parse@version \@parse@version@LaTeX 

\@ifpackageloaded ->\@ifl@aded \@pkgextension 

\@ifl@aded #1#2->\expandafter \ifx \csname ver@#2.#1\endcsname \relax \expandaf
ter \@secondoftwo \else \expandafter \@firstoftwo \fi 
#1<-\@pkgextension 
#2<-amsmath

\@pkgextension ->sty

\@secondoftwo #1#2->#2
#1<-\@ifpackagelater {amsmath}{\ver@amsmath@prefer }{}{\class@warn {You have lo
aded amsmath, version "\csname ver@amsmath.sty\endcsname ",\MessageBreak but th
is class requires version "\ver@amsmath@prefer ", or later.\MessageBreak Please
 update your LaTeX installation. }}
#2<-

\rvtx@enddocument@patch #1#2\@checkend #3->\begingroup \edef \x {\detokenize {#
3}}\edef \y {\detokenize {document}}\expandafter \endgroup \ifx \x \y \expandaf
ter \rvtx@enddocument@patch@end \else \expandafter \rvtx@enddocument@patch@more
 \fi {#1#2}{#3}
#1<-
#2<-\write@bibliographystyle \ifNAT@stdbst \if@filesw \immediate \write \@auxou
t {\string \providecommand \string \NAT@force@numbers {}\string \NAT@force@numb
ers }\fi \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multip
le \__hook_toplevel enddocument \__hook_next enddocument \__hook_use_once_clear
:n {enddocument}\@kernel@after@enddocument 
#3<-document

\rvtx@enddocument@patch@end #1#2\clearpage #3\endgroup ->\def \do@check@aux {#3
\endgroup }#1\@checkend {#2}\clear@document \check@aux 
#1<-\write@bibliographystyle \ifNAT@stdbst \if@filesw \immediate \write \@auxou
t {\string \providecommand \string \NAT@force@numbers {}\string \NAT@force@numb
ers }\fi \fi \NAT@swatrue \let \bibcite \NAT@testdef \NAT@undefined \NAT@multip
le \__hook_toplevel enddocument \__hook_next enddocument \__hook_use_once_clear
:n {enddocument}\@kernel@after@enddocument 
#2<-document
#3<-\UseOneTimeHook {enddocument/afterlastpage}\@kernel@after@enddocument@after
lastpage \begingroup \if@filesw \immediate \closeout \@mainaux \let \@setckpt \
@gobbletwo \let \@newl@bel \@testdef \@tempswafalse \makeatletter \@@input \job
name .aux \fi \UseOneTimeHook {enddocument/afteraux}\UseOneTimeHook {enddocumen
t/info}

\write@bibliographystyle ->\@ifxundefined \@bibstyle {}{\expandafter \bibliogra
phystyle@latex \expandafter {\@bibstyle }\bibliographystyle@sw {}{\@bibdataout@
rev }}\global \let \write@bibliographystyle \relax 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\@bibstyle 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \@bibstyle 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \bibliographystyle@latex \expandafter {\@bibstyle }\bibliograp
hystyle@sw {}{\@bibdataout@rev }

\@bibstyle ->apsrev\substyle@post 

\bibliographystyle@latex #1->\ifx \@begindocumenthook \@undefined \else \expand
after \AtBeginDocument \fi {\if@filesw \immediate \write \@auxout {\string \bib
style {#1}}\fi }
#1<-apsrev\substyle@post 

\substyle@post ->4-2

\bibliographystyle@sw #1#2->#2
#1<-
#2<-\@bibdataout@rev 

\@bibdataout@rev ->\immediate \write \@bibdataout {@CONTROL{REVTEX42Control\epr
int@enable@sw {}{,eprint="1"}}}\if@filesw \immediate \write \@auxout {\string \
citation {REVTEX42Control}}\fi \@bibdataout@aps 

\eprint@enable@sw #1#2->#1
#1<-
#2<-,eprint="1"

\@bibdataout@aps ->\immediate \write \@bibdataout {@CONTROL{apsrev42Control\lon
gbibliography@sw {,author="08",editor="1",pages="0",title="0",year="1"}{,author
="08",editor="1",pages="0",title="",year="1"}}}\if@filesw \immediate \write \@a
uxout {\string \citation {apsrev42Control}}\fi 

\longbibliography@sw #1#2->#1
#1<-,author="08",editor="1",pages="0",title="0",year="1"
#2<-,author="08",editor="1",pages="0",title="",year="1"

\NAT@swatrue ->\let \ifNAT@swa \iftrue 

\__hook_toplevel enddocument ->

\__hook_next enddocument ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-enddocument

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook enddocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next enddocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next enddocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next enddocument 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel enddocument

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel enddocument 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel enddocument 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_enddocument_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_enddocument_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_enddocument_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_enddocument_code_prop 
#2<-\prop_new:N \g__hook_enddocument_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_enddocument_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_enddocument_code_prop 
#2<-\c_empty_prop 

\@kernel@after@enddocument ->\int_compare:nNnT \@abspage@last =\maxdimen {\xdef
 \@abspage@last {\int_eval:n {\g_shipout_readonly_int +1}}}

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\@abspage@last 
#2<-=
#3<-\maxdimen 

\@abspage@last ->1

\use_none:n #1->
#1<-\xdef \@abspage@last {\int_eval:n {\g_shipout_readonly_int +1}}

\@checkend #1->\def \reserved@a {#1}\ifx \reserved@a \@currenvir \else \@badend
 {#1}\fi 
#1<-document

\clear@document ->\let \clearpage \clearpage@ltx \let \clear@document \@empty \
close@column \clearpage \do@output@cclv {\Call@AfterLastShipout }\do@output@ccl
v {\lastpage@putlabel \tally@box@size@sw {\total@text }{}}

\close@column ->\newpage 

\newpage ->\newpage@prep \do@output@MVL {\vfil \penalty -\pagebreak@pen }

\newpage@prep ->\if@noskipsec \ifx \@nodocument \relax \leavevmode \global \@no
skipsecfalse \fi \fi \if@inlabel \leavevmode \global \@inlabelfalse \fi \if@nob
reak \@nobreakfalse \everypar {}\fi \par 

\par ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D \hoo
k_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_compa
re:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_use:
n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode}{en
d}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\use_ii:nn #1#2->#2
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\do@output@MVL #1->\@ifvmode {\begingroup \execute@message {\unvbox \@cclv #1}\
endgroup }{\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv #1}}}{\@latexe
rr {\string \do@output@MVL \space cannot be executed in this mode!}\@eha }}
#1<-\vfil \penalty -\pagebreak@pen 

\@ifvmode ->\ifvmode \expandafter \true@sw \else \expandafter \false@sw \fi 

\true@sw #1#2->#1
#1<-\begingroup \execute@message {\unvbox \@cclv \vfil \penalty -\pagebreak@pen
 }\endgroup 
#2<-\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv \vfil \penalty -\page
break@pen }}}{\@latexerr {\string \do@output@MVL \space cannot be executed in t
his mode!}\@eha }

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\unvbox \@cclv \vfil \penalty -\pagebreak@pen 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\clearpage ->\newpage@prep \do@output@MVL {\vfil \penalty -\pagebreak@pen \glob
al \@booleantrue \clearpage@sw \protect@penalty \do@startcolumn@pen \protect@pe
nalty \do@endpage@pen }\do@output@MVL {\global \@booleanfalse \clearpage@sw }

\newpage@prep ->\if@noskipsec \ifx \@nodocument \relax \leavevmode \global \@no
skipsecfalse \fi \fi \if@inlabel \leavevmode \global \@inlabelfalse \fi \if@nob
reak \@nobreakfalse \everypar {}\fi \par 

\par ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D \hoo
k_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_compa
re:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_use:
n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode}{en
d}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\use_ii:nn #1#2->#2
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\true@sw #1#2->#1
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->

\true@sw #1#2->#1
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \unvbox \@cclv \vfil \penalty -\pagebreak@pen 

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\true@sw #1#2->#1
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\natural@output 

\natural@output ->\toggle@insert {\output@holding }{\output@moving }

\toggle@insert #1#2->\@ifnum {\holdinginserts >\z@ }{\move@insertions #1}{\hold
@insertions #2}
#1<-\output@holding 
#2<-\output@moving 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\holdinginserts >\z@ 

\true@sw #1#2->#1
#1<-\move@insertions \output@holding 
#2<-\hold@insertions \output@moving 

\move@insertions ->\global \holdinginserts \z@ 

\output@holding ->\csname output@init@\bot@envir \endcsname \@if@exceed@pagegoa
l {\unvcopy \@cclv }{\setbox \z@ \vbox {\unvcopy \@cclv }\outputdebug@sw {\trac
e@box \z@ }{}\dimen@ \ht \@cclv \advance \dimen@ -\ht \z@ \dead@cycle@repair \d
imen@ }{\dead@cycle }

\bot@envir ->\expandafter \expandafter \expandafter \get@mark@thr@@ \expandafte
r \@@botmark \nul@mark 

\nul@mark ->{}{}{}{}\@@nul 

\get@mark@thr@@ #1#2#3#4#5\@@nul ->#3
#1<-
#2<-
#3<-document
#4<-
#5<-{}{}{}{}

\output@init@document ->\ltxgrid@info@sw {\class@info {\string \output@init@doc
ument }}{}\global \vsize \vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \output@init@document }
#2<-

\@if@exceed@pagegoal #1->\begingroup \setbox \z@ \vbox {#1}\dimen@ \ht \z@ \adv
ance \dimen@ \dp \z@ \outputdebug@sw {\saythe \dimen@ }{}\@ifdim {\dimen@ >\pag
egoal }{\setbox \z@ \vbox {\@@mark {}\unvbox \z@ }\splittopskip \topskip \split
maxdepth \maxdepth \vbadness \@M \vfuzz \maxdimen \setbox \tw@ \vsplit \z@ to\p
agegoal \outputdebug@sw {\trace@scroll {\showbox \tw@ \showbox \z@ }}{}\setbox 
\tw@ \vbox {\unvbox \tw@ }\@ifdim {\ht \tw@ =\z@ }{\ltxgrid@info {Found overly 
large chunk while preparing to move insertions. Attempting repairs}\aftergroup 
\true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\endgroup 
#1<-\unvcopy \@cclv 

\outputdebug@sw #1#2->#2
#1<-\saythe \dimen@ 
#2<-

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ >\pagegoal 

\false@sw #1#2->#2
#1<-\setbox \z@ \vbox {\@@mark {}\unvbox \z@ }\splittopskip \topskip \splitmaxd
epth \maxdepth \vbadness \@M \vfuzz \maxdimen \setbox \tw@ \vsplit \z@ to\pageg
oal \outputdebug@sw {\trace@scroll {\showbox \tw@ \showbox \z@ }}{}\setbox \tw@
 \vbox {\unvbox \tw@ }\@ifdim {\ht \tw@ =\z@ }{\ltxgrid@info {Found overly larg
e chunk while preparing to move insertions. Attempting repairs}\aftergroup \tru
e@sw }{\aftergroup \false@sw }
#2<-\aftergroup \false@sw 

\false@sw #1#2->#2
#1<-\setbox \z@ \vbox {\unvcopy \@cclv }\outputdebug@sw {\trace@box \z@ }{}\dim
en@ \ht \@cclv \advance \dimen@ -\ht \z@ \dead@cycle@repair \dimen@ 
#2<-\dead@cycle 

\dead@cycle ->\expandafter \do@@mark \expandafter {\@@botmark }\unvbox \@cclv \
@ifnum {\outputpenalty <\@M }{\penalty \outputpenalty }{}

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty <\@M 

\true@sw #1#2->#1
#1<-\penalty \outputpenalty 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\true@sw #1#2->#1
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\natural@output 

\natural@output ->\toggle@insert {\output@holding }{\output@moving }

\toggle@insert #1#2->\@ifnum {\holdinginserts >\z@ }{\move@insertions #1}{\hold
@insertions #2}
#1<-\output@holding 
#2<-\output@moving 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\holdinginserts >\z@ 

\false@sw #1#2->#2
#1<-\move@insertions \output@holding 
#2<-\hold@insertions \output@moving 

\hold@insertions ->\global \holdinginserts \@ne 

\output@moving ->\set@top@firstmark \@ifnum {\outputpenalty =\do@newpage@pen }{
\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \@ifdim {\ht \z@ =\ht \@pr
otection@box }{\box \lastbox }{\unskip }}}{}\@cclv@nontrivial@sw {\expandafter 
\output@do@prep \csname output@prep@\bot@envir \endcsname \@makecolumn \true@sw
 \expandafter \output@column@do \csname output@column@\thepagegrid \endcsname \
protect@penalty \do@startcolumn@pen \clearpage@sw {\protect@penalty \do@endpage
@pen }{}\expandafter \let \expandafter \output@post@ \csname output@post@\bot@e
nvir \endcsname \outputdebug@sw {\say \output@post@ }{}\@ifx {\output@post@ \re
lax }{\output@post@document }{\output@post@ }}{\void@cclv }\set@colht \global \
@mparbottom \z@ \global \@textfloatsheight \z@ 

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty =\do@newpage@pen 

\false@sw #1#2->#2
#1<-\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \@ifdim {\ht \z@ =\ht 
\@protection@box }{\box \lastbox }{\unskip }}
#2<-

\@cclv@nontrivial@sw ->\@ifx@empty \@toplist {\@ifx@empty \@botlist {\@ifvoid \
footins {\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy \@cclv }\@ifd
im {\ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \
dimen@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dim
en@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \fa
lse@sw }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}{\@ifdim {\ht 
\z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\outputdebug@sw {
\trace@box \@cclv }{}\false@sw }{\true@sw }}}}{\true@sw }}{\true@sw }}{\true@sw
 }

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@toplist 

\true@sw #1#2->#1
#1<-\@ifx@empty \@botlist {\@ifvoid \footins {\@ifvoid \@cclv {\false@sw }{\set
box \z@ \vbox {\unvcopy \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z@ \vbox 
\bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \unskip \@ifdim {\ht \z@ 
=\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\
aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\egroup {
\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial co
lumn. Discarding it}\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw 
}}}}{\true@sw }}{\true@sw }
#2<-\true@sw 

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@botlist 

\true@sw #1#2->#1
#1<-\@ifvoid \footins {\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy
 \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \re
move@lastbox \dimen@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }
{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\
aftergroup \false@sw }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}
{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\ou
tputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw }}}}{\true@sw }
#2<-\true@sw 

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\footins 

\true@sw #1#2->#1
#1<-\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy \@cclv }\@ifdim {\
ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen
@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dimen@ \
ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \false@s
w }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =
\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\outputdebug@sw {\trac
e@box \@cclv }{}\false@sw }{\true@sw }}}
#2<-\true@sw 

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv 

\false@sw #1#2->#2
#1<-\false@sw 
#2<-\setbox \z@ \vbox {\unvcopy \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z
@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \unskip \@ifdim {
\ht \z@ =\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\top
skip }{\aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\
egroup {\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found tr
ivial column. Discarding it}\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\
true@sw }}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\ht \z@ =\topskip 

\false@sw #1#2->#2
#1<-\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \un
skip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim 
{\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergrou
p \false@sw }\egroup {\false@sw }{\true@sw }
#2<-\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}
\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw }

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\ht \z@ =\z@ 

\false@sw #1#2->#2
#1<-\ltxgrid@info {Found trivial column. Discarding it}\outputdebug@sw {\trace@
box \@cclv }{}\false@sw 
#2<-\true@sw 

\true@sw #1#2->#1
#1<-\expandafter \output@do@prep \csname output@prep@\bot@envir \endcsname \@ma
kecolumn \true@sw \expandafter \output@column@do \csname output@column@\thepage
grid \endcsname \protect@penalty \do@startcolumn@pen \clearpage@sw {\protect@pe
nalty \do@endpage@pen }{}\expandafter \let \expandafter \output@post@ \csname o
utput@post@\bot@envir \endcsname \outputdebug@sw {\say \output@post@ }{}\@ifx {
\output@post@ \relax }{\output@post@document }{\output@post@ }
#2<-\void@cclv 

\bot@envir ->\expandafter \expandafter \expandafter \get@mark@thr@@ \expandafte
r \@@botmark \nul@mark 

\nul@mark ->{}{}{}{}\@@nul 

\get@mark@thr@@ #1#2#3#4#5\@@nul ->#3
#1<-
#2<-
#3<-document
#4<-
#5<-{}{}{}{}

\output@do@prep #1->\outputdebug@sw {\class@info {Prep: \string #1}}{}\@ifx {#1
\relax }{\output@prep@document }{#1}
#1<-\output@prep@document 

\outputdebug@sw #1#2->#2
#1<-\class@info {Prep: \string \output@prep@document }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@prep@document \relax 

\false@sw #1#2->#2
#1<-\output@prep@document 
#2<-\output@prep@document 

\output@prep@document ->\ltxgrid@foot@info@sw {\class@info {\string \output@pre
p@document }\trace@scroll {\showbox \footins \showbox \footsofar }}{}\@ifvoid \
footsofar {}{\global \setbox \footins \vbox \bgroup \unvbox \footsofar \@ifvoid
 \footins {}{\marry@baselines \unvbox \footins }\egroup \ltxgrid@foot@info@sw {
\trace@box \footins }{}}

\ltxgrid@foot@info@sw #1#2->#2
#1<-\class@info {\string \output@prep@document }\trace@scroll {\showbox \footin
s \showbox \footsofar }
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\footsofar 

\true@sw #1#2->#1
#1<-
#2<-\global \setbox \footins \vbox \bgroup \unvbox \footsofar \@ifvoid \footins
 {}{\marry@baselines \unvbox \footins }\egroup \ltxgrid@foot@info@sw {\trace@bo
x \footins }{}

\@makecolumn #1->\ltxgrid@foot@info@sw {\class@info {\string \@makecolumn \stri
ng #1}}{}\setbox \@outputbox \vbox \bgroup \boxmaxdepth \@maxdepth \@tempdima \
dp \@cclv \unvbox \@cclv \vskip -\@tempdima \egroup \xdef \@freelist {\@freelis
t \@midlist }\global \let \@midlist \@empty \show@text@box@size \@combinefloats
 #1{\@combineinserts \@outputbox \footins }{\combine@foot@inserts \footsofar \f
ootins }\set@adj@colht \dimen@ \count@ \vbadness \vbadness \@M \setbox \@output
box \vbox to\dimen@ \bgroup \@texttop \dimen@ \dp \@outputbox \unvbox \@outputb
ox \vskip -\dimen@ \@textbottom \egroup \vbadness \count@ \global \maxdepth \@m
axdepth 
#1<-\true@sw 

\ltxgrid@foot@info@sw #1#2->#2
#1<-\class@info {\string \@makecolumn \string \true@sw }
#2<-

\@freelist ->\@elt \bx@A \@elt \bx@B \@elt \bx@C \@elt \bx@D \@elt \bx@E \@elt 
\bx@F \@elt \bx@G \@elt \bx@H \@elt \bx@I \@elt \bx@J \@elt \bx@K \@elt \bx@L \
@elt \bx@M \@elt \bx@N \@elt \bx@O \@elt \bx@P \@elt \bx@Q \@elt \bx@R \@elt \b
x@S \@elt \bx@T \@elt \bx@U \@elt \bx@V \@elt \bx@W \@elt \bx@X \@elt \bx@Y \@e
lt \bx@Z \@elt \bx@AA \@elt \bx@BB \@elt \bx@CC \@elt \bx@DD \@elt \bx@EE \@elt
 \bx@FF \@elt \bx@GG \@elt \bx@HH \@elt \bx@II \@elt \bx@JJ \@elt \bx@KK \@elt 
\bx@LL \@elt \bx@MM \@elt \bx@NN \@elt \bx@OO \@elt \bx@PP \@elt \bx@QQ \@elt \
bx@RR \@elt \bx@SS \@elt \bx@TT \@elt \bx@UU \@elt \bx@VV \@elt \bx@WW \@elt \b
x@XX \@elt \bx@YY \@elt \bx@ZZ 

\@midlist ->

\show@text@box@size ->\show@box@size {Text column}\@outputbox \tally@box@size@s
w {\@ifdim {\wd \@outputbox >\z@ }{\dimen@ \ht \@outputbox \divide \dimen@ \@tw
opowerfourteen \advance \dimen@ -\dp \csname box@size@\the \pagegrid@col \endcs
name \@ifdim {\dimen@ >\z@ }{\advance \dimen@ \ht \csname box@size@\the \pagegr
id@col \endcsname \global \ht \csname box@size@\the \pagegrid@col \endcsname \d
imen@ \show@box@size@sw {\class@info {Column: \the \dimen@ }}{}}{}}{}\global \d
p \csname box@size@\the \pagegrid@col \endcsname \z@ }{}

\show@box@size #1#2->\show@box@size@sw {\begingroup \setbox \z@ \vbox {\unvcopy
 #2\hrule }\class@info {Show box size: #1
(\the \ht \z@ \space X \the \wd \z@ ) \the \c@page \space \space \the \pagegrid
@cur \space \the \pagegrid@col }\endgroup }{}
#1<-Text column
#2<-\@outputbox 

\show@box@size@sw #1#2->#2
#1<-\begingroup \setbox \z@ \vbox {\unvcopy \@outputbox \hrule }\class@info {Sh
ow box size: Text column
(\the \ht \z@ \space X \the \wd \z@ ) \the \c@page \space \space \the \pagegrid
@cur \space \the \pagegrid@col }\endgroup 
#2<-

\tally@box@size@sw #1#2->#2
#1<-\@ifdim {\wd \@outputbox >\z@ }{\dimen@ \ht \@outputbox \divide \dimen@ \@t
wopowerfourteen \advance \dimen@ -\dp \csname box@size@\the \pagegrid@col \endc
sname \@ifdim {\dimen@ >\z@ }{\advance \dimen@ \ht \csname box@size@\the \pageg
rid@col \endcsname \global \ht \csname box@size@\the \pagegrid@col \endcsname \
dimen@ \show@box@size@sw {\class@info {Column: \the \dimen@ }}{}}{}}{}\global \
dp \csname box@size@\the \pagegrid@col \endcsname \z@ 
#2<-

\@combinefloats ->\ifx \@toplist \@empty \else \@cflt \fi \ifx \@botlist \@empt
y \else \@cflb \fi 

\true@sw #1#2->#1
#1<-\@combineinserts \@outputbox \footins 
#2<-\combine@foot@inserts \footsofar \footins 

\@combineinserts #1#2->\ltxgrid@foot@info@sw {\class@info {\string \@combineins
erts \string #1\string #2}\trace@box #2}{}\setbox #1\vbox \bgroup \unvbox #1\@i
fvoid {#2}{}{\dimen@ \ht #2\advance \dimen@ \dp #2\advance \dimen@ \skip #2\sho
w@box@size {Combining inserts}#2\vskip \skip #2\setbox \z@ \vbox {\footnoterule
 }\dimen@i \ht \z@ \color@begingroup \normalcolor \cleaders \box \z@ \vskip \di
men@i \kern -\dimen@i \csname combine@insert@\the \pagegrid@col \endcsname #2\c
olor@endgroup \kern -\dimen@ \kern \dimen@ }\egroup \ltxgrid@foot@info@sw {\tra
ce@box #1}{}
#1<-\@outputbox 
#2<-\footins 

\ltxgrid@foot@info@sw #1#2->#2
#1<-\class@info {\string \@combineinserts \string \@outputbox \string \footins 
}\trace@box \footins 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\footins 

\true@sw #1#2->#1
#1<-
#2<-\dimen@ \ht \footins \advance \dimen@ \dp \footins \advance \dimen@ \skip \
footins \show@box@size {Combining inserts}\footins \vskip \skip \footins \setbo
x \z@ \vbox {\footnoterule }\dimen@i \ht \z@ \color@begingroup \normalcolor \cl
eaders \box \z@ \vskip \dimen@i \kern -\dimen@i \csname combine@insert@\the \pa
gegrid@col \endcsname \footins \color@endgroup \kern -\dimen@ \kern \dimen@ 

\ltxgrid@foot@info@sw #1#2->#2
#1<-\trace@box \@outputbox 
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\dimen@ 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \dimen@ -\string \pagesofar }\s
aythe \dimen@ 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \dimen@ -\ht \pagesofar \advance \dimen@ -\dp \pagesofar \ltxgrid@
info@sw {\class@info {\string \pagesofar }\saythe \dimen@ }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\thepagegrid ->one

\output@column@do #1->\outputdebug@sw {\class@info {Output column: \string #1}}
{}\@ifx {#1\relax }{\output@column@one }{#1}
#1<-\output@column@one 

\outputdebug@sw #1#2->#2
#1<-\class@info {Output column: \string \output@column@one }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@column@one \relax 

\false@sw #1#2->#2
#1<-\output@column@one 
#2<-\output@column@one 

\output@column@one ->\@outputpage 

\@outputpage ->\@outputpage@head \begingroup \let \protect \noexpand \language 
\document@default@language \@resetactivechars \global \let \@@if@newlist \if@ne
wlist \global \@newlistfalse \@parboxrestore \shipout \vbox {\set@typeset@prote
ct \aftergroup \endgroup \aftergroup \set@typeset@protect \if@specialpage \glob
al \@specialpagefalse \@nameuse {ps@\@specialstyle }\fi \if@twoside \ifodd \cou
nt \z@ \let \@thehead \@oddhead \let \@thefoot \@oddfoot \let \@themargin \odds
idemargin \else \let \@thehead \@evenhead \let \@thefoot \@evenfoot \let \@them
argin \evensidemargin \fi \fi \reset@font \normalsize \normalsfcodes \let \labe
l \@gobble \let \index \@gobble \let \glossary \@gobble \baselineskip \z@skip \
lineskip \z@skip \lineskiplimit \z@ \@begindvi \vskip \topmargin \moveright \@t
hemargin \vbox {\setbox \@tempboxa \vbox to\headheight {\vfil \color@hbox \norm
alcolor \hb@xt@ \textwidth {\@thehead }\color@endbox }\dp \@tempboxa \z@ \box \
@tempboxa \vskip \headsep \box \@outputbox \baselineskip \footskip \color@hbox 
\normalcolor \hb@xt@ \textwidth {\@thefoot }\color@endbox }}\global \let \if@ne
wlist \@@if@newlist \global \@colht \textheight \stepcounter {page}\let \firstm
ark \botmark \@outputpage@tail 

\@outputpage@head ->\textheight@sw {\count@ \vbadness \vbadness \@M \dimen@ \vf
uzz \vfuzz \maxdimen \setbox \@outputbox \vbox to\textheight {\unvbox \@outputb
ox }\vfuzz \dimen@ \vbadness \count@ }{}\@ifx {\LS@rot \@undefined }{}{\LS@rot 
}

\textheight@sw #1#2->#1
#1<-\count@ \vbadness \vbadness \@M \dimen@ \vfuzz \vfuzz \maxdimen \setbox \@o
utputbox \vbox to\textheight {\unvbox \@outputbox }\vfuzz \dimen@ \vbadness \co
unt@ 
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\LS@rot \@undefined 

\true@sw #1#2->#1
#1<-
#2<-\LS@rot 

\@resetactivechars ->\def ^^M{\@activechar@info {EOL}\space }\def  {\@activecha
r@info {space}\space }\let '\active@math@prime 

\@newlistfalse ->\let \if@newlist \iffalse 

\@parboxrestore ->\@arrayparboxrestore \let \\\@normalcr 

\@arrayparboxrestore ->\let \if@nobreak \iffalse \let \if@noskipsec \iffalse \l
et \par \@@par \let \-\@dischyph \let \'\@acci \let \`\@accii \let \=\@acciii \
parindent \z@ \parskip \z@skip \everypar {}\linewidth \hsize \@totalleftmargin 
\z@ \leftskip \z@skip \rightskip \z@skip \@rightskip \z@skip \parfillskip \@flu
shglue \lineskip \normallineskip \lineskiplimit \normallineskiplimit \baselines
kip \normalbaselineskip \sloppy 

\sloppy ->\protect \sloppy  

\shipout ->\tl_set:Nx \l__shipout_group_level_tl {\int_value:w \tex_currentgrou
plevel:D }\tex_afterassignment:D \__shipout_execute_test_level: \tex_setbox:D \
l_shipout_box 

\tl_set:Nx #1#2->\__kernel_tl_set:Nx #1{#2}
#1<-\l__shipout_group_level_tl 
#2<-\int_value:w \tex_currentgrouplevel:D 

\__shipout_execute_test_level: ->\int_compare:nNnT \l__shipout_group_level_tl <
\tex_currentgrouplevel:D \tex_aftergroup:D \__shipout_execute_cont: 

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\l__shipout_group_level_tl 
#2<-<
#3<-\tex_currentgrouplevel:D 

\l__shipout_group_level_tl ->2

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\tex_aftergroup:D 

\set@typeset@protect ->\let \protect \@typeset@protect 

\reset@font ->\protect \normalfont  

\normalfont  ->\fontencoding \encodingdefault \edef \f@family {\familydefault }
\edef \f@series {\seriesdefault }\edef \f@shape {\shapedefault }\let \delayed@f
@adjustment \@empty \UseHook {normalfont}\@defaultfamilyhook \selectfont 

\fontencoding ->\protect \fontencoding  

\fontencoding  #1->\expandafter \ifx \csname T@#1\endcsname \relax \@latex@erro
r {Encoding scheme `#1' unknown}\@eha \else \edef \f@encoding {#1}\ifx \cf@enco
ding \f@encoding \let \enc@update \relax \else \let \enc@update \@@enc@update \
fi \fi 
#1<-\encodingdefault 

\encodingdefault ->OT1

\encodingdefault ->OT1

\familydefault ->\rmdefault 

\rmdefault ->cmr

\seriesdefault ->m

\shapedefault ->n

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-normalfont

\__hook normalfont ->\__hook_toplevel normalfont \__hook_next normalfont 

\__hook_toplevel normalfont ->

\__hook_next normalfont ->

\@defaultfamilyhook ->

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\normalsize ->\@setfontsize \normalsize \@xpt {11.5}\abovedisplayskip 10\p@ \@p
lus 2\p@ \@minus 5\p@ \belowdisplayskip \abovedisplayskip \abovedisplayshortski
p \abovedisplayskip \belowdisplayshortskip \abovedisplayskip \let \@listi \@lis
tI 

\@setfontsize #1#2#3->\@nomath #1\ifx \protect \@typeset@protect \let \@currsiz
e #1\fi \fontsize {#2}{#3}\selectfont 
#1<-\normalsize 
#2<-\@xpt 
#3<-11.5

\@nomath #1->\relax \ifmmode \@font@warning {Command \noexpand #1invalid in mat
h mode}\fi 
#1<-\normalsize 

\fontsize ->\protect \fontsize  

\fontsize  #1#2->\set@fontsize \baselinestretch {#1}{#2}
#1<-\@xpt 
#2<-11.5

\set@fontsize #1#2#3->\@defaultunits \@tempdimb #2pt\relax \@nnil \edef \f@size
 {\strip@pt \@tempdimb }\@defaultunits \@tempskipa #3pt\relax \@nnil \edef \f@b
aselineskip {\the \@tempskipa }\edef \f@linespread {#1}\let \baselinestretch \f
@linespread \def \size@update {\baselineskip \f@baselineskip \relax \baselinesk
ip \f@linespread \baselineskip \normalbaselineskip \baselineskip \setbox \strut
box \hbox {\vrule \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ 
}\let \size@update \relax }
#1<-\baselinestretch 
#2<-\@xpt 
#3<-11.5

\@defaultunits ->\afterassignment \remove@to@nnil 

\@xpt ->10

\remove@to@nnil #1\@nnil ->
#1<-\relax 

\strip@pt ->\expandafter \rem@pt \the 

\rem@pt #1.#2pt->#1\ifnum #2>\z@ .#2\fi 
#1<-10
#2<-0

\@defaultunits ->\afterassignment \remove@to@nnil 

\remove@to@nnil #1\@nnil ->
#1<-\relax 

\baselinestretch ->1

\selectfont ->\protect \selectfont  

\selectfont  ->\ifx \f@linespread \baselinestretch \else \set@fontsize \baselin
estretch \f@size \f@baselineskip \fi \ifx \delayed@f@adjustment \@empty \else \
let \f@shape@saved \f@shape \let \f@series@saved \f@series \delayed@f@adjustmen
t \maybe@load@fontshape \ifcsname \f@encoding /\f@family /\f@series /\f@shape \
endcsname \else \let \f@shape \f@shape@saved \let \f@series \f@series@saved \le
t \delayed@merge@font@shape \merge@font@shape \let \delayed@merge@font@series \
merge@font@series \delayed@f@adjustment \let \delayed@merge@font@shape \merge@f
ont@shape@without@substitution \let \delayed@merge@font@series \merge@font@seri
es@without@substitution \fi \let \delayed@f@adjustment \@empty \fi \@forced@ser
iesfalse \xdef \font@name {\csname \curr@fontshape /\f@size \endcsname }\pickup
@font \font@name \UseHook {selectfont}\size@update \enc@update 

\@forced@seriesfalse ->\let \if@forced@series \iffalse 

\curr@fontshape ->\f@encoding /\f@family /\f@series /\f@shape 

\f@encoding ->OT1

\f@family ->cmr

\f@series ->m

\f@shape ->n

\f@size ->10

\pickup@font ->\expandafter \ifx \font@name \relax \define@newfont \fi 

\font@name ->\OT1/cmr/m/n/10 

\font@name ->\OT1/cmr/m/n/10 

\UseHook ->\hook_use:n 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-selectfont

\__hook selectfont ->\__hook_toplevel selectfont \__hook_next selectfont 

\__hook_toplevel selectfont ->

\__hook_next selectfont ->

\size@update ->\baselineskip \f@baselineskip \relax \baselineskip \f@linespread
 \baselineskip \normalbaselineskip \baselineskip \setbox \strutbox \hbox {\vrul
e \@height .7\baselineskip \@depth .3\baselineskip \@width \z@ }\let \size@upda
te \relax 

\f@baselineskip ->11.5pt

\f@linespread ->1

\@height ->height

\@depth ->depth

\@width ->width

\@plus ->plus

\@minus ->minus

\normalsfcodes ->\protect \nonfrenchspacing  

\nonfrenchspacing  ->\sfcode `\.3000\sfcode `\?3000\sfcode `\!3000\sfcode `\:20
00\sfcode `\;1500\sfcode `\,1250 

\@begindvi ->\unvbox \@begindvibox \global \let \@begindvi \@empty 

\color@hbox ->\hbox \bgroup \color@begingroup 

\hb@xt@ ->\hbox to

\@thehead ->\@oddhead 

\@oddhead ->\let \\\heading@cr {\rightmark }\hfil \checkindate \quad \thepage 

\rightmark ->\expandafter \expandafter \expandafter \get@mark@tw@ \expandafter 
\saved@@firstmark \nul@mark 

\nul@mark ->{}{}{}{}\@@nul 

\saved@@firstmark ->{}{}{document}{}

\get@mark@tw@ #1#2#3#4#5\@@nul ->#2
#1<-
#2<-
#3<-document
#4<-
#5<-{}{}{}{}

\checkindate ->\dateinRH@sw {{\tiny (\today )}}{}

\dateinRH@sw #1#2->#2
#1<-{\tiny (\today )}
#2<-

\quad ->\hskip 1em\relax 

\thepage ->\@arabic \c@page 

\@arabic #1->\number #1
#1<-\c@page 

\color@endbox ->\color@endgroup \egroup 

\color@endgroup ->\endgraf \endgroup 

\endgraf ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D 
\hook_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_c
ompare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_
use:n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode
}{end}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\mode_if_inner:F ->\if_mode_inner: \__prg_F_true:w \fi: \use:n 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@end \mode_if_horizo
ntal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi:
 \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after }{\msg_error:nnnn
 {hooks}{para-mode}{end}{horizontal}}

\color@hbox ->\hbox \bgroup \color@begingroup 

\hb@xt@ ->\hbox to

\@thefoot ->\@oddfoot 

\@oddfoot ->

\color@endbox ->\color@endgroup \egroup 

\color@endgroup ->\endgraf \endgroup 

\endgraf ->\scan_stop: \mode_if_horizontal:TF {\mode_if_inner:F {\tex_unskip:D 
\hook_use:n {para/end}\@kernel@after@para@end \mode_if_horizontal:TF {\if_int_c
ompare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi: \tex_par:D \hook_
use:n {para/after}\@kernel@after@para@after }{\msg_error:nnnn {hooks}{para-mode
}{end}{horizontal}}}}\tex_par:D 

\mode_if_horizontal:TF ->\if_mode_horizontal: \__prg_TF_true:w \fi: \use_ii:nn 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\mode_if_inner:F {\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@e
nd \mode_if_horizontal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:
D \c_zero_dim \fi: \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after
 }{\msg_error:nnnn {hooks}{para-mode}{end}{horizontal}}}
#2<-\tex_par:D 

\mode_if_inner:F ->\if_mode_inner: \__prg_F_true:w \fi: \use:n 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tex_unskip:D \hook_use:n {para/end}\@kernel@after@para@end \mode_if_horizo
ntal:TF {\if_int_compare:w 11=\tex_lastnodetype:D \tex_hskip:D \c_zero_dim \fi:
 \tex_par:D \hook_use:n {para/after}\@kernel@after@para@after }{\msg_error:nnnn
 {hooks}{para-mode}{end}{horizontal}}

\__shipout_execute_cont: ->\__shipout_execute_main_cont:Nnnn \l_shipout_box {\h
ook_use:n {shipout/before}}{\hook_if_empty:nF {shipout/foreground}{\__shipout_a
dd_foreground_picture:n {\hook_use:n {shipout/foreground}}}\bool_lazy_and:nnF {
\hook_if_empty_p:n {shipout/background}}{\tl_if_empty_p:N \@kernel@before@shipo
ut@background }{\__shipout_add_background_picture:n {\@kernel@before@shipout@ba
ckground \hook_use:n {shipout/background}\@kernel@after@shipout@background }}}{
\hook_use:n {shipout/after}}

\__shipout_execute_main_cont:Nnnn #1#2#3#4->\box_if_empty:NTF #1{\@latex@warnin
g@no@line {Ignoring void shipout box}}{\cs_set_eq:NN \__shipout_saved_protect: 
\protect \set@typeset@protect \__shipout_get_box_size:N #1#2\int_gincr:N \g_shi
pout_totalpages_int \bool_if:NTF \g__shipout_discard_bool {\@latex@info@no@line
 {Completed page discarded}\bool_gset_false:N \g__shipout_discard_bool \tex_dea
dcycles:D \c_zero_int }{\box_if_empty:NTF #1{\@latex@warning@no@line {Ignoring 
void shipout box.\MessageBreak The shipout box was voided by hook code}}{\int_g
incr:N \g_shipout_readonly_int \__shipout_debug:n {\typeout {Absolute page = \i
nt_use:N \g_shipout_readonly_int \space (target: \@abspage@last )}}\__shipout_g
et_box_size:N #1\__shipout_run_firstpage_hook: #3\__shipout_add_firstpage_speci
als: \int_compare:nNnT \@abspage@last =\g_shipout_readonly_int {\bool_lazy_and:
nnF {\hook_if_empty_p:n {shipout/lastpage}}{\tl_if_empty_p:N \@kernel@after@shi
pout@lastpage }{\__shipout_debug:n {\typeout {Executing lastpage hook on page \
int_use:N \g_shipout_readonly_int }}\__shipout_add_foreground_box:n {\UseHook {
shipout/lastpage}\@kernel@after@shipout@lastpage }\bool_gset_true:N \g__shipout
_lastpage_handled_bool }}\__shipout_finalize_box: \cs_set_eq:NN \protect \exp_n
ot:N \tex_shipout:D \box_use:N \l_shipout_box \__shipout_drop_firstpage_special
s: \set@typeset@protect #4}}\cs_set_eq:NN \protect \__shipout_saved_protect: }
#1<-\l_shipout_box 
#2<-\hook_use:n {shipout/before}
#3<-\hook_if_empty:nF {shipout/foreground}{\__shipout_add_foreground_picture:n 
{\hook_use:n {shipout/foreground}}}\bool_lazy_and:nnF {\hook_if_empty_p:n {ship
out/background}}{\tl_if_empty_p:N \@kernel@before@shipout@background }{\__shipo
ut_add_background_picture:n {\@kernel@before@shipout@background \hook_use:n {sh
ipout/background}\@kernel@after@shipout@background }}
#4<-\hook_use:n {shipout/after}

\box_if_empty:NTF #1->\if_box_empty:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\l_shipout_box 

\use_ii:nn #1#2->#2
#1<-\@latex@warning@no@line {Ignoring void shipout box}
#2<-\cs_set_eq:NN \__shipout_saved_protect: \protect \set@typeset@protect \__sh
ipout_get_box_size:N \l_shipout_box \hook_use:n {shipout/before}\int_gincr:N \g
_shipout_totalpages_int \bool_if:NTF \g__shipout_discard_bool {\@latex@info@no@
line {Completed page discarded}\bool_gset_false:N \g__shipout_discard_bool \tex
_deadcycles:D \c_zero_int }{\box_if_empty:NTF \l_shipout_box {\@latex@warning@n
o@line {Ignoring void shipout box.\MessageBreak The shipout box was voided by h
ook code}}{\int_gincr:N \g_shipout_readonly_int \__shipout_debug:n {\typeout {A
bsolute page = \int_use:N \g_shipout_readonly_int \space (target: \@abspage@las
t )}}\__shipout_get_box_size:N \l_shipout_box \__shipout_run_firstpage_hook: \h
ook_if_empty:nF {shipout/foreground}{\__shipout_add_foreground_picture:n {\hook
_use:n {shipout/foreground}}}\bool_lazy_and:nnF {\hook_if_empty_p:n {shipout/ba
ckground}}{\tl_if_empty_p:N \@kernel@before@shipout@background }{\__shipout_add
_background_picture:n {\@kernel@before@shipout@background \ETC.

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__shipout_saved_protect: 

\set@typeset@protect ->\let \protect \@typeset@protect 

\__shipout_get_box_size:N #1->\dim_set:Nn \l_shipout_box_ht_dim {\box_ht:N #1}\
dim_set:Nn \l_shipout_box_dp_dim {\box_dp:N #1}\dim_set:Nn \l_shipout_box_wd_di
m {\box_wd:N #1}\dim_set:Nn \l_shipout_box_ht_plus_dp_dim {\l_shipout_box_ht_di
m +\l_shipout_box_dp_dim }
#1<-\l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_ht_dim 
#2<-\box_ht:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_dp_dim 
#2<-\box_dp:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_wd_dim 
#2<-\box_wd:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_ht_plus_dp_dim 
#2<-\l_shipout_box_ht_dim +\l_shipout_box_dp_dim 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-shipout/before

\__hook shipout/before ->\__hook_toplevel shipout/before \__hook_next shipout/b
efore 

\__hook_toplevel shipout/before ->

\__hook_next shipout/before ->

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g_shipout_totalpages_int 

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__shipout_discard_bool 

\use_ii:nn #1#2->#2
#1<-\@latex@info@no@line {Completed page discarded}\bool_gset_false:N \g__shipo
ut_discard_bool \tex_deadcycles:D \c_zero_int 
#2<-\box_if_empty:NTF \l_shipout_box {\@latex@warning@no@line {Ignoring void sh
ipout box.\MessageBreak The shipout box was voided by hook code}}{\int_gincr:N 
\g_shipout_readonly_int \__shipout_debug:n {\typeout {Absolute page = \int_use:
N \g_shipout_readonly_int \space (target: \@abspage@last )}}\__shipout_get_box_
size:N \l_shipout_box \__shipout_run_firstpage_hook: \hook_if_empty:nF {shipout
/foreground}{\__shipout_add_foreground_picture:n {\hook_use:n {shipout/foregrou
nd}}}\bool_lazy_and:nnF {\hook_if_empty_p:n {shipout/background}}{\tl_if_empty_
p:N \@kernel@before@shipout@background }{\__shipout_add_background_picture:n {\
@kernel@before@shipout@background \hook_use:n {shipout/background}\@kernel@afte
r@shipout@background }}\__shipout_add_firstpage_specials: \int_compare:nNnT \@a
bspage@last =\g_shipout_readonly_int {\bool_lazy_and:nnF {\hook_if_empty_p:n {s
hipout/lastpage}}{\tl_if_empty_p:N \@kernel@after@shipout@lastpage }{\__shipout
_debug:n {\typeout {Executing lastpage hook on page \int_use:N \ETC.

\box_if_empty:NTF #1->\if_box_empty:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\l_shipout_box 

\use_ii:nn #1#2->#2
#1<-\@latex@warning@no@line {Ignoring void shipout box.\MessageBreak The shipou
t box was voided by hook code}
#2<-\int_gincr:N \g_shipout_readonly_int \__shipout_debug:n {\typeout {Absolute
 page = \int_use:N \g_shipout_readonly_int \space (target: \@abspage@last )}}\_
_shipout_get_box_size:N \l_shipout_box \__shipout_run_firstpage_hook: \hook_if_
empty:nF {shipout/foreground}{\__shipout_add_foreground_picture:n {\hook_use:n 
{shipout/foreground}}}\bool_lazy_and:nnF {\hook_if_empty_p:n {shipout/backgroun
d}}{\tl_if_empty_p:N \@kernel@before@shipout@background }{\__shipout_add_backgr
ound_picture:n {\@kernel@before@shipout@background \hook_use:n {shipout/backgro
und}\@kernel@after@shipout@background }}\__shipout_add_firstpage_specials: \int
_compare:nNnT \@abspage@last =\g_shipout_readonly_int {\bool_lazy_and:nnF {\hoo
k_if_empty_p:n {shipout/lastpage}}{\tl_if_empty_p:N \@kernel@after@shipout@last
page }{\__shipout_debug:n {\typeout {Executing lastpage hook on page \int_use:N
 \g_shipout_readonly_int }}\__shipout_add_foreground_box:n {\UseHook {shipout/l
astpage}\@kernel@after@shipout@lastpage }\bool_gset_true:N \ETC.

\int_gincr:N #1->\tex_global:D \tex_advance:D #1\c_one_int 
#1<-\g_shipout_readonly_int 

\__shipout_debug:n #1->
#1<-\typeout {Absolute page = \int_use:N \g_shipout_readonly_int \space (target
: \@abspage@last )}

\__shipout_get_box_size:N #1->\dim_set:Nn \l_shipout_box_ht_dim {\box_ht:N #1}\
dim_set:Nn \l_shipout_box_dp_dim {\box_dp:N #1}\dim_set:Nn \l_shipout_box_wd_di
m {\box_wd:N #1}\dim_set:Nn \l_shipout_box_ht_plus_dp_dim {\l_shipout_box_ht_di
m +\l_shipout_box_dp_dim }
#1<-\l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_ht_dim 
#2<-\box_ht:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_dp_dim 
#2<-\box_dp:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_wd_dim 
#2<-\box_wd:N \l_shipout_box 

\dim_set:Nn #1#2->#1=\__dim_eval:w #2\__dim_eval_end: \scan_stop: 
#1<-\l_shipout_box_ht_plus_dp_dim 
#2<-\l_shipout_box_ht_dim +\l_shipout_box_dp_dim 

\__shipout_run_firstpage_hook: ->\hook_if_empty:nTF {shipout/firstpage}{\cs_gse
t_eq:NN \__shipout_add_firstpage_specials: \prg_do_nothing: \cs_gset_eq:NN \__s
hipout_drop_firstpage_specials: \prg_do_nothing: }{\hbox_set:Nn \l__shipout_fir
stpage_box {\UseHook {shipout/firstpage}}}\cs_gset_eq:NN \__shipout_run_firstpa
ge_hook: \prg_do_nothing: \cs_gset:Npn \__shipout_add_firstpage_material:Nn ##1
##2{\@latex@warning {First page is already shipped out, ignoring\MessageBreak \
string ##1}}

\hook_if_empty:nTF #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF 
{\prop_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p
:c {__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: 
}{\prg_return_false: }}{\prg_return_true: }\exp_end: 
#1<-shipout/firstpage

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-shipout/firstpage

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_shipout/firstpage_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_shipout/firstpage_code_prop\cs_en
d: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_shipout/firstpage_code_pro
p}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}}{
\tl_if_empty_p:c {__hook_next shipout/firstpage}}}{\prg_return_true: }{\prg_ret
urn_false: }
#2<-\prg_return_true: 

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/firstpage_code_prop}
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}}{
\tl_if_empty_p:c {__hook_next shipout/firstpage}}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/firstpage_code_prop}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\prop_if_empty_p:c {g__hook_shipout/firstpage_code_prop}

\exp_end_continue_f:w ->`^^@

\prop_if_empty_p:c ->\exp_args:Nc \prop_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty_p:N 
#2<-g__hook_shipout/firstpage_code_prop

\prop_if_empty_p:N #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: \c_true_bool \c_false_bool 
#1<-\g__hook_shipout/firstpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/firstpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipou
t/firstpage}}{\tl_if_empty_p:c {__hook_next shipout/firstpage}}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}}{
\tl_if_empty_p:c {__hook_next shipout/firstpage}}

\exp_end_continue_f:w ->`^^@

\bool_lazy_and_p:nn #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_p_true:w \fi: \c_false_bool 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}
#2<-\tl_if_empty_p:c {__hook_next shipout/firstpage}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_toplevel shipout/firstpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_toplevel shipout/firstpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_toplevel shipout/firstpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:c {__hook_next shipout/firstpage}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_next shipout/firstpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_next shipout/firstpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_next shipout/firstpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\cs_gset_eq:NN \__shipout_add_firstpage_specials: \prg_do_nothing: \cs_gset
_eq:NN \__shipout_drop_firstpage_specials: \prg_do_nothing: 
#2<-\hbox_set:Nn \l__shipout_firstpage_box {\UseHook {shipout/firstpage}}

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__shipout_add_firstpage_specials: 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__shipout_drop_firstpage_specials: 

\cs_gset_eq:NN ->\tex_global:D \cs_set_eq:NN 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\__shipout_run_firstpage_hook: 

\cs_gset:Npn ->\tex_long:D \tex_gdef:D 

\hook_if_empty:nF #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF {
\prop_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p:
c {__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: }
{\prg_return_false: }}{\prg_return_true: }\exp_end: {}
#1<-shipout/foreground

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-shipout/foreground

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_shipout/foreground_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_shipout/foreground_code_prop\cs_e
nd: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_shipout/foreground_code_pr
op}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/foreground}
}{\tl_if_empty_p:c {__hook_next shipout/foreground}}}{\prg_return_true: }{\prg_
return_false: }
#2<-\prg_return_true: 

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/foreground_code_prop}
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/foreground}}
{\tl_if_empty_p:c {__hook_next shipout/foreground}}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/foreground_code_prop}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\prop_if_empty_p:c {g__hook_shipout/foreground_code_prop}

\exp_end_continue_f:w ->`^^@

\prop_if_empty_p:c ->\exp_args:Nc \prop_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty_p:N 
#2<-g__hook_shipout/foreground_code_prop

\prop_if_empty_p:N #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: \c_true_bool \c_false_bool 
#1<-\g__hook_shipout/foreground_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/foreground_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipou
t/foreground}}{\tl_if_empty_p:c {__hook_next shipout/foreground}}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/foreground}}
{\tl_if_empty_p:c {__hook_next shipout/foreground}}

\exp_end_continue_f:w ->`^^@

\bool_lazy_and_p:nn #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_p_true:w \fi: \c_false_bool 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/foreground}
#2<-\tl_if_empty_p:c {__hook_next shipout/foreground}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/foreground}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_toplevel shipout/foreground}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_toplevel shipout/foreground

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_toplevel shipout/foreground 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:c {__hook_next shipout/foreground}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_next shipout/foreground}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_next shipout/foreground

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_next shipout/foreground 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-
#2<-\__shipout_add_foreground_picture:n {\hook_use:n {shipout/foreground}}

\bool_lazy_and:nnF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{\
c_false_bool }\__prg_F_true:w \fi: \use:n 
#1<-\hook_if_empty_p:n {shipout/background}
#2<-\tl_if_empty_p:N \@kernel@before@shipout@background 

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\hook_if_empty_p:n {shipout/background}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\hook_if_empty_p:n {shipout/background}

\exp_end_continue_f:w ->`^^@

\hook_if_empty_p:n #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF 
{\prop_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p
:c {__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: 
}{\prg_return_false: }}{\prg_return_true: }\exp_end: \c_true_bool \c_false_bool
 
#1<-shipout/background

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-shipout/background

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_shipout/background_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_shipout/background_code_prop\cs_e
nd: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_shipout/background_code_pr
op}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/background}
}{\tl_if_empty_p:c {__hook_next shipout/background}}}{\prg_return_true: }{\prg_
return_false: }
#2<-\prg_return_true: 

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/background_code_prop}
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/background}}
{\tl_if_empty_p:c {__hook_next shipout/background}}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/background_code_prop}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\prop_if_empty_p:c {g__hook_shipout/background_code_prop}

\exp_end_continue_f:w ->`^^@

\prop_if_empty_p:c ->\exp_args:Nc \prop_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty_p:N 
#2<-g__hook_shipout/background_code_prop

\prop_if_empty_p:N #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: \c_true_bool \c_false_bool 
#1<-\g__hook_shipout/background_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/background_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipou
t/background}}{\tl_if_empty_p:c {__hook_next shipout/background}}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/background}}
{\tl_if_empty_p:c {__hook_next shipout/background}}

\exp_end_continue_f:w ->`^^@

\bool_lazy_and_p:nn #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_p_true:w \fi: \c_false_bool 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/background}
#2<-\tl_if_empty_p:c {__hook_next shipout/background}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/background}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_toplevel shipout/background}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_toplevel shipout/background

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_toplevel shipout/background 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:c {__hook_next shipout/background}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_next shipout/background}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_next shipout/background

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_next shipout/background 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:N \@kernel@before@shipout@background }
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:N \@kernel@before@shipout@background 

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\@kernel@before@shipout@background 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__shipout_add_background_picture:n {\@kernel@before@shipout@background \ho
ok_use:n {shipout/background}\@kernel@after@shipout@background }

\__shipout_add_firstpage_specials: ->

\int_compare:nNnT #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_T_true:w \fi: \use_none:n 
#1<-\@abspage@last 
#2<-=
#3<-\g_shipout_readonly_int 

\@abspage@last ->1

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\bool_lazy_and:nnF {\hook_if_empty_p:n {shipout/lastpage}}{\tl_if_empty_p:N
 \@kernel@after@shipout@lastpage }{\__shipout_debug:n {\typeout {Executing last
page hook on page \int_use:N \g_shipout_readonly_int }}\__shipout_add_foregroun
d_box:n {\UseHook {shipout/lastpage}\@kernel@after@shipout@lastpage }\bool_gset
_true:N \g__shipout_lastpage_handled_bool }

\bool_lazy_and:nnF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{\
c_false_bool }\__prg_F_true:w \fi: \use:n 
#1<-\hook_if_empty_p:n {shipout/lastpage}
#2<-\tl_if_empty_p:N \@kernel@after@shipout@lastpage 

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\hook_if_empty_p:n {shipout/lastpage}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\hook_if_empty_p:n {shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\hook_if_empty_p:n #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF 
{\prop_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p
:c {__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: 
}{\prg_return_false: }}{\prg_return_true: }\exp_end: \c_true_bool \c_false_bool
 
#1<-shipout/lastpage

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-shipout/lastpage

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_shipout/lastpage_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_shipout/lastpage_code_prop\cs_end
: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop
}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\t
l_if_empty_p:c {__hook_next shipout/lastpage}}}{\prg_return_true: }{\prg_return
_false: }
#2<-\prg_return_true: 

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\
tl_if_empty_p:c {__hook_next shipout/lastpage}}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}

\exp_end_continue_f:w ->`^^@

\prop_if_empty_p:c ->\exp_args:Nc \prop_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty_p:N 
#2<-g__hook_shipout/lastpage_code_prop

\prop_if_empty_p:N #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: \c_true_bool \c_false_bool 
#1<-\g__hook_shipout/lastpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/lastpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipou
t/lastpage}}{\tl_if_empty_p:c {__hook_next shipout/lastpage}}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\
tl_if_empty_p:c {__hook_next shipout/lastpage}}

\exp_end_continue_f:w ->`^^@

\bool_lazy_and_p:nn #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_p_true:w \fi: \c_false_bool 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}
#2<-\tl_if_empty_p:c {__hook_next shipout/lastpage}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_toplevel shipout/lastpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_toplevel shipout/lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:c {__hook_next shipout/lastpage}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_next shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_next shipout/lastpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_next shipout/lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:N \@kernel@after@shipout@lastpage }
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:N \@kernel@after@shipout@lastpage 

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\@kernel@after@shipout@lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\__shipout_debug:n {\typeout {Executing lastpage hook on page \int_use:N \g
_shipout_readonly_int }}\__shipout_add_foreground_box:n {\UseHook {shipout/last
page}\@kernel@after@shipout@lastpage }\bool_gset_true:N \g__shipout_lastpage_ha
ndled_bool 

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\protect 
 [1{/usr/local/texlive/2022/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]
\__shipout_drop_firstpage_specials: ->

\set@typeset@protect ->\let \protect \@typeset@protect 

\hook_use:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\exp_after:wN \
cs_end: \fi: 
#1<-shipout/after

\__hook shipout/after ->\__hook_toplevel shipout/after \__hook_next shipout/aft
er 

\__hook_toplevel shipout/after ->

\__hook_next shipout/after ->

\cs_set_eq:NN #1->\tex_let:D #1= 
#1<-\protect 

\set@typeset@protect ->\let \protect \@typeset@protect 

\stepcounter #1->\addtocounter {#1}\@ne \begingroup \let \@elt \@stpelt \csname
 cl@#1\endcsname \endgroup 
#1<-page

\addtocounter #1#2->\@ifundefined {c@#1}{\@nocounterr {#1}}{\global \advance \c
sname c@#1\endcsname #2\relax }
#1<-page
#2<-\@ne 

\@ifundefined #1->\ifcsname #1\endcsname \@ifundefin@d@i \else \@ifundefin@d@ii
 \fi {#1}
#1<-c@page

\@ifundefin@d@i #1\fi #2->\fi \expandafter \ifx \csname #2\endcsname \relax \@i
fundefin@d@ii \fi \@secondoftwo 
#1<-\else \@ifundefin@d@ii 
#2<-c@page

\@secondoftwo #1#2->#2
#1<-\@nocounterr {page}
#2<-\global \advance \csname c@page\endcsname \@ne \relax 

\cl@page ->

\@outputpage@tail ->\clr@top@firstmark \set@colht \@floatplacement \@dblfloatpl
acement \global \let \@deferlist@postshipout \@deferlist 

\clr@top@firstmark ->\global \let \saved@@topmark \@undefined \global \let \sav
ed@@firstmark \@empty \global \let \saved@@botmark \@empty 

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\@floatplacement ->\global \@topnum \c@topnumber \global \@toproom \topfraction
 \@colht \global \@botnum \c@bottomnumber \global \@botroom \bottomfraction \@c
olht \global \@colnum \c@totalnumber \@fpmin \floatpagefraction \@colht \global
 \@fpmin \@fpmin 

\topfraction ->.9

\bottomfraction ->.9

\floatpagefraction ->.9

\@dblfloatplacement ->\global \@dbltopnum \c@dbltopnumber \global \@dbltoproom 
\dbltopfraction \@colht \@textmin \@colht \advance \@textmin -\@dbltoproom \@fp
min \dblfloatpagefraction \textheight \@fptop \@dblfptop \@fpsep \@dblfpsep \@f
pbot \@dblfpbot \def \f@depth {1sp}

\dbltopfraction ->.9

\dblfloatpagefraction ->.9

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\do@startcolumn@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\clearpage@sw #1#2->#2
#1<-\protect@penalty \do@endpage@pen 
#2<-

\bot@envir ->\expandafter \expandafter \expandafter \get@mark@thr@@ \expandafte
r \@@botmark \nul@mark 

\nul@mark ->{}{}{}{}\@@nul 

\get@mark@thr@@ #1#2#3#4#5\@@nul ->#3
#1<-
#2<-
#3<-document
#4<-
#5<-{}{}{}{}

\outputdebug@sw #1#2->#2
#1<-\say \output@post@ 
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@post@ \relax 

\false@sw #1#2->#2
#1<-\output@post@document 
#2<-\output@post@ 

\output@post@ ->

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\do@startcolumn 

\do@startcolumn ->\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \unskip 
}\clearpage@sw {\@clearfloatplacement }{\@floatplacement }\set@colht \@booleanf
alse \pfloat@avail@sw \begingroup \@colht \@colroom \@booleanfalse \float@avail
@sw \@tryfcolumn \test@colfloat \float@avail@sw {\aftergroup \@booleantrue \aft
ergroup \pfloat@avail@sw }{}\endgroup \fcolmade@sw {\setbox \@cclv \vbox {\unvb
ox \@outputbox \unvbox \@cclv }\outputpenalty -\pagebreak@pen \dead@cycle }{\be
gingroup \let \@elt \@scolelt \let \reserved@b \@deferlist \global \let \@defer
list \@empty \reserved@b \endgroup \clearpage@sw {\outputpenalty \@M }{\outputp
enalty \do@newpage@pen }\dead@cycle }\check@deferlist@stuck \do@startcolumn \se
t@vsize 

\remove@lastbox ->\setbox \z@ \lastbox 

\clearpage@sw #1#2->#2
#1<-\@clearfloatplacement 
#2<-\@floatplacement 

\@floatplacement ->\global \@topnum \c@topnumber \global \@toproom \topfraction
 \@colht \global \@botnum \c@bottomnumber \global \@botroom \bottomfraction \@c
olht \global \@colnum \c@totalnumber \@fpmin \floatpagefraction \@colht \global
 \@fpmin \@fpmin 

\topfraction ->.9

\bottomfraction ->.9

\floatpagefraction ->.9

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\@booleanfalse #1->\let #1\false@sw 
#1<-\pfloat@avail@sw 

\@booleanfalse #1->\let #1\false@sw 
#1<-\float@avail@sw 

\@tryfcolumn #1->\global \@booleanfalse \fcolmade@sw \@ifx@empty \@deferlist {}
{\global \let \@trylist \@deferlist \global \let \@failedlist \@empty \begingro
up \dimen@ \vsize \advance \dimen@ -\pagegoal \@ifdim {\dimen@ >\z@ }{\advance 
\@fpmin -\dimen@ }{}\def \@elt {\@xtryfc #1}\@trylist \endgroup \fcolmade@sw {\
global \setbox \@outputbox \vbox {\vskip \@fptop }\let \@elt \@wtryfc \@flsucce
ed \global \setbox \@outputbox \vbox {\unvbox \@outputbox \unskip \vskip \@fpbo
t }\let \@elt \relax \xdef \@deferlist {\@failedlist \@flfail }\xdef \@freelist
 {\@freelist \@flsucceed }}{}}
#1<-\test@colfloat 

\@booleanfalse #1->\let #1\false@sw 
#1<-\fcolmade@sw 

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@deferlist 

\true@sw #1#2->#1
#1<-
#2<-\global \let \@trylist \@deferlist \global \let \@failedlist \@empty \begin
group \dimen@ \vsize \advance \dimen@ -\pagegoal \@ifdim {\dimen@ >\z@ }{\advan
ce \@fpmin -\dimen@ }{}\def \@elt {\@xtryfc \test@colfloat }\@trylist \endgroup
 \fcolmade@sw {\global \setbox \@outputbox \vbox {\vskip \@fptop }\let \@elt \@
wtryfc \@flsucceed \global \setbox \@outputbox \vbox {\unvbox \@outputbox \unsk
ip \vskip \@fpbot }\let \@elt \relax \xdef \@deferlist {\@failedlist \@flfail }
\xdef \@freelist {\@freelist \@flsucceed }}{}

\float@avail@sw #1#2->#2
#1<-\aftergroup \@booleantrue \aftergroup \pfloat@avail@sw 
#2<-

\fcolmade@sw #1#2->#2
#1<-\setbox \@cclv \vbox {\unvbox \@outputbox \unvbox \@cclv }\outputpenalty -\
pagebreak@pen \dead@cycle 
#2<-\begingroup \let \@elt \@scolelt \let \reserved@b \@deferlist \global \let 
\@deferlist \@empty \reserved@b \endgroup \clearpage@sw {\outputpenalty \@M }{\
outputpenalty \do@newpage@pen }\dead@cycle 

\reserved@b ->

\clearpage@sw #1#2->#2
#1<-\outputpenalty \@M 
#2<-\outputpenalty \do@newpage@pen 

\dead@cycle ->\expandafter \do@@mark \expandafter {\@@botmark }\unvbox \@cclv \
@ifnum {\outputpenalty <\@M }{\penalty \outputpenalty }{}

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty <\@M 

\false@sw #1#2->#2
#1<-\penalty \outputpenalty 
#2<-

\check@deferlist@stuck #1->\@ifx {\@deferlist@postshipout \@empty }{}{\@ifx {\@
deferlist@postshipout \@deferlist }{\@fltstk \clearpage@sw {\ltxgrid@warn {Defe
rred float stuck during \string \clearpage \space processing}}{\force@deferlist
@stuck #1}}{}\global \let \@deferlist@postshipout \@empty }
#1<-\do@startcolumn 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@deferlist@postshipout \@empty 

\true@sw #1#2->#1
#1<-
#2<-\@ifx {\@deferlist@postshipout \@deferlist }{\@fltstk \clearpage@sw {\ltxgr
id@warn {Deferred float stuck during \string \clearpage \space processing}}{\fo
rce@deferlist@stuck \do@startcolumn }}{}\global \let \@deferlist@postshipout \@
empty 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\do@output@MVL #1->\@ifvmode {\begingroup \execute@message {\unvbox \@cclv #1}\
endgroup }{\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv #1}}}{\@latexe
rr {\string \do@output@MVL \space cannot be executed in this mode!}\@eha }}
#1<-\vfil \penalty -\pagebreak@pen \global \@booleantrue \clearpage@sw \protect
@penalty \do@startcolumn@pen \protect@penalty \do@endpage@pen 

\@ifvmode ->\ifvmode \expandafter \true@sw \else \expandafter \false@sw \fi 

\true@sw #1#2->#1
#1<-\begingroup \execute@message {\unvbox \@cclv \vfil \penalty -\pagebreak@pen
 \global \@booleantrue \clearpage@sw \protect@penalty \do@startcolumn@pen \prot
ect@penalty \do@endpage@pen }\endgroup 
#2<-\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv \vfil \penalty -\page
break@pen \global \@booleantrue \clearpage@sw \protect@penalty \do@startcolumn@
pen \protect@penalty \do@endpage@pen }}}{\@latexerr {\string \do@output@MVL \sp
ace cannot be executed in this mode!}\@eha }

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\unvbox \@cclv \vfil \penalty -\pagebreak@pen \global \@booleantrue \clearp
age@sw \protect@penalty \do@startcolumn@pen \protect@penalty \do@endpage@pen 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\do@output@MVL #1->\@ifvmode {\begingroup \execute@message {\unvbox \@cclv #1}\
endgroup }{\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv #1}}}{\@latexe
rr {\string \do@output@MVL \space cannot be executed in this mode!}\@eha }}
#1<-\global \@booleanfalse \clearpage@sw 

\@ifvmode ->\ifvmode \expandafter \true@sw \else \expandafter \false@sw \fi 

\true@sw #1#2->#1
#1<-\begingroup \execute@message {\unvbox \@cclv \global \@booleanfalse \clearp
age@sw }\endgroup 
#2<-\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv \global \@booleanfals
e \clearpage@sw }}}{\@latexerr {\string \do@output@MVL \space cannot be execute
d in this mode!}\@eha }

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\unvbox \@cclv \global \@booleanfalse \clearpage@sw 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\do@output@cclv ->\execute@message 

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\Call@AfterLastShipout 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\do@output@cclv ->\execute@message 

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\lastpage@putlabel \tally@box@size@sw {\total@text }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\check@aux ->\do@output@MVL {\do@check@aux }

\do@output@MVL #1->\@ifvmode {\begingroup \execute@message {\unvbox \@cclv #1}\
endgroup }{\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv #1}}}{\@latexe
rr {\string \do@output@MVL \space cannot be executed in this mode!}\@eha }}
#1<-\do@check@aux 

\@ifvmode ->\ifvmode \expandafter \true@sw \else \expandafter \false@sw \fi 

\true@sw #1#2->#1
#1<-\begingroup \execute@message {\unvbox \@cclv \do@check@aux }\endgroup 
#2<-\@ifhmode {\vadjust {\execute@message {\unvbox \@cclv \do@check@aux }}}{\@l
atexerr {\string \do@output@MVL \space cannot be executed in this mode!}\@eha }

\execute@message ->\@execute@message \save@column@pen 

\@execute@message #1#2->\begingroup \dimen@ \prevdepth \@ifdim {\dimen@ <\z@ }{
\dimen@ \z@ }{}\setbox \z@ \vbox {\protect@penalty #1\protection@box \toks@ {\p
rep@cclv #2}\@@mark {\the \toks@ }\penalty -\save@message@pen \setbox \z@ \null
 \dp \z@ \dimen@ \ht \z@ -\dimen@ \nointerlineskip \box \z@ \penalty -\execute@
message@pen }\unvbox \z@ \endgroup 
#1<-\save@column@pen 
#2<-\unvbox \@cclv \do@check@aux 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ <\z@ 

\false@sw #1#2->#2
#1<-\dimen@ \z@ 
#2<-

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\save@column@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\null ->\hbox {}

\nointerlineskip ->\prevdepth -\@m \p@ 

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-enddocument/end

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-enddocument/end

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-enddocument/end

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/end

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/end\cs_end: \scan_stop
: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_enddocument/end_
reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg_r
eturn_false: \fi: 
#2<-\prg_return_false: 

\g__hook_enddocument/end_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {enddocument/end}
}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {enddocument/end}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {enddocument/end}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {enddocument/end}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {enddocument/end}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/end}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {enddocument/end}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {enddocument/end}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {enddocument/end}}\__hook_parse_dot_label:
n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {enddocument/end}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {enddocument/end}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {enddocument/end}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {enddocument/end}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {enddocument/end}\s__tl_nil \__tl_trim_spaces_auxii
i:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {enddocument/end}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {enddocument/end}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {enddocument/end}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/end}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {enddocument/end}}{.}{\__hook_currname_or_default: 
}{\__hook_parse_dot_label:w \use:n {enddocument/end}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/end}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {enddocument/end}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {enddocument/end}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/end}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {enddocument/end}}}{\__hook
_parse_dot_label_cleanup:w \use:n {enddocument/end}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {enddocument/end}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {enddocument/end}./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {enddocument/end}

\use:n #1->#1
#1<-enddocument/end

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-enddocument/end

\__hook_preamble_hook:n #1->
#1<-enddocument/end

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-enddocument/end

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_enddocument/end_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_enddocument/end_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-enddocument/end

\__hook enddocument/end ->\__hook_toplevel enddocument/end \__hook_next enddocu
ment/end 

\__hook_toplevel enddocument/end ->

\__hook_next enddocument/end ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-enddocument/end

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook enddocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument/end 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next enddocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next enddocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next enddocument/end 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel enddocument/end

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel enddocument/end 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel enddocument/end 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_enddocument/end_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_enddocument/end_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_enddocument/end_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_enddocument/end_code_prop 
#2<-\prop_new:N \g__hook_enddocument/end_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_enddocument/end_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_enddocument/end_code_prop 
#2<-\c_empty_prop 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\true@sw #1#2->#1
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->

\true@sw #1#2->#1
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \unvbox \@cclv \vfil \penalty -\pagebreak@pen \g
lobal \@booleantrue \clearpage@sw \protect@penalty \do@startcolumn@pen \protect
@penalty \do@endpage@pen 

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\@booleantrue #1->\let #1\true@sw 
#1<-\clearpage@sw 

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\do@startcolumn@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\do@endpage@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\do@startcolumn 

\do@startcolumn ->\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \unskip 
}\clearpage@sw {\@clearfloatplacement }{\@floatplacement }\set@colht \@booleanf
alse \pfloat@avail@sw \begingroup \@colht \@colroom \@booleanfalse \float@avail
@sw \@tryfcolumn \test@colfloat \float@avail@sw {\aftergroup \@booleantrue \aft
ergroup \pfloat@avail@sw }{}\endgroup \fcolmade@sw {\setbox \@cclv \vbox {\unvb
ox \@outputbox \unvbox \@cclv }\outputpenalty -\pagebreak@pen \dead@cycle }{\be
gingroup \let \@elt \@scolelt \let \reserved@b \@deferlist \global \let \@defer
list \@empty \reserved@b \endgroup \clearpage@sw {\outputpenalty \@M }{\outputp
enalty \do@newpage@pen }\dead@cycle }\check@deferlist@stuck \do@startcolumn \se
t@vsize 

\remove@lastbox ->\setbox \z@ \lastbox 

\clearpage@sw #1#2->#1
#1<-\@clearfloatplacement 
#2<-\@floatplacement 

\@clearfloatplacement ->\global \@topnum \maxdimen \global \@toproom \maxdimen 
\global \@botnum \maxdimen \global \@botroom \maxdimen \global \@colnum \maxdim
en \global \@dbltopnum \maxdimen \global \@dbltoproom \maxdimen \global \@textm
in \z@ \global \@fpmin \z@ \let \@testfp \@gobble \appdef \@setfloattypecounts 
{\@fpstype 16\advance \@fpstype \m@ne }

\appdef #1#2->\@ifxundefined #1{\toks@ {}}{\toks@ \expandafter {#1}}\toks@ii {#
2}\edef #1{\the \toks@ \the \toks@ii }
#1<-\@setfloattypecounts 
#2<-\@fpstype 16\advance \@fpstype \m@ne 

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\@setfloattypecounts 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \@setfloattypecounts 

\false@sw #1#2->#2
#1<-\toks@ {}
#2<-\toks@ \expandafter {\@setfloattypecounts }

\@setfloattypecounts ->\@currtype \count \@currbox \@fpstype \count \@currbox \
divide \@currtype \@xxxii \multiply \@currtype \@xxxii \advance \@fpstype -\@cu
rrtype 

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\@booleanfalse #1->\let #1\false@sw 
#1<-\pfloat@avail@sw 

\@booleanfalse #1->\let #1\false@sw 
#1<-\float@avail@sw 

\@tryfcolumn #1->\global \@booleanfalse \fcolmade@sw \@ifx@empty \@deferlist {}
{\global \let \@trylist \@deferlist \global \let \@failedlist \@empty \begingro
up \dimen@ \vsize \advance \dimen@ -\pagegoal \@ifdim {\dimen@ >\z@ }{\advance 
\@fpmin -\dimen@ }{}\def \@elt {\@xtryfc #1}\@trylist \endgroup \fcolmade@sw {\
global \setbox \@outputbox \vbox {\vskip \@fptop }\let \@elt \@wtryfc \@flsucce
ed \global \setbox \@outputbox \vbox {\unvbox \@outputbox \unskip \vskip \@fpbo
t }\let \@elt \relax \xdef \@deferlist {\@failedlist \@flfail }\xdef \@freelist
 {\@freelist \@flsucceed }}{}}
#1<-\test@colfloat 

\@booleanfalse #1->\let #1\false@sw 
#1<-\fcolmade@sw 

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@deferlist 

\true@sw #1#2->#1
#1<-
#2<-\global \let \@trylist \@deferlist \global \let \@failedlist \@empty \begin
group \dimen@ \vsize \advance \dimen@ -\pagegoal \@ifdim {\dimen@ >\z@ }{\advan
ce \@fpmin -\dimen@ }{}\def \@elt {\@xtryfc \test@colfloat }\@trylist \endgroup
 \fcolmade@sw {\global \setbox \@outputbox \vbox {\vskip \@fptop }\let \@elt \@
wtryfc \@flsucceed \global \setbox \@outputbox \vbox {\unvbox \@outputbox \unsk
ip \vskip \@fpbot }\let \@elt \relax \xdef \@deferlist {\@failedlist \@flfail }
\xdef \@freelist {\@freelist \@flsucceed }}{}

\float@avail@sw #1#2->#2
#1<-\aftergroup \@booleantrue \aftergroup \pfloat@avail@sw 
#2<-

\fcolmade@sw #1#2->#2
#1<-\setbox \@cclv \vbox {\unvbox \@outputbox \unvbox \@cclv }\outputpenalty -\
pagebreak@pen \dead@cycle 
#2<-\begingroup \let \@elt \@scolelt \let \reserved@b \@deferlist \global \let 
\@deferlist \@empty \reserved@b \endgroup \clearpage@sw {\outputpenalty \@M }{\
outputpenalty \do@newpage@pen }\dead@cycle 

\reserved@b ->

\clearpage@sw #1#2->#1
#1<-\outputpenalty \@M 
#2<-\outputpenalty \do@newpage@pen 

\dead@cycle ->\expandafter \do@@mark \expandafter {\@@botmark }\unvbox \@cclv \
@ifnum {\outputpenalty <\@M }{\penalty \outputpenalty }{}

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty <\@M 

\false@sw #1#2->#2
#1<-\penalty \outputpenalty 
#2<-

\check@deferlist@stuck #1->\@ifx {\@deferlist@postshipout \@empty }{}{\@ifx {\@
deferlist@postshipout \@deferlist }{\@fltstk \clearpage@sw {\ltxgrid@warn {Defe
rred float stuck during \string \clearpage \space processing}}{\force@deferlist
@stuck #1}}{}\global \let \@deferlist@postshipout \@empty }
#1<-\do@startcolumn 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@deferlist@postshipout \@empty 

\true@sw #1#2->#1
#1<-
#2<-\@ifx {\@deferlist@postshipout \@deferlist }{\@fltstk \clearpage@sw {\ltxgr
id@warn {Deferred float stuck during \string \clearpage \space processing}}{\fo
rce@deferlist@stuck \do@startcolumn }}{}\global \let \@deferlist@postshipout \@
empty 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\csname end@column@\thepagegrid \endcsname 

\thepagegrid ->one

\end@column@one ->\unvbox \@cclv \remove@lastbox \protect@penalty \do@newpage@p
en 

\remove@lastbox ->\setbox \z@ \lastbox 

\protect@penalty #1->\protection@box \penalty -#1\relax 
#1<-\do@newpage@pen 

\protection@box ->\nointerlineskip \copy \@protection@box 

\nointerlineskip ->\prevdepth -\@m \p@ 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\true@sw #1#2->#1
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\natural@output 

\natural@output ->\toggle@insert {\output@holding }{\output@moving }

\toggle@insert #1#2->\@ifnum {\holdinginserts >\z@ }{\move@insertions #1}{\hold
@insertions #2}
#1<-\output@holding 
#2<-\output@moving 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\holdinginserts >\z@ 

\true@sw #1#2->#1
#1<-\move@insertions \output@holding 
#2<-\hold@insertions \output@moving 

\move@insertions ->\global \holdinginserts \z@ 

\output@holding ->\csname output@init@\bot@envir \endcsname \@if@exceed@pagegoa
l {\unvcopy \@cclv }{\setbox \z@ \vbox {\unvcopy \@cclv }\outputdebug@sw {\trac
e@box \z@ }{}\dimen@ \ht \@cclv \advance \dimen@ -\ht \z@ \dead@cycle@repair \d
imen@ }{\dead@cycle }

\bot@envir ->\expandafter \expandafter \expandafter \get@mark@thr@@ \expandafte
r \@@botmark \nul@mark 

\nul@mark ->{}{}{}{}\@@nul 

\get@mark@thr@@ #1#2#3#4#5\@@nul ->#3
#1<-
#2<-
#3<-document
#4<-
#5<-{}{}{}{}

\output@init@document ->\ltxgrid@info@sw {\class@info {\string \output@init@doc
ument }}{}\global \vsize \vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \output@init@document }
#2<-

\@if@exceed@pagegoal #1->\begingroup \setbox \z@ \vbox {#1}\dimen@ \ht \z@ \adv
ance \dimen@ \dp \z@ \outputdebug@sw {\saythe \dimen@ }{}\@ifdim {\dimen@ >\pag
egoal }{\setbox \z@ \vbox {\@@mark {}\unvbox \z@ }\splittopskip \topskip \split
maxdepth \maxdepth \vbadness \@M \vfuzz \maxdimen \setbox \tw@ \vsplit \z@ to\p
agegoal \outputdebug@sw {\trace@scroll {\showbox \tw@ \showbox \z@ }}{}\setbox 
\tw@ \vbox {\unvbox \tw@ }\@ifdim {\ht \tw@ =\z@ }{\ltxgrid@info {Found overly 
large chunk while preparing to move insertions. Attempting repairs}\aftergroup 
\true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\endgroup 
#1<-\unvcopy \@cclv 

\outputdebug@sw #1#2->#2
#1<-\saythe \dimen@ 
#2<-

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ >\pagegoal 

\false@sw #1#2->#2
#1<-\setbox \z@ \vbox {\@@mark {}\unvbox \z@ }\splittopskip \topskip \splitmaxd
epth \maxdepth \vbadness \@M \vfuzz \maxdimen \setbox \tw@ \vsplit \z@ to\pageg
oal \outputdebug@sw {\trace@scroll {\showbox \tw@ \showbox \z@ }}{}\setbox \tw@
 \vbox {\unvbox \tw@ }\@ifdim {\ht \tw@ =\z@ }{\ltxgrid@info {Found overly larg
e chunk while preparing to move insertions. Attempting repairs}\aftergroup \tru
e@sw }{\aftergroup \false@sw }
#2<-\aftergroup \false@sw 

\false@sw #1#2->#2
#1<-\setbox \z@ \vbox {\unvcopy \@cclv }\outputdebug@sw {\trace@box \z@ }{}\dim
en@ \ht \@cclv \advance \dimen@ -\ht \z@ \dead@cycle@repair \dimen@ 
#2<-\dead@cycle 

\dead@cycle ->\expandafter \do@@mark \expandafter {\@@botmark }\unvbox \@cclv \
@ifnum {\outputpenalty <\@M }{\penalty \outputpenalty }{}

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty <\@M 

\true@sw #1#2->#1
#1<-\penalty \outputpenalty 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\true@sw #1#2->#1
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\natural@output 

\natural@output ->\toggle@insert {\output@holding }{\output@moving }

\toggle@insert #1#2->\@ifnum {\holdinginserts >\z@ }{\move@insertions #1}{\hold
@insertions #2}
#1<-\output@holding 
#2<-\output@moving 

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\holdinginserts >\z@ 

\false@sw #1#2->#2
#1<-\move@insertions \output@holding 
#2<-\hold@insertions \output@moving 

\hold@insertions ->\global \holdinginserts \@ne 

\output@moving ->\set@top@firstmark \@ifnum {\outputpenalty =\do@newpage@pen }{
\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \@ifdim {\ht \z@ =\ht \@pr
otection@box }{\box \lastbox }{\unskip }}}{}\@cclv@nontrivial@sw {\expandafter 
\output@do@prep \csname output@prep@\bot@envir \endcsname \@makecolumn \true@sw
 \expandafter \output@column@do \csname output@column@\thepagegrid \endcsname \
protect@penalty \do@startcolumn@pen \clearpage@sw {\protect@penalty \do@endpage
@pen }{}\expandafter \let \expandafter \output@post@ \csname output@post@\bot@e
nvir \endcsname \outputdebug@sw {\say \output@post@ }{}\@ifx {\output@post@ \re
lax }{\output@post@document }{\output@post@ }}{\void@cclv }\set@colht \global \
@mparbottom \z@ \global \@textfloatsheight \z@ 

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\outputpenalty =\do@newpage@pen 

\false@sw #1#2->#2
#1<-\setbox \@cclv \vbox {\unvbox \@cclv \remove@lastbox \@ifdim {\ht \z@ =\ht 
\@protection@box }{\box \lastbox }{\unskip }}
#2<-

\@cclv@nontrivial@sw ->\@ifx@empty \@toplist {\@ifx@empty \@botlist {\@ifvoid \
footins {\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy \@cclv }\@ifd
im {\ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \
dimen@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dim
en@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \fa
lse@sw }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}{\@ifdim {\ht 
\z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\outputdebug@sw {
\trace@box \@cclv }{}\false@sw }{\true@sw }}}}{\true@sw }}{\true@sw }}{\true@sw
 }

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@toplist 

\true@sw #1#2->#1
#1<-\@ifx@empty \@botlist {\@ifvoid \footins {\@ifvoid \@cclv {\false@sw }{\set
box \z@ \vbox {\unvcopy \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z@ \vbox 
\bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \unskip \@ifdim {\ht \z@ 
=\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\
aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\egroup {
\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial co
lumn. Discarding it}\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw 
}}}}{\true@sw }}{\true@sw }
#2<-\true@sw 

\@ifx@empty #1->\ifx \@empty #1\expandafter \true@sw \else \expandafter \false@
sw \fi 
#1<-\@botlist 

\true@sw #1#2->#1
#1<-\@ifvoid \footins {\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy
 \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \re
move@lastbox \dimen@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }
{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\
aftergroup \false@sw }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}
{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\ou
tputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw }}}}{\true@sw }
#2<-\true@sw 

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\footins 

\true@sw #1#2->#1
#1<-\@ifvoid \@cclv {\false@sw }{\setbox \z@ \vbox {\unvcopy \@cclv }\@ifdim {\
ht \z@ =\topskip }{\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen
@ \lastskip \unskip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dimen@ \
ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \false@s
w }}{\aftergroup \false@sw }\egroup {\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =
\z@ }{\ltxgrid@info {Found trivial column. Discarding it}\outputdebug@sw {\trac
e@box \@cclv }{}\false@sw }{\true@sw }}}
#2<-\true@sw 

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv 

\false@sw #1#2->#2
#1<-\false@sw 
#2<-\setbox \z@ \vbox {\unvcopy \@cclv }\@ifdim {\ht \z@ =\topskip }{\setbox \z
@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \unskip \@ifdim {
\ht \z@ =\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\top
skip }{\aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergroup \false@sw }\
egroup {\false@sw }{\true@sw }}{\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found tr
ivial column. Discarding it}\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\
true@sw }}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\ht \z@ =\topskip 

\true@sw #1#2->#1
#1<-\setbox \z@ \vbox \bgroup \unvbox \z@ \remove@lastbox \dimen@ \lastskip \un
skip \@ifdim {\ht \z@ =\ht \@protection@box }{\advance \dimen@ \ht \z@ \@ifdim 
{\dimen@ =\topskip }{\aftergroup \true@sw }{\aftergroup \false@sw }}{\aftergrou
p \false@sw }\egroup {\false@sw }{\true@sw }
#2<-\@ifdim {\ht \z@ =\z@ }{\ltxgrid@info {Found trivial column. Discarding it}
\outputdebug@sw {\trace@box \@cclv }{}\false@sw }{\true@sw }

\remove@lastbox ->\setbox \z@ \lastbox 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\ht \z@ =\ht \@protection@box 

\true@sw #1#2->#1
#1<-\advance \dimen@ \ht \z@ \@ifdim {\dimen@ =\topskip }{\aftergroup \true@sw 
}{\aftergroup \false@sw }
#2<-\aftergroup \false@sw 

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\dimen@ =\topskip 

\true@sw #1#2->#1
#1<-\aftergroup \true@sw 
#2<-\aftergroup \false@sw 

\true@sw #1#2->#1
#1<-\false@sw 
#2<-\true@sw 

\false@sw #1#2->#2
#1<-\expandafter \output@do@prep \csname output@prep@\bot@envir \endcsname \@ma
kecolumn \true@sw \expandafter \output@column@do \csname output@column@\thepage
grid \endcsname \protect@penalty \do@startcolumn@pen \clearpage@sw {\protect@pe
nalty \do@endpage@pen }{}\expandafter \let \expandafter \output@post@ \csname o
utput@post@\bot@envir \endcsname \outputdebug@sw {\say \output@post@ }{}\@ifx {
\output@post@ \relax }{\output@post@document }{\output@post@ }
#2<-\void@cclv 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\set@colht ->\set@adj@textheight \@colht \global \let \enlarge@colroom \@empty 
\set@colroom 

\set@adj@textheight #1->\ltxgrid@info@sw {\class@info {\string \set@adj@texthei
ght \string #1}\saythe \textheight }{}#1\textheight \def \@elt {\adj@page #1}\@
booleantrue \firsttime@sw \@dbltoplist \let \@elt \relax \global #1#1\relax \lt
xgrid@info@sw {\saythe #1}{}
#1<-\@colht 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@textheight \string \@colht }\saythe \textheig
ht 
#2<-

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@dbltoplist ->

\ltxgrid@info@sw #1#2->#2
#1<-\saythe \@colht 
#2<-

\set@colroom ->\ltxgrid@info@sw {\class@info {\string \set@colroom }}{}\set@adj
@colht \@colroom \@if@empty \enlarge@colroom {}{\global \advance \@colroom \enl
arge@colroom \relax \ltxgrid@info@sw {\saythe \@colroom }{}}\@ifdim {\@colroom 
>\topskip }{}{\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom
 ; increasing to \the \topskip }\@colroom \topskip }\global \@colroom \@colroom
 \set@vsize 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@colroom }
#2<-

\set@adj@colht #1->#1\@colht \ltxgrid@info@sw {\class@info {\string \set@adj@co
lht \string #1-\string \pagesofar }\saythe #1}{}\@ifvoid \pagesofar {}{\advance
 #1-\ht \pagesofar \advance #1-\dp \pagesofar \ltxgrid@info@sw {\class@info {\s
tring \pagesofar }\saythe #1}{}}\def \@elt {\adj@column #1}\@booleantrue \first
time@sw \@toplist \@booleantrue \firsttime@sw \@botlist \let \@elt \relax 
#1<-\@colroom 

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@adj@colht \string \@colroom -\string \pagesofar }
\saythe \@colroom 
#2<-

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\pagesofar 

\true@sw #1#2->#1
#1<-
#2<-\advance \@colroom -\ht \pagesofar \advance \@colroom -\dp \pagesofar \ltxg
rid@info@sw {\class@info {\string \pagesofar }\saythe \@colroom }{}

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@toplist ->

\@booleantrue #1->\let #1\true@sw 
#1<-\firsttime@sw 

\@botlist ->

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\enlarge@colroom 

\enlarge@colroom ->

\true@sw #1#2->#1
#1<-
#2<-\global \advance \@colroom \enlarge@colroom \relax \ltxgrid@info@sw {\sayth
e \@colroom }{}

\@ifdim #1->\ifdim #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@colroom >\topskip 

\true@sw #1#2->#1
#1<-
#2<-\ltxgrid@info {Not enough room: \string \@colroom =\the \@colroom ; increas
ing to \the \topskip }\@colroom \topskip 

\set@vsize ->\global \vsize \@colroom \ltxgrid@info@sw {\class@info {\string \s
et@vsize \string \vsize =\string \colroom }\saythe \vsize }{}

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \set@vsize \string \vsize =\string \colroom }\saythe \
vsize 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \unvbox \@cclv \global \@booleanfalse \clearpage
@sw 

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\@booleanfalse #1->\let #1\false@sw 
#1<-\clearpage@sw 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \Call@AfterLastShipout 

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\Call@AfterLastShipout ->

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \lastpage@putlabel \tally@box@size@sw {\total@te
xt }{}

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\lastpage@putlabel ->\if@filesw \begingroup \advance \c@page \m@ne \immediate \
write \@auxout {\string \newlabel {LastPage}{{}{\thepage }{}{}{}}}\endgroup \fi
 

\thepage ->\@arabic \c@page 

\@arabic #1->\number #1
#1<-\c@page 

\tally@box@size@sw #1#2->#2
#1<-\total@text 
#2<-

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@column 

\save@column ->\@ifvoid \@cclv@saved {\set@top@firstmark \global \@topmark@save
d \expandafter {\@@topmark }}{}\global \setbox \@cclv@saved \vbox {\@ifvoid \@c
clv@saved {}{\unvbox \@cclv@saved \marry@baselines }\unvbox \@cclv \lose@breaks
 \remove@lastbox }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-\set@top@firstmark \global \@topmark@saved \expandafter {\@@topmark }
#2<-

\set@top@firstmark ->\@ifxundefined \saved@@topmark {\expandafter \gdef \expand
after \saved@@topmark \expandafter {\@@topmark }}{}\@if@empty \saved@@firstmark
 {\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmark 
}}{}\@if@empty \@@botmark {}{\expandafter \gdef \expandafter \saved@@botmark \e
xpandafter {\@@botmark }}

\@ifxundefined #1->\@ifx {\undefined #1}
#1<-\saved@@topmark 

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\undefined \saved@@topmark 

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@topmark \expandafter {\@@topmark }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\saved@@firstmark 

\saved@@firstmark ->{}{}{document}{}

\false@sw #1#2->#2
#1<-\expandafter \gdef \expandafter \saved@@firstmark \expandafter {\@@firstmar
k }
#2<-

\@if@empty #1->\if !#1!\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@@botmark 

\false@sw #1#2->#2
#1<-
#2<-\expandafter \gdef \expandafter \saved@@botmark \expandafter {\@@botmark }

\@ifvoid #1->\ifvoid #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\@cclv@saved 

\true@sw #1#2->#1
#1<-
#2<-\unvbox \@cclv@saved \marry@baselines 

\lose@breaks ->\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpena
lty \true@sw }{\false@sw }}

\loopwhile #1->#1{\loopwhile {#1}}{}
#1<-\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@sw }{\false@s
w }

\@ifnum #1->\ifnum #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\count@ =\@M 

\false@sw #1#2->#2
#1<-\unpenalty \true@sw 
#2<-\false@sw 

\false@sw #1#2->#2
#1<-\loopwhile {\count@ \lastpenalty \@ifnum {\count@ =\@M }{\unpenalty \true@s
w }{\false@sw }}
#2<-

\remove@lastbox ->\setbox \z@ \lastbox 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\save@message 

\save@message ->\void@cclv \toks@ \expandafter {\@@firstmark }\expandafter \gde
f \expandafter \@message@saved \expandafter {\the \toks@ }\expandafter \do@@mar
k \expandafter {\the \@topmark@saved }

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@@mark #1->\begingroup \let@mark \@@mark {#1}\endgroup 
#1<-{}{}{document}{}

\let@mark ->\let \protect \@unexpandable@protect \let \label \relax \let \index
 \relax \let \glossary \relax 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\true@sw #1#2->#1
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\prep@cclv \unvbox \@cclv \do@check@aux 

\prep@cclv ->\void@cclv \setbox \@cclv \box \@cclv@saved \vbadness \@M 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 

\do@check@aux ->\UseOneTimeHook {enddocument/afterlastpage}\@kernel@after@enddo
cument@afterlastpage \begingroup \if@filesw \immediate \closeout \@mainaux \let
 \@setckpt \@gobbletwo \let \@newl@bel \@testdef \@tempswafalse \makeatletter \
@@input \jobname .aux \fi \UseOneTimeHook {enddocument/afteraux}\UseOneTimeHook
 {enddocument/info}\endgroup 

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-enddocument/afterlastpage

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-enddocument/afterlastpage

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-enddocument/afterlastpage

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/afterlastpage

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/afterlastpage\cs_end: 
\scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_enddocument/afte
rlastpage_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_m
ark \prg_return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_enddocument/afterlastpage_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {enddocument/afte
rlastpage}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {enddocument/afterlastpage}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {enddocument/afterlastpage}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {enddocument/afterlastpage}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {enddocument/afterlastpage}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afterlastpage}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {enddocument/afterlastpage}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {enddocument/afterlastpage}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {enddocument/afterlastpage}}\__hook_parse_
dot_label:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {enddocument/afterlastpage}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}\s__tl_nil \__tl_trim_sp
aces_auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {enddocument/afterlastpage}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {enddocument/afterlastpage}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afterlastpage}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {enddocument/afterlastpage}}{.}{\__hook_currname_or
_default: }{\__hook_parse_dot_label:w \use:n {enddocument/afterlastpage}./\s__h
ook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afterlastpage}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {enddocument/afterlastpage}./\s__hook_mark
 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {enddocument/afterlastpage}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afterlastpage}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {enddocument/afterlastpage}
}}{\__hook_parse_dot_label_cleanup:w \use:n {enddocument/afterlastpage}./\s__ho
ok_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {enddocument/afterlastpage}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {enddocument/afterlastpage}./\s__h
ook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {enddocument/afterlastpage}

\use:n #1->#1
#1<-enddocument/afterlastpage

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-enddocument/afterlastpage

\__hook_preamble_hook:n #1->
#1<-enddocument/afterlastpage

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-enddocument/afterlastpage

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_enddocument/afterlastpage_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_enddocument/afterlastpage_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-enddocument/afterlastpage

\__hook enddocument/afterlastpage ->\__hook_toplevel enddocument/afterlastpage 
\__hook_next enddocument/afterlastpage 

\__hook_toplevel enddocument/afterlastpage ->

\__hook_next enddocument/afterlastpage ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-enddocument/afterlastpage

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook enddocument/afterlastpage

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument/afterlastpage 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument/afterlastpage 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next enddocument/afterlastpage

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next enddocument/afterlastpage 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next enddocument/afterlastpage 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel enddocument/afterlastpage

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel enddocument/afterlastpage 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel enddocument/afterlastpage 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_enddocument/afterlastpage_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_enddocument/afterlastpage_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_enddocument/afterlastpage_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_enddocument/afterlastpage_code_prop 
#2<-\prop_new:N \g__hook_enddocument/afterlastpage_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_enddocument/afterlastpage_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_enddocument/afterlastpage_code_prop 
#2<-\c_empty_prop 

\@kernel@after@enddocument@afterlastpage ->\__hook_end_document_label_check: \i
nt_compare:nNnF \g_shipout_readonly_int =0{\if@filesw \iow_now:Nx \@auxout {\gd
ef \string \@abspage@last {\int_use:N \g_shipout_readonly_int }}\fi \bool_if:NT
F \g__shipout_lastpage_handled_bool {\int_compare:nNnF \@abspage@last =\g_shipo
ut_readonly_int {\@latex@warning@no@line {Hook 'shipout/lastpage' executed on w
rong page (\@abspage@last \space not \int_use:N \g_shipout_readonly_int ).\Mess
ageBreak Rerun to correct this}}}{\bool_lazy_and:nnF {\hook_if_empty_p:n {shipo
ut/lastpage}}{\tl_if_empty_p:N \@kernel@after@shipout@lastpage }{\tex_shipout:D
 \vbox to\textheight {\hbox:n {\UseHook {shipout/lastpage}\@kernel@after@shipou
t@lastpage }\__shipout_excuse_extra_page: \null }\cs_gset_eq:NN \@extra@page@ad
ded \relax }}}

\__hook_end_document_label_check: ->\seq_gpop:NNT \g__hook_name_stack_seq \l__h
ook_return_tl {\msg_error:nnx {hooks}{missing-pop-label}{\g__hook_hook_curr_nam
e_tl }\tl_gset_eq:NN \g__hook_hook_curr_name_tl \l__hook_return_tl \__hook_end_
document_label_check: }

\seq_gpop:NNT #1#2->\__seq_pop_TF:NNNN \__seq_pop_left:NNN \tl_gset:Nn #1#2\exp
_end: \use:n \use_none:n 
#1<-\g__hook_name_stack_seq 
#2<-\l__hook_return_tl 

\__seq_pop_TF:NNNN #1#2#3#4->\if_meaning:w #3\c_empty_seq \prg_return_false: \e
lse: #1#2#3#4\prg_return_true: \fi: 
#1<-\__seq_pop_left:NNN 
#2<-\tl_gset:Nn 
#3<-\g__hook_name_stack_seq 
#4<-\l__hook_return_tl 

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-\use:n 
#2<-\use_none:n 

\use_none:n #1->
#1<-\msg_error:nnx {hooks}{missing-pop-label}{\g__hook_hook_curr_name_tl }\tl_g
set_eq:NN \g__hook_hook_curr_name_tl \l__hook_return_tl \__hook_end_document_la
bel_check: 

\int_compare:nNnF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3\
__int_eval_end: \__prg_F_true:w \fi: \use:n 
#1<-\g_shipout_readonly_int 
#2<-=
#3<-0

\use:n #1->#1
#1<-\if@filesw \iow_now:Nx \@auxout {\gdef \string \@abspage@last {\int_use:N \
g_shipout_readonly_int }}\fi \bool_if:NTF \g__shipout_lastpage_handled_bool {\i
nt_compare:nNnF \@abspage@last =\g_shipout_readonly_int {\@latex@warning@no@lin
e {Hook 'shipout/lastpage' executed on wrong page (\@abspage@last \space not \i
nt_use:N \g_shipout_readonly_int ).\MessageBreak Rerun to correct this}}}{\bool
_lazy_and:nnF {\hook_if_empty_p:n {shipout/lastpage}}{\tl_if_empty_p:N \@kernel
@after@shipout@lastpage }{\tex_shipout:D \vbox to\textheight {\hbox:n {\UseHook
 {shipout/lastpage}\@kernel@after@shipout@lastpage }\__shipout_excuse_extra_pag
e: \null }\cs_gset_eq:NN \@extra@page@added \relax }}

\iow_now:Nx ->\exp_args:NNx \iow_now:Nn 

\exp_args:NNx #1#2#3->\use:x {\exp_not:N #1\exp_not:N #2{#3}}
#1<-\iow_now:Nn 
#2<-\@auxout 
#3<-\gdef \string \@abspage@last {\int_use:N \g_shipout_readonly_int }

\use:x #1->\cs_set_nopar:Npx \l__exp_internal_tl {#1}\l__exp_internal_tl 
#1<-\exp_not:N \iow_now:Nn \exp_not:N \@auxout {\gdef \string \@abspage@last {\
int_use:N \g_shipout_readonly_int }}

\l__exp_internal_tl ->\iow_now:Nn \@auxout {\gdef \@abspage@last{1}}

\iow_now:Nn #1#2->\__kernel_iow_with:Nnn \tex_newlinechar:D {`\
}{\tex_immediate:D \tex_write:D #1{\exp_not:n {#2}}}
#1<-\@auxout 
#2<-\gdef \@abspage@last{1}

\__kernel_iow_with:Nnn #1#2->\int_compare:nNnTF {#1}={#2}{\use:n }{\exp_args:No
 \__iow_with:nNnn {\int_use:N #1}#1{#2}}
#1<-\tex_newlinechar:D 
#2<-`\

\int_compare:nNnTF #1#2#3->\if_int_compare:w \__int_eval:w #1#2\__int_eval:w #3
\__int_eval_end: \__prg_TF_true:w \fi: \use_ii:nn 
#1<-\tex_newlinechar:D 
#2<-=
#3<-`\

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\use:n 
#2<-\exp_args:No \__iow_with:nNnn {\int_use:N \tex_newlinechar:D }\tex_newlinec
har:D {`\
}

\use:n #1->#1
#1<-\tex_immediate:D \tex_write:D \@auxout {\exp_not:n {\gdef \@abspage@last{1}
}}

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__shipout_lastpage_handled_bool 

\use_ii:nn #1#2->#2
#1<-\int_compare:nNnF \@abspage@last =\g_shipout_readonly_int {\@latex@warning@
no@line {Hook 'shipout/lastpage' executed on wrong page (\@abspage@last \space 
not \int_use:N \g_shipout_readonly_int ).\MessageBreak Rerun to correct this}}
#2<-\bool_lazy_and:nnF {\hook_if_empty_p:n {shipout/lastpage}}{\tl_if_empty_p:N
 \@kernel@after@shipout@lastpage }{\tex_shipout:D \vbox to\textheight {\hbox:n 
{\UseHook {shipout/lastpage}\@kernel@after@shipout@lastpage }\__shipout_excuse_
extra_page: \null }\cs_gset_eq:NN \@extra@page@added \relax }

\bool_lazy_and:nnF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{\
c_false_bool }\__prg_F_true:w \fi: \use:n 
#1<-\hook_if_empty_p:n {shipout/lastpage}
#2<-\tl_if_empty_p:N \@kernel@after@shipout@lastpage 

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\hook_if_empty_p:n {shipout/lastpage}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\hook_if_empty_p:n {shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\hook_if_empty_p:n #1->\__hook_if_structure_exist:nTF {#1}{\bool_lazy_and:nnTF 
{\prop_if_empty_p:c {g__hook_#1_code_prop}}{\bool_lazy_and_p:nn {\tl_if_empty_p
:c {__hook_toplevel #1}}{\tl_if_empty_p:c {__hook_next #1}}}{\prg_return_true: 
}{\prg_return_false: }}{\prg_return_true: }\exp_end: \c_true_bool \c_false_bool
 
#1<-shipout/lastpage

\__hook_if_structure_exist:nTF #1->\prop_if_exist:cTF {g__hook_#1_code_prop}{\p
rg_return_true: }{\prg_return_false: }\exp_end: 
#1<-shipout/lastpage

\prop_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else:
 \exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \s
can_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: 
\exp_end: 
#1<-g__hook_shipout/lastpage_code_prop

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w g__hook_shipout/lastpage_code_prop\cs_end
: \scan_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\bool_lazy_and:nnTF {\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop
}}{\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\t
l_if_empty_p:c {__hook_next shipout/lastpage}}}{\prg_return_true: }{\prg_return
_false: }
#2<-\prg_return_true: 

\bool_lazy_and:nnTF #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\
tl_if_empty_p:c {__hook_next shipout/lastpage}}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\prop_if_empty_p:c {g__hook_shipout/lastpage_code_prop}

\exp_end_continue_f:w ->`^^@

\prop_if_empty_p:c ->\exp_args:Nc \prop_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_if_empty_p:N 
#2<-g__hook_shipout/lastpage_code_prop

\prop_if_empty_p:N #1->\tl_if_eq:NNTF #1\c_empty_prop \prg_return_true: \prg_re
turn_false: \exp_end: \c_true_bool \c_false_bool 
#1<-\g__hook_shipout/lastpage_code_prop 

\tl_if_eq:NNTF #1#2->\if_meaning:w #1#2\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\g__hook_shipout/lastpage_code_prop 
#2<-\c_empty_prop 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipou
t/lastpage}}{\tl_if_empty_p:c {__hook_next shipout/lastpage}}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\bool_lazy_and_p:nn {\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}}{\
tl_if_empty_p:c {__hook_next shipout/lastpage}}

\exp_end_continue_f:w ->`^^@

\bool_lazy_and_p:nn #1#2->\if_predicate:w \bool_if:nTF {#1}{\bool_if_p:n {#2}}{
\c_false_bool }\__prg_p_true:w \fi: \c_false_bool 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}
#2<-\tl_if_empty_p:c {__hook_next shipout/lastpage}

\bool_if:nTF #1->\if_predicate:w \bool_if_p:n {#1}\__prg_TF_true:w \fi: \use_ii
:nn 
#1<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_toplevel shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_toplevel shipout/lastpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_toplevel shipout/lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:c {__hook_next shipout/lastpage}}
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:c {__hook_next shipout/lastpage}

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:c ->\exp_args:Nc \tl_if_empty_p:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\tl_if_empty_p:N 
#2<-__hook_next shipout/lastpage

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\__hook_next shipout/lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\bool_if_p:n {\tl_if_empty_p:N \@kernel@after@shipout@lastpage }
#2<-\c_false_bool 

\bool_if_p:n ->\exp_args:Nf \__bool_if_p:n 

\exp_args:Nf #1#2->\exp_after:wN #1\exp_after:wN {\exp:w \exp_end_continue_f:w 
#2}
#1<-\__bool_if_p:n 
#2<-\tl_if_empty_p:N \@kernel@after@shipout@lastpage 

\exp_end_continue_f:w ->`^^@

\tl_if_empty_p:N #1->\if_meaning:w #1\c_empty_tl \__prg_p_true:w \fi: \c_false_
bool 
#1<-\@kernel@after@shipout@lastpage 

\__prg_p_true:w \fi: \c_false_bool ->\fi: \c_true_bool 

\__bool_if_p:n #1->\tl_if_empty:oT {\use_none:nn #1.}{\__bool_if_p_aux:w }\grou
p_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_end_contin
ue_f:w \__bool_get_next:NN \use_i:nnnn #1)
#1<-\c_true_bool 

\tl_if_empty:oT #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {#1}\
scan_stop: \__prg_T_true:w \fi: \use_none:n 
#1<-\use_none:nn \c_true_bool .

\use_none:nn #1#2->
#1<-\c_true_bool 
#2<-.

\__prg_T_true:w \fi: \use_none:n ->\fi: \use:n 

\use:n #1->#1
#1<-\__bool_if_p_aux:w 

\__bool_if_p_aux:w #1\use_i:nnnn #2#3->\bool_if:NTF #2\c_true_bool \c_false_boo
l 
#1<-\group_align_safe_begin: \exp_after:wN \group_align_safe_end: \exp:w \exp_e
nd_continue_f:w \__bool_get_next:NN 
#2<-\c_true_bool 
#3<-)

\bool_if:NTF #1->\if_bool:N #1\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\c_true_bool 

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\c_true_bool 
#2<-\c_false_bool 

\__prg_F_true:w \fi: \use:n ->\fi: \use_none:n 

\use_none:n #1->
#1<-\tex_shipout:D \vbox to\textheight {\hbox:n {\UseHook {shipout/lastpage}\@k
ernel@after@shipout@lastpage }\__shipout_excuse_extra_page: \null }\cs_gset_eq:
NN \@extra@page@added \relax 

\@tempswafalse ->\let \if@tempswa \iffalse 

\makeatletter ->\protect \makeatletter  

\makeatletter  ->\catcode `\@11\relax 
 (out/tl2022_rerun.aux
\bibdata #1->
#1<-tl2022_rerunNotes

\bibstyle #1->
#1<-apsrev4-2

\citation #1->
#1<-REVTEX42Control

\citation #1->
#1<-apsrev42Control

\newlabel ->\@newl@bel r

\@newl@bel #1#2#3->\def \reserved@a {#3}\expandafter \ifx \csname #1@#2\endcsna
me \reserved@a \else \@tempswatrue \fi 
#1<-r
#2<-LastPage
#3<-{}{1}{}{}{}
)
\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-enddocument/afteraux

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-enddocument/afteraux

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-enddocument/afteraux

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/afteraux

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/afteraux\cs_end: \scan
_stop: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_enddocument/afte
raux_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \
prg_return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_enddocument/afteraux_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {enddocument/afte
raux}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {enddocument/afteraux}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {enddocument/afteraux}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {enddocument/afteraux}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {enddocument/afteraux}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afteraux}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {enddocument/afteraux}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {enddocument/afteraux}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {enddocument/afteraux}}\__hook_parse_dot_l
abel:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {enddocument/afteraux}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {enddocument/afteraux}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {enddocument/afteraux}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {enddocument/afteraux}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {enddocument/afteraux}\s__tl_nil \__tl_trim_spaces_
auxiii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {enddocument/afteraux}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {enddocument/afteraux}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {enddocument/afteraux}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afteraux}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {enddocument/afteraux}}{.}{\__hook_currname_or_defa
ult: }{\__hook_parse_dot_label:w \use:n {enddocument/afteraux}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afteraux}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {enddocument/afteraux}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {enddocument/afteraux}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/afteraux}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {enddocument/afteraux}}}{\_
_hook_parse_dot_label_cleanup:w \use:n {enddocument/afteraux}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {enddocument/afteraux}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {enddocument/afteraux}./\s__hook_m
ark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {enddocument/afteraux}

\use:n #1->#1
#1<-enddocument/afteraux

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-enddocument/afteraux

\__hook_preamble_hook:n #1->
#1<-enddocument/afteraux

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-enddocument/afteraux

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_enddocument/afteraux_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_enddocument/afteraux_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-enddocument/afteraux

\__hook enddocument/afteraux ->\__hook_toplevel enddocument/afteraux \__hook_ne
xt enddocument/afteraux 

\__hook_toplevel enddocument/afteraux ->

\__hook_next enddocument/afteraux ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-enddocument/afteraux

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook enddocument/afteraux

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument/afteraux 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument/afteraux 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next enddocument/afteraux

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next enddocument/afteraux 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next enddocument/afteraux 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel enddocument/afteraux

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel enddocument/afteraux 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel enddocument/afteraux 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_enddocument/afteraux_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_enddocument/afteraux_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_enddocument/afteraux_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_enddocument/afteraux_code_prop 
#2<-\prop_new:N \g__hook_enddocument/afteraux_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_enddocument/afteraux_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_enddocument/afteraux_code_prop 
#2<-\c_empty_prop 

\UseOneTimeHook ->\hook_use_once:n 

\hook_use_once:n #1->\__hook_if_execute_immediately:nF {#1}{\__hook_normalize_h
ook_args:Nn \__hook_use_once:n {\use:n {#1}}}
#1<-enddocument/info

\__hook_if_execute_immediately:nF #1->\__hook_if_usable:nTF {#1}{\exp_after:wN 
\__hook_clean_to_scan:w \if:w I\cs:w g__hook_#1_reversed_tl\cs_end: \s__hook_ma
rk \prg_return_true: \else: \s__hook_mark \prg_return_false: \fi: }{\prg_return
_false: }\exp_end: {}
#1<-enddocument/info

\__hook_if_usable:nTF #1->\tl_if_exist:cTF {__hook #1}{\prg_return_true: }{\prg
_return_false: }\exp_end: 
#1<-enddocument/info

\tl_if_exist:cTF #1->\if_cs_exist:w #1\cs_end: \exp_after:wN \use_i:nn \else: \
exp_after:wN \use_ii:nn \fi: {\exp_after:wN \if_meaning:w \cs:w #1\cs_end: \sca
n_stop: \prg_return_false: \else: \prg_return_true: \fi: }\prg_return_false: \e
xp_end: 
#1<-__hook enddocument/info

\use_i:nn #1#2->#1
#1<-\exp_after:wN \if_meaning:w \cs:w __hook enddocument/info\cs_end: \scan_sto
p: \prg_return_false: \else: \prg_return_true: \fi: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prg_return_true: 
#2<-\prg_return_false: 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\exp_after:wN \__hook_clean_to_scan:w \if:w I\cs:w g__hook_enddocument/info
_reversed_tl\cs_end: \s__hook_mark \prg_return_true: \else: \s__hook_mark \prg_
return_false: \fi: 
#2<-\prg_return_false: 

\g__hook_enddocument/info_reversed_tl ->

\__hook_clean_to_scan:w #1\s__hook_mark ->
#1<-

\prg_return_false: ->\exp_after:wN \use_ii:nn \exp:w 

\use_ii:nn #1#2->#2
#1<-
#2<-\__hook_normalize_hook_args:Nn \__hook_use_once:n {\use:n {enddocument/info
}}

\__hook_normalize_hook_args:Nn #1#2->\__hook_normalize_hook_args_aux:Nn #1{{\__
hook_parse_label_default:n {#2}}}
#1<-\__hook_use_once:n 
#2<-\use:n {enddocument/info}

\__hook_normalize_hook_args_aux:Nn #1#2->\group_begin: \use:e {\group_end: \exp
_not:N #1#2}
#1<-\__hook_use_once:n 
#2<-{\__hook_parse_label_default:n {\use:n {enddocument/info}}}

\use:e #1->\tex_expanded:D {#1}
#1<-\group_end: \exp_not:N \__hook_use_once:n {\__hook_parse_label_default:n {\
use:n {enddocument/info}}}

\__hook_parse_label_default:n #1->\tl_if_novalue:nTF {#1}{\__hook_currname_or_d
efault: }{\tl_trim_spaces_apply:nN {#1}\__hook_parse_dot_label:n }
#1<-\use:n {enddocument/info}

\tl_if_novalue:nTF #1->\__tl_if_empty_if:o {\__tl_if_novalue:w {}#1{}?!-NoValue
-??!}\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/info}

\__tl_if_empty_if:o #1->\if:w \scan_stop: \__kernel_tl_to_str:w \exp_after:wN {
#1}\scan_stop: 
#1<-\__tl_if_novalue:w {}\use:n {enddocument/info}{}?!-NoValue-??!

\__tl_if_novalue:w #1-NoValue-#2?#3?!->#1#2
#1<-{}\use:n {enddocument/info}{}?!
#2<-
#3<-

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\tl_trim_spaces_apply:nN {\use:n {enddocument/info}}\__hook_parse_dot_label
:n 

\tl_trim_spaces_apply:nN #1#2->\__tl_trim_spaces:nn {\__tl_trim_mark: #1}{\exp_
args:No #2}
#1<-\use:n {enddocument/info}
#2<-\__hook_parse_dot_label:n 

\__tl_trim_spaces:nn #1->\__tl_trim_spaces_auxi:w #1\s__tl_nil \__tl_trim_mark:
  {}\__tl_trim_mark: \__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxiii:w  \s__
tl_nil \__tl_trim_spaces_auxiv:w \s__tl_stop 
#1<-\__tl_trim_mark: \use:n {enddocument/info}

\__tl_trim_spaces_auxi:w #1\__tl_trim_mark:  #2\__tl_trim_mark: #3->#3\__tl_tri
m_spaces_auxi:w \__tl_trim_mark: #2\__tl_trim_mark:  {#1}
#1<-\__tl_trim_mark: \use:n {enddocument/info}\s__tl_nil 
#2<-
#3<-\__tl_trim_spaces_auxii:w 

\__tl_trim_spaces_auxii:w \__tl_trim_spaces_auxi:w \__tl_trim_mark: \__tl_trim_
mark: #1->\__tl_trim_spaces_auxiii:w #1
#1<-\__tl_trim_mark: \use:n {enddocument/info}\s__tl_nil 

\__tl_trim_spaces_auxiii:w #1 \s__tl_nil #2->#2#1\s__tl_nil \__tl_trim_spaces_a
uxiii:w 
#1<-\__tl_trim_mark: \use:n {enddocument/info}\s__tl_nil \__tl_trim_spaces_auxi
ii:w 
#2<-\__tl_trim_spaces_auxiv:w 

\__tl_trim_spaces_auxiv:w #1\s__tl_nil #2\s__tl_stop #3->#3{#1}
#1<-\__tl_trim_mark: \use:n {enddocument/info}
#2<-\__tl_trim_spaces_auxiii:w \s__tl_nil \__tl_trim_spaces_auxiii:w 
#3<-\exp_args:No \__hook_parse_dot_label:n 

\exp_args:No #1#2->\exp_after:wN #1\exp_after:wN {#2}
#1<-\__hook_parse_dot_label:n 
#2<-\__tl_trim_mark: \use:n {enddocument/info}

\__tl_trim_mark: ->

\__hook_parse_dot_label:n #1->\tl_if_empty:nTF {#1}{\msg_expandable_error:nn {h
ooks}{empty-label}\__hook_currname_or_default: }{\str_if_eq:nnTF {#1}{.}{\__hoo
k_currname_or_default: }{\__hook_parse_dot_label:w #1./\s__hook_mark }}
#1<-\use:n {enddocument/info}

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/info}

\use_ii:nn #1#2->#2
#1<-\msg_expandable_error:nn {hooks}{empty-label}\__hook_currname_or_default: 
#2<-\str_if_eq:nnTF {\use:n {enddocument/info}}{.}{\__hook_currname_or_default:
 }{\__hook_parse_dot_label:w \use:n {enddocument/info}./\s__hook_mark }

\str_if_eq:nnTF #1#2->\if:w 0\__str_if_eq:nn {\exp_not:n {#1}}{\exp_not:n {#2}}
\__prg_TF_true:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/info}
#2<-.

\use_ii:nn #1#2->#2
#1<-\__hook_currname_or_default: 
#2<-\__hook_parse_dot_label:w \use:n {enddocument/info}./\s__hook_mark 

\__hook_parse_dot_label:w #1./#2\s__hook_mark ->\tl_if_empty:nTF {#1}{\__hook_p
arse_dot_label_aux:w #2\s__hook_mark }{\tl_if_empty:nTF {#2}{\__hook_make_name:
n {#1}}{\__hook_parse_dot_label_cleanup:w #1./#2\s__hook_mark }}
#1<-\use:n {enddocument/info}
#2<-

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-\use:n {enddocument/info}

\use_ii:nn #1#2->#2
#1<-\__hook_parse_dot_label_aux:w \s__hook_mark 
#2<-\tl_if_empty:nTF {}{\__hook_make_name:n {\use:n {enddocument/info}}}{\__hoo
k_parse_dot_label_cleanup:w \use:n {enddocument/info}./\s__hook_mark }

\tl_if_empty:nTF #1->\if:w \scan_stop: \tl_to_str:n {#1}\scan_stop: \__prg_TF_t
rue:w \fi: \use_ii:nn 
#1<-

\__prg_TF_true:w \fi: \use_ii:nn ->\fi: \use_i:nn 

\use_i:nn #1#2->#1
#1<-\__hook_make_name:n {\use:n {enddocument/info}}
#2<-\__hook_parse_dot_label_cleanup:w \use:n {enddocument/info}./\s__hook_mark 

\__hook_make_name:n #1->\exp_after:wN \exp_after:wN \exp_after:wN \__hook_make_
name:w \exp_after:wN \token_to_str:N \cs:w __hook #1\cs_end: 
#1<-\use:n {enddocument/info}

\use:n #1->#1
#1<-enddocument/info

\__hook_make_name:w #1__hook ->
#1<-\

\__hook_use_once:n #1->\__hook_preamble_hook:n {#1}\__hook_use_once_set:n {#1}\
__hook_use_initialized:n {#1}\__hook_use_once_clear:n {#1}
#1<-enddocument/info

\__hook_preamble_hook:n #1->
#1<-enddocument/info

\__hook_use_once_set:n #1->\__hook_tl_gset:cn {g__hook_#1_reversed_tl}{I}
#1<-enddocument/info

\__hook_tl_gset:cn ->\exp_args:Nc \__hook_tl_gset:Nn 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gset:Nn 
#2<-g__hook_enddocument/info_reversed_tl

\__hook_tl_gset:Nn #1#2->\cs_gset_nopar:Npx #1{\__kernel_exp_not:w {#2}}
#1<-\g__hook_enddocument/info_reversed_tl 
#2<-I

\__hook_use_initialized:n #1->\if_cs_exist:w __hook #1\cs_end: \cs:w __hook #1\
exp_after:wN \cs_end: \fi: 
#1<-enddocument/info

\__hook enddocument/info ->\@dofilelist \@enddocument@kernel@warnings \__hook_t
oplevel enddocument/info \__hook_next enddocument/info 

\@enddocument@kernel@warnings ->\ifdim \font@submax >\fontsubfuzz \relax \@font
@warning {Size substitutions with differences\MessageBreak up to \font@submax \
space have occurred.\@gobbletwo }\fi \@defaultsubs \@refundefined \if@filesw \i
fx \@multiplelabels \relax \if@tempswa \@latex@warning@no@line {Label(s) may ha
ve changed. Rerun to get cross-references right}\fi \else \@multiplelabels \fi 
\ifx \@extra@page@added \relax \@latex@warning@no@line {Temporary extra page ad
ded at the end. Rerun to get it removed}\fi \fi 

\font@submax ->0pt

\fontsubfuzz ->.4pt

\__hook_toplevel enddocument/info ->

\__hook_next enddocument/info ->

\__hook_use_once_clear:n #1->\__hook_tl_gclear:c {__hook #1}\__hook_tl_gclear:c
 {__hook_next #1}\__hook_tl_gclear:c {__hook_toplevel #1}\prop_gclear_new:c {g_
_hook_#1_code_prop}
#1<-enddocument/info

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook enddocument/info

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook enddocument/info 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook enddocument/info 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_next enddocument/info

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_next enddocument/info 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_next enddocument/info 
#2<-\c_empty_tl 

\__hook_tl_gclear:c ->\exp_args:Nc \__hook_tl_gclear:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\__hook_tl_gclear:N 
#2<-__hook_toplevel enddocument/info

\__hook_tl_gclear:N #1->\__hook_tl_gset_eq:NN #1\c_empty_tl 
#1<-\__hook_toplevel enddocument/info 

\__hook_tl_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\__hook_toplevel enddocument/info 
#2<-\c_empty_tl 

\prop_gclear_new:c ->\exp_args:Nc \prop_gclear_new:N 

\exp_args:Nc #1#2->\exp_after:wN #1\cs:w #2\cs_end: 
#1<-\prop_gclear_new:N 
#2<-g__hook_enddocument/info_code_prop

\prop_gclear_new:N #1->\prop_if_exist:NTF #1{\prop_gclear:N #1}{\prop_new:N #1}
#1<-\g__hook_enddocument/info_code_prop 

\prop_if_exist:NTF #1->\if_meaning:w #1\scan_stop: \prg_return_false: \else: \i
f_cs_exist:N #1\prg_return_true: \else: \prg_return_false: \fi: \fi: \exp_end: 
#1<-\g__hook_enddocument/info_code_prop 

\prg_return_true: ->\exp_after:wN \use_i:nn \exp:w 

\use_i:nn #1#2->#1
#1<-\prop_gclear:N \g__hook_enddocument/info_code_prop 
#2<-\prop_new:N \g__hook_enddocument/info_code_prop 

\prop_gclear:N #1->\prop_gset_eq:NN #1\c_empty_prop 
#1<-\g__hook_enddocument/info_code_prop 

\prop_gset_eq:NN #1#2->\tex_global:D \tex_let:D #1= #2
#1<-\g__hook_enddocument/info_code_prop 
#2<-\c_empty_prop 

\dispatch@output ->\let \par \@@par \expandafter \let \expandafter \output@proc
edure \csname output@\the \outputpenalty \endcsname \@ifnotrelax \output@proced
ure {}{\expandafter \def \expandafter \output@procedure \expandafter {\the \out
put@latex }}\expandafter \@ifx \expandafter {\csname output@-\the \execute@mess
age@pen \endcsname \output@procedure }{\let \output@procedure \@message@saved }
{}\ltxgrid@info@sw {\class@info {\string \dispatch@output }\say \output@procedu
re \saythe \holdinginserts }{}\outputdebug@sw {\output@debug }{}\output@procedu
re 

\@ifnotrelax #1#2#3->\@ifx {\relax #1}{#3}{#2}
#1<-\output@procedure 
#2<-
#3<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\relax \output@procedure 

\false@sw #1#2->#2
#1<-\expandafter \def \expandafter \output@procedure \expandafter {\the \output
@latex }
#2<-

\@ifx #1->\ifx #1\expandafter \true@sw \else \expandafter \false@sw \fi 
#1<-\output@-10019 \output@procedure 

\false@sw #1#2->#2
#1<-\let \output@procedure \@message@saved 
#2<-

\ltxgrid@info@sw #1#2->#2
#1<-\class@info {\string \dispatch@output }\say \output@procedure \saythe \hold
inginserts 
#2<-

\outputdebug@sw #1#2->#2
#1<-\output@debug 
#2<-

\output@procedure ->\deadcycles \z@ \void@cclv 

\void@cclv ->\begingroup \setbox \z@ \box \@cclv \endgroup 
 ) 
Here is how much of TeX's memory you used:
 2504 strings out of 476024
 36397 string characters out of 5790024
 1850388 words of memory out of 5000000
 23008 multiletter control sequences out of 15000+600000
 512287 words of font info for 32 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 45i,5n,53p,204b,117s stack positions out of 10000i,1000n,20000p,200000b,200000s
</usr/local/texlive/2022/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb
></usr/local/texlive/2022/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb>
Output written on out/tl2022_rerun.pdf (1 page, 17750 bytes).
PDF statistics:
 18 PDF objects out of 1000 (max. 8388607)
 10 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

